Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    LBRACKET
    ENTERO_NEG
    ALTER
    COMMIT
    CURRENT
    NAME2
    DECLARE
    ISEQUAL
    CURSOR
    OF
    PRINT
    ROLLBACK
    OPEN
    UNION
    COLON
    FOR
    HASHTAG
    WORK
    WHILE
    ORDER
    FETCH
    ASC
    ADD
    CLOSE
    LESSEQUAL
    NAME
    DATABASE
    RBLOCK
    USE
    ENTERO_POS
    GREATEREQUAL
    STRING
    LBLOCK
    MINUSMINUS
    DESC
    DATE2
    DEQUAL
    RBRACKET

Grammar

Rule 0     S' -> program
Rule 1     program -> sql_list
Rule 2     sql_list -> sql SEMICOLON
Rule 3     sql_list -> sql_list sql SEMICOLON
Rule 4     sql -> schema
Rule 5     sql -> manipulative_statement
Rule 6     sql -> schema_element
Rule 7     schema -> CREATE SCHEMA AUTHORIZATION user opt_schema_element_list
Rule 8     user -> ID
Rule 9     opt_schema_element_list -> empty
Rule 10    opt_schema_element_list -> schema_element_list
Rule 11    schema_element_list -> schema_element
Rule 12    schema_element_list -> schema_element_list schema_element
Rule 13    schema_element -> base_table_def
Rule 14    schema_element -> view_def
Rule 15    schema_element -> privilege_def
Rule 16    base_table_def -> CREATE TABLE table LPAREN base_table_element_commalist RPAREN
Rule 17    base_table_element_commalist -> base_table_element
Rule 18    base_table_element_commalist -> base_table_element_commalist COMMA base_table_element
Rule 19    base_table_element -> column_def
Rule 20    base_table_element -> constraint_def
Rule 21    base_table_element -> table_constraint_def
Rule 22    column_def -> column data_type column_def_opt_list
Rule 23    data_type -> CHAR
Rule 24    data_type -> INT IDENTITY identity
Rule 25    data_type -> CHAR LPAREN NUMBER RPAREN
Rule 26    data_type -> VARCHAR
Rule 27    data_type -> VARCHAR LPAREN NUMBER RPAREN
Rule 28    data_type -> INT
Rule 29    data_type -> FLOAT
Rule 30    data_type -> DOUBLE
Rule 31    literal -> literal ID
Rule 32    literal -> ID
Rule 33    literal -> literal NUMBER
Rule 34    literal -> NUMBER
Rule 35    identity -> LPAREN literal COMMA literal RPAREN
Rule 36    column_def_opt_list -> column_def_opt_list column_def_opt
Rule 37    column_def_opt_list -> column_def_opt
Rule 38    column_def_opt -> empty
Rule 39    column_def_opt -> NOT NULL
Rule 40    column_def_opt -> NULL
Rule 41    column_def_opt -> NOT NULL UNIQUE
Rule 42    column_def_opt -> NOT NULL PRIMARY KEY
Rule 43    column_def_opt -> DEFAULT NULL
Rule 44    column_def_opt -> DEFAULT USER
Rule 45    column_def_opt -> CHECK LPAREN search_condition RPAREN
Rule 46    column_def_opt -> REFERENCES table
Rule 47    column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN
Rule 48    search_condition -> search_condition OR search_condition
Rule 49    search_condition -> search_condition AND search_condition
Rule 50    search_condition -> NOT search_condition
Rule 51    search_condition -> LPAREN search_condition RPAREN
Rule 52    search_condition -> predicate
Rule 53    predicate -> comparison_predicate
Rule 54    predicate -> between_predicate
Rule 55    predicate -> like_predicate
Rule 56    predicate -> test_for_null
Rule 57    predicate -> in_predicate
Rule 58    predicate -> all_cr_any_predicate
Rule 59    predicate -> existence_test
Rule 60    comparison_predicate -> scalar_exp COMPARISON scalar_exp
Rule 61    comparison_predicate -> scalar_exp COMPARISON subquery
Rule 62    subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN
Rule 63    between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
Rule 64    between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp
Rule 65    like_predicate -> scalar_exp NOT LIKE atom empty
Rule 66    like_predicate -> scalar_exp LIKE atom empty
Rule 67    test_for_null -> column_ref IS NOT NULL
Rule 68    test_for_null -> column_ref IS NULL
Rule 69    in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN
Rule 70    in_predicate -> scalar_exp IN LPAREN subquery RPAREN
Rule 71    in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN
Rule 72    in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN
Rule 73    atom_commalist -> atom
Rule 74    atom_commalist -> atom_commalist COMMA atom
Rule 75    all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery
Rule 76    any_all_some -> ANY
Rule 77    any_all_some -> ALL
Rule 78    any_all_some -> SOME
Rule 79    existence_test -> EXISTS subquery
Rule 80    column_commalist -> empty
Rule 81    column_commalist -> column
Rule 82    column_commalist -> column_commalist COMMA column
Rule 83    column_commalist -> LPAREN column_commalist RPAREN
Rule 84    constraint_def -> CONSTRAINT ID table_constraint_def
Rule 85    table_constraint_def -> UNIQUE LPAREN column_commalist RPAREN
Rule 86    table_constraint_def -> PRIMARY KEY LPAREN column_commalist RPAREN
Rule 87    table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table
Rule 88    table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN
Rule 89    table_constraint_def -> CHECK LPAREN search_condition RPAREN
Rule 90    view_def -> CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option
Rule 91    opt_column_commalist -> empty
Rule 92    opt_column_commalist -> LPAREN column_commalist RPAREN
Rule 93    query_spec -> SELECT opt_all_distinct FROM selection table_exp
Rule 94    opt_with_check_option -> empty
Rule 95    opt_with_check_option -> WITH CHECK OPTION
Rule 96    opt_all_distinct -> empty
Rule 97    opt_all_distinct -> ALL
Rule 98    opt_all_distinct -> DISTINCT
Rule 99    selection -> scalar_exp_commalist
Rule 100   selection -> TIMES
Rule 101   scalar_exp_commalist -> scalar_exp
Rule 102   scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp
Rule 103   table_exp -> from_clause
Rule 104   table_exp -> opt_where_clause
Rule 105   table_exp -> opt_group_by_clause
Rule 106   from_clause -> FROM table_ref_commalist
Rule 107   table_ref_commalist -> table_ref
Rule 108   table_ref_commalist -> table_ref_commalist COMMA table_ref
Rule 109   table_ref -> table
Rule 110   table_ref -> table range_variable
Rule 111   range_variable -> ID
Rule 112   opt_where_clause -> empty
Rule 113   opt_where_clause -> where_clause
Rule 114   where_clause -> search_condition
Rule 115   opt_group_by_clause -> empty
Rule 116   opt_group_by_clause -> GROUP BY column_ref_commalist
Rule 117   column_ref_commalist -> column_ref
Rule 118   column_ref_commalist -> column_ref_commalist COMMA column_ref
Rule 119   scalar_exp -> scalar_exp PLUS scalar_exp
Rule 120   scalar_exp -> scalar_exp MINUS scalar_exp
Rule 121   scalar_exp -> scalar_exp EQUAL scalar_exp
Rule 122   scalar_exp -> scalar_exp TIMES scalar_exp
Rule 123   scalar_exp -> scalar_exp DIVIDE scalar_exp
Rule 124   scalar_exp -> atom
Rule 125   scalar_exp -> column_ref
Rule 126   scalar_exp -> function_ref
Rule 127   scalar_exp -> LPAREN scalar_exp RPAREN
Rule 128   column_ref -> ID
Rule 129   column_ref -> ID DOT ID
Rule 130   column_ref -> ID DOT ID DOT ID
Rule 131   function_ref -> AMMSC LPAREN TIMES RPAREN
Rule 132   function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN
Rule 133   function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN
Rule 134   function_ref -> AMMSC LPAREN scalar_exp RPAREN
Rule 135   privilege_def -> GRANT privileges ON table TO grantee_commalist opt_with_grant_option
Rule 136   opt_with_grant_option -> empty
Rule 137   opt_with_grant_option -> WITH GRANT OPTION
Rule 138   privileges -> ALL PRIVILEGES
Rule 139   privileges -> ALL
Rule 140   privileges -> operation_commalist
Rule 141   operation_commalist -> operation
Rule 142   operation_commalist -> operation_commalist COMMA operation
Rule 143   operation -> SELECT
Rule 144   operation -> INSERT
Rule 145   operation -> DELETE
Rule 146   operation -> UPDATE opt_column_commalist
Rule 147   operation -> REFERENCES opt_column_commalist
Rule 148   grantee_commalist -> grantee
Rule 149   grantee_commalist -> grantee_commalist COMMA grantee
Rule 150   grantee -> PUBLIC
Rule 151   grantee -> user
Rule 152   atom -> QUOTE parameter_ref QUOTE
Rule 153   atom -> NUMBER
Rule 154   atom -> QUOTE DATE1 QUOTE
Rule 155   atom -> QUOTE USER QUOTE
Rule 156   parameter_ref -> parameter
Rule 157   parameter_ref -> parameter_ref parameter
Rule 158   parameter_ref -> parameter INDICATOR parameter
Rule 159   parameter -> ID
Rule 160   manipulative_statement -> <empty>
Rule 161   manipulative_statement -> delete_statement
Rule 162   manipulative_statement -> insert_statement
Rule 163   manipulative_statement -> select_statement
Rule 164   manipulative_statement -> update_statement
Rule 165   manipulative_statement -> drop_table
Rule 166   update_statement -> UPDATE table SET assignment_commalist WHERE search_condition
Rule 167   update_statement -> UPDATE table SET assignment_commalist WHERE assignment_commalist assign_cond
Rule 168   update_statement -> UPDATE table SET assignment_commalist opt_where_clause
Rule 169   drop_table -> DROP TABLE table
Rule 170   delete_statement -> DELETE FROM table opt_where_clause
Rule 171   insert_statement -> INSERT INTO table opt_column_commalist values_or_query_spec
Rule 172   values_or_query_spec -> VALUES LPAREN insert_atom_commalist RPAREN
Rule 173   values_or_query_spec -> query_spec
Rule 174   insert_atom_commalist -> insert_atom
Rule 175   insert_atom_commalist -> insert_atom_commalist COMMA insert_atom
Rule 176   insert_atom -> atom
Rule 177   insert_atom -> NULL
Rule 178   select_statement -> SELECT opt_all_distinct selection INTO target_commalist table_exp
Rule 179   select_statement -> SELECT TIMES FROM table WHERE assignment_commalist assign_cond
Rule 180   select_statement -> SELECT TIMES FROM table SEMICOLON
Rule 181   select_statement -> SELECT TIMES FROM table PLUSPLUS
Rule 182   target_commalist -> target
Rule 183   target_commalist -> target_commalist COMMA target
Rule 184   target -> parameter_ref
Rule 185   assignment_commalist -> assignment
Rule 186   assignment_commalist -> assignment_commalist COMMA assignment
Rule 187   assignment -> column EQUAL scalar_exp
Rule 188   assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
Rule 189   assignment -> column LESS scalar_exp
Rule 190   assignment -> column GREATER scalar_exp
Rule 191   assignment -> column EQUAL NULL
Rule 192   assign_cond -> assign_cond cond assignment_commalist
Rule 193   assign_cond -> cond assignment_commalist
Rule 194   cond -> cond OR
Rule 195   cond -> cond AND
Rule 196   cond -> cond AMPERSANT AMPERSANT
Rule 197   cond -> AND
Rule 198   cond -> OR
Rule 199   cond -> AMPERSANT AMPERSANT
Rule 200   column -> ID
Rule 201   table -> ID
Rule 202   table -> ID DOT ID
Rule 203   empty -> <empty>

Terminals, with rules where they appear

ADD                  : 
ALL                  : 77 97 133 138 139
ALTER                : 
AMMSC                : 131 132 133 134
AMPERSANT            : 188 188 196 196 199 199
AND                  : 49 63 64 195 197
ANY                  : 76
AS                   : 90
ASC                  : 
AUTHORIZATION        : 7
BETWEEN              : 63 64
BY                   : 116
CHAR                 : 23 25
CHECK                : 45 89 95
CLOSE                : 
COLON                : 
COMMA                : 18 35 74 82 102 108 118 142 149 175 183 186
COMMIT               : 
COMPARISON           : 60 61 75
CONSTRAINT           : 84
CREATE               : 7 16 90
CURRENT              : 
CURSOR               : 
DATABASE             : 
DATE1                : 154
DATE2                : 
DECLARE              : 
DEFAULT              : 43 44
DELETE               : 145 170
DEQUAL               : 
DESC                 : 
DISTINCT             : 98 132
DIVIDE               : 123
DOT                  : 129 130 130 202
DOUBLE               : 30
DROP                 : 169
ENTERO_NEG           : 
ENTERO_POS           : 
EQUAL                : 121 187 191
EXISTS               : 79
FETCH                : 
FLOAT                : 29
FOR                  : 
FOREIGN              : 87 88
FROM                 : 93 106 170 179 180 181
GRANT                : 135 137
GREATER              : 190
GREATEREQUAL         : 
GROUP                : 116
HASHTAG              : 
ID                   : 8 31 32 84 111 128 129 129 130 130 130 159 200 201 202 202
IDENTITY             : 24
IN                   : 69 70 71 72
INDICATOR            : 158
INSERT               : 144 171
INT                  : 24 28
INTO                 : 171 178
IS                   : 67 68
ISEQUAL              : 
KEY                  : 42 86 87 88
LBLOCK               : 
LBRACKET             : 
LESS                 : 189
LESSEQUAL            : 
LIKE                 : 65 66
LPAREN               : 16 25 27 35 45 47 51 62 69 70 71 72 83 85 86 87 88 88 89 92 127 131 132 133 134 172 188
MINUS                : 120
MINUSMINUS           : 
NAME                 : 
NAME2                : 
NOT                  : 39 41 42 50 63 65 67 69 71
NULL                 : 39 40 41 42 43 67 68 177 191
NUMBER               : 25 27 33 34 153
OF                   : 
ON                   : 135
OPEN                 : 
OPTION               : 95 137
OR                   : 48 194 198
ORDER                : 
PLUS                 : 119
PLUSPLUS             : 181
PRIMARY              : 42 86
PRINT                : 
PRIVILEGES           : 138
PUBLIC               : 150
QUOTE                : 152 152 154 154 155 155
RBLOCK               : 
RBRACKET             : 
REFERENCES           : 46 47 87 88 147
ROLLBACK             : 
RPAREN               : 16 25 27 35 45 47 51 62 69 70 71 72 83 85 86 87 88 88 89 92 127 131 132 133 134 172 188
SCHEMA               : 7
SELECT               : 62 93 143 178 179 180 181
SEMICOLON            : 2 3 180
SET                  : 166 167 168
SOME                 : 78
STRING               : 
TABLE                : 16 169
TIMES                : 100 122 131 179 180 181
TO                   : 135
UNION                : 
UNIQUE               : 41 85
UPDATE               : 146 166 167 168
USE                  : 
USER                 : 44 155
VALUES               : 172
VARCHAR              : 26 27
VIEW                 : 90
WHERE                : 166 167 179
WHILE                : 
WITH                 : 95 137
WORK                 : 
error                : 

Nonterminals, with rules where they appear

all_cr_any_predicate : 58
any_all_some         : 75
assign_cond          : 167 179 192
assignment           : 185 186
assignment_commalist : 166 167 167 168 179 186 188 188 192 193
atom                 : 65 66 73 74 124 176
atom_commalist       : 71 72 74
base_table_def       : 13
base_table_element   : 17 18
base_table_element_commalist : 16 18
between_predicate    : 54
column               : 22 81 82 187 189 190 191
column_commalist     : 47 82 83 85 86 87 88 88 92
column_def           : 19
column_def_opt       : 36 37
column_def_opt_list  : 22 36
column_ref           : 67 68 117 118 125 132
column_ref_commalist : 116 118
comparison_predicate : 53
cond                 : 192 193 194 195 196
constraint_def       : 20
data_type            : 22
delete_statement     : 161
drop_table           : 165
empty                : 9 38 65 66 80 91 94 96 112 115 136
existence_test       : 59
from_clause          : 103
function_ref         : 126
grantee              : 148 149
grantee_commalist    : 135 149
identity             : 24
in_predicate         : 57
insert_atom          : 174 175
insert_atom_commalist : 172 175
insert_statement     : 162
like_predicate       : 55
literal              : 31 33 35 35
manipulative_statement : 5
operation            : 141 142
operation_commalist  : 140 142
opt_all_distinct     : 62 93 178
opt_column_commalist : 90 146 147 171
opt_group_by_clause  : 105
opt_schema_element_list : 7
opt_where_clause     : 104 168 170
opt_with_check_option : 90
opt_with_grant_option : 135
parameter            : 156 157 158 158
parameter_ref        : 152 157 184
predicate            : 52
privilege_def        : 15
privileges           : 135
program              : 0
query_spec           : 90 173
range_variable       : 110
scalar_exp           : 60 60 61 63 63 63 64 64 64 65 66 69 70 71 72 75 101 102 119 119 120 120 121 121 122 122 123 123 127 133 134 187 189 190
scalar_exp_commalist : 99 102
schema               : 4
schema_element       : 6 11 12
schema_element_list  : 10 12
search_condition     : 45 48 48 49 49 50 51 89 114 166
select_statement     : 163
selection            : 62 93 178
sql                  : 2 3
sql_list             : 1 3
subquery             : 61 69 70 75 79
table                : 16 46 47 87 88 90 109 110 135 166 167 168 169 170 171 179 180 181
table_constraint_def : 21 84
table_exp            : 62 93 178
table_ref            : 107 108
table_ref_commalist  : 106 108
target               : 182 183
target_commalist     : 178 183
test_for_null        : 56
update_statement     : 164
user                 : 7 151
values_or_query_spec : 171
view_def             : 14
where_clause         : 113

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . sql_list
    (2) sql_list -> . sql SEMICOLON
    (3) sql_list -> . sql_list sql SEMICOLON
    (4) sql -> . schema
    (5) sql -> . manipulative_statement
    (6) sql -> . schema_element
    (7) schema -> . CREATE SCHEMA AUTHORIZATION user opt_schema_element_list
    (160) manipulative_statement -> .
    (161) manipulative_statement -> . delete_statement
    (162) manipulative_statement -> . insert_statement
    (163) manipulative_statement -> . select_statement
    (164) manipulative_statement -> . update_statement
    (165) manipulative_statement -> . drop_table
    (13) schema_element -> . base_table_def
    (14) schema_element -> . view_def
    (15) schema_element -> . privilege_def
    (170) delete_statement -> . DELETE FROM table opt_where_clause
    (171) insert_statement -> . INSERT INTO table opt_column_commalist values_or_query_spec
    (178) select_statement -> . SELECT opt_all_distinct selection INTO target_commalist table_exp
    (179) select_statement -> . SELECT TIMES FROM table WHERE assignment_commalist assign_cond
    (180) select_statement -> . SELECT TIMES FROM table SEMICOLON
    (181) select_statement -> . SELECT TIMES FROM table PLUSPLUS
    (166) update_statement -> . UPDATE table SET assignment_commalist WHERE search_condition
    (167) update_statement -> . UPDATE table SET assignment_commalist WHERE assignment_commalist assign_cond
    (168) update_statement -> . UPDATE table SET assignment_commalist opt_where_clause
    (169) drop_table -> . DROP TABLE table
    (16) base_table_def -> . CREATE TABLE table LPAREN base_table_element_commalist RPAREN
    (90) view_def -> . CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option
    (135) privilege_def -> . GRANT privileges ON table TO grantee_commalist opt_with_grant_option

    CREATE          shift and go to state 8
    SEMICOLON       reduce using rule 160 (manipulative_statement -> .)
    DELETE          shift and go to state 20
    INSERT          shift and go to state 6
    SELECT          shift and go to state 5
    UPDATE          shift and go to state 14
    DROP            shift and go to state 9
    GRANT           shift and go to state 2

    program                        shift and go to state 1
    drop_table                     shift and go to state 4
    manipulative_statement         shift and go to state 7
    delete_statement               shift and go to state 10
    schema                         shift and go to state 3
    update_statement               shift and go to state 11
    privilege_def                  shift and go to state 12
    base_table_def                 shift and go to state 13
    select_statement               shift and go to state 15
    sql                            shift and go to state 16
    insert_statement               shift and go to state 17
    view_def                       shift and go to state 18
    schema_element                 shift and go to state 19
    sql_list                       shift and go to state 21

state 1

    (0) S' -> program .



state 2

    (135) privilege_def -> GRANT . privileges ON table TO grantee_commalist opt_with_grant_option
    (138) privileges -> . ALL PRIVILEGES
    (139) privileges -> . ALL
    (140) privileges -> . operation_commalist
    (141) operation_commalist -> . operation
    (142) operation_commalist -> . operation_commalist COMMA operation
    (143) operation -> . SELECT
    (144) operation -> . INSERT
    (145) operation -> . DELETE
    (146) operation -> . UPDATE opt_column_commalist
    (147) operation -> . REFERENCES opt_column_commalist

    ALL             shift and go to state 24
    SELECT          shift and go to state 29
    INSERT          shift and go to state 25
    DELETE          shift and go to state 30
    UPDATE          shift and go to state 22
    REFERENCES      shift and go to state 27

    privileges                     shift and go to state 23
    operation_commalist            shift and go to state 26
    operation                      shift and go to state 28

state 3

    (4) sql -> schema .

    SEMICOLON       reduce using rule 4 (sql -> schema .)


state 4

    (165) manipulative_statement -> drop_table .

    SEMICOLON       reduce using rule 165 (manipulative_statement -> drop_table .)


state 5

    (178) select_statement -> SELECT . opt_all_distinct selection INTO target_commalist table_exp
    (179) select_statement -> SELECT . TIMES FROM table WHERE assignment_commalist assign_cond
    (180) select_statement -> SELECT . TIMES FROM table SEMICOLON
    (181) select_statement -> SELECT . TIMES FROM table PLUSPLUS
    (96) opt_all_distinct -> . empty
    (97) opt_all_distinct -> . ALL
    (98) opt_all_distinct -> . DISTINCT
    (203) empty -> .

  ! shift/reduce conflict for TIMES resolved as shift
    TIMES           shift and go to state 33
    ALL             shift and go to state 31
    DISTINCT        shift and go to state 34
    LPAREN          reduce using rule 203 (empty -> .)
    QUOTE           reduce using rule 203 (empty -> .)
    NUMBER          reduce using rule 203 (empty -> .)
    ID              reduce using rule 203 (empty -> .)
    AMMSC           reduce using rule 203 (empty -> .)

  ! TIMES           [ reduce using rule 203 (empty -> .) ]

    opt_all_distinct               shift and go to state 32
    empty                          shift and go to state 35

state 6

    (171) insert_statement -> INSERT . INTO table opt_column_commalist values_or_query_spec

    INTO            shift and go to state 36


state 7

    (5) sql -> manipulative_statement .

    SEMICOLON       reduce using rule 5 (sql -> manipulative_statement .)


state 8

    (7) schema -> CREATE . SCHEMA AUTHORIZATION user opt_schema_element_list
    (16) base_table_def -> CREATE . TABLE table LPAREN base_table_element_commalist RPAREN
    (90) view_def -> CREATE . VIEW table opt_column_commalist AS query_spec opt_with_check_option

    SCHEMA          shift and go to state 39
    TABLE           shift and go to state 37
    VIEW            shift and go to state 38


state 9

    (169) drop_table -> DROP . TABLE table

    TABLE           shift and go to state 40


state 10

    (161) manipulative_statement -> delete_statement .

    SEMICOLON       reduce using rule 161 (manipulative_statement -> delete_statement .)


state 11

    (164) manipulative_statement -> update_statement .

    SEMICOLON       reduce using rule 164 (manipulative_statement -> update_statement .)


state 12

    (15) schema_element -> privilege_def .

    CREATE          reduce using rule 15 (schema_element -> privilege_def .)
    GRANT           reduce using rule 15 (schema_element -> privilege_def .)
    SEMICOLON       reduce using rule 15 (schema_element -> privilege_def .)


state 13

    (13) schema_element -> base_table_def .

    CREATE          reduce using rule 13 (schema_element -> base_table_def .)
    GRANT           reduce using rule 13 (schema_element -> base_table_def .)
    SEMICOLON       reduce using rule 13 (schema_element -> base_table_def .)


state 14

    (166) update_statement -> UPDATE . table SET assignment_commalist WHERE search_condition
    (167) update_statement -> UPDATE . table SET assignment_commalist WHERE assignment_commalist assign_cond
    (168) update_statement -> UPDATE . table SET assignment_commalist opt_where_clause
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 41

state 15

    (163) manipulative_statement -> select_statement .

    SEMICOLON       reduce using rule 163 (manipulative_statement -> select_statement .)


state 16

    (2) sql_list -> sql . SEMICOLON

    SEMICOLON       shift and go to state 43


state 17

    (162) manipulative_statement -> insert_statement .

    SEMICOLON       reduce using rule 162 (manipulative_statement -> insert_statement .)


state 18

    (14) schema_element -> view_def .

    CREATE          reduce using rule 14 (schema_element -> view_def .)
    GRANT           reduce using rule 14 (schema_element -> view_def .)
    SEMICOLON       reduce using rule 14 (schema_element -> view_def .)


state 19

    (6) sql -> schema_element .

    SEMICOLON       reduce using rule 6 (sql -> schema_element .)


state 20

    (170) delete_statement -> DELETE . FROM table opt_where_clause

    FROM            shift and go to state 44


state 21

    (1) program -> sql_list .
    (3) sql_list -> sql_list . sql SEMICOLON
    (4) sql -> . schema
    (5) sql -> . manipulative_statement
    (6) sql -> . schema_element
    (7) schema -> . CREATE SCHEMA AUTHORIZATION user opt_schema_element_list
    (160) manipulative_statement -> .
    (161) manipulative_statement -> . delete_statement
    (162) manipulative_statement -> . insert_statement
    (163) manipulative_statement -> . select_statement
    (164) manipulative_statement -> . update_statement
    (165) manipulative_statement -> . drop_table
    (13) schema_element -> . base_table_def
    (14) schema_element -> . view_def
    (15) schema_element -> . privilege_def
    (170) delete_statement -> . DELETE FROM table opt_where_clause
    (171) insert_statement -> . INSERT INTO table opt_column_commalist values_or_query_spec
    (178) select_statement -> . SELECT opt_all_distinct selection INTO target_commalist table_exp
    (179) select_statement -> . SELECT TIMES FROM table WHERE assignment_commalist assign_cond
    (180) select_statement -> . SELECT TIMES FROM table SEMICOLON
    (181) select_statement -> . SELECT TIMES FROM table PLUSPLUS
    (166) update_statement -> . UPDATE table SET assignment_commalist WHERE search_condition
    (167) update_statement -> . UPDATE table SET assignment_commalist WHERE assignment_commalist assign_cond
    (168) update_statement -> . UPDATE table SET assignment_commalist opt_where_clause
    (169) drop_table -> . DROP TABLE table
    (16) base_table_def -> . CREATE TABLE table LPAREN base_table_element_commalist RPAREN
    (90) view_def -> . CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option
    (135) privilege_def -> . GRANT privileges ON table TO grantee_commalist opt_with_grant_option

    $end            reduce using rule 1 (program -> sql_list .)
    CREATE          shift and go to state 8
    SEMICOLON       reduce using rule 160 (manipulative_statement -> .)
    DELETE          shift and go to state 20
    INSERT          shift and go to state 6
    SELECT          shift and go to state 5
    UPDATE          shift and go to state 14
    DROP            shift and go to state 9
    GRANT           shift and go to state 2

    drop_table                     shift and go to state 4
    manipulative_statement         shift and go to state 7
    delete_statement               shift and go to state 10
    schema                         shift and go to state 3
    update_statement               shift and go to state 11
    privilege_def                  shift and go to state 12
    base_table_def                 shift and go to state 13
    select_statement               shift and go to state 15
    sql                            shift and go to state 45
    insert_statement               shift and go to state 17
    view_def                       shift and go to state 18
    schema_element                 shift and go to state 19

state 22

    (146) operation -> UPDATE . opt_column_commalist
    (91) opt_column_commalist -> . empty
    (92) opt_column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .

    LPAREN          shift and go to state 46
    COMMA           reduce using rule 203 (empty -> .)
    ON              reduce using rule 203 (empty -> .)

    opt_column_commalist           shift and go to state 47
    empty                          shift and go to state 48

state 23

    (135) privilege_def -> GRANT privileges . ON table TO grantee_commalist opt_with_grant_option

    ON              shift and go to state 49


state 24

    (138) privileges -> ALL . PRIVILEGES
    (139) privileges -> ALL .

    PRIVILEGES      shift and go to state 50
    ON              reduce using rule 139 (privileges -> ALL .)


state 25

    (144) operation -> INSERT .

    COMMA           reduce using rule 144 (operation -> INSERT .)
    ON              reduce using rule 144 (operation -> INSERT .)


state 26

    (140) privileges -> operation_commalist .
    (142) operation_commalist -> operation_commalist . COMMA operation

    ON              reduce using rule 140 (privileges -> operation_commalist .)
    COMMA           shift and go to state 51


state 27

    (147) operation -> REFERENCES . opt_column_commalist
    (91) opt_column_commalist -> . empty
    (92) opt_column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .

    LPAREN          shift and go to state 46
    COMMA           reduce using rule 203 (empty -> .)
    ON              reduce using rule 203 (empty -> .)

    opt_column_commalist           shift and go to state 52
    empty                          shift and go to state 48

state 28

    (141) operation_commalist -> operation .

    COMMA           reduce using rule 141 (operation_commalist -> operation .)
    ON              reduce using rule 141 (operation_commalist -> operation .)


state 29

    (143) operation -> SELECT .

    COMMA           reduce using rule 143 (operation -> SELECT .)
    ON              reduce using rule 143 (operation -> SELECT .)


state 30

    (145) operation -> DELETE .

    COMMA           reduce using rule 145 (operation -> DELETE .)
    ON              reduce using rule 145 (operation -> DELETE .)


state 31

    (97) opt_all_distinct -> ALL .

    FROM            reduce using rule 97 (opt_all_distinct -> ALL .)
    TIMES           reduce using rule 97 (opt_all_distinct -> ALL .)
    LPAREN          reduce using rule 97 (opt_all_distinct -> ALL .)
    QUOTE           reduce using rule 97 (opt_all_distinct -> ALL .)
    NUMBER          reduce using rule 97 (opt_all_distinct -> ALL .)
    ID              reduce using rule 97 (opt_all_distinct -> ALL .)
    AMMSC           reduce using rule 97 (opt_all_distinct -> ALL .)


state 32

    (178) select_statement -> SELECT opt_all_distinct . selection INTO target_commalist table_exp
    (99) selection -> . scalar_exp_commalist
    (100) selection -> . TIMES
    (101) scalar_exp_commalist -> . scalar_exp
    (102) scalar_exp_commalist -> . scalar_exp_commalist COMMA scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    TIMES           shift and go to state 60
    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    selection                      shift and go to state 53
    scalar_exp_commalist           shift and go to state 54
    scalar_exp                     shift and go to state 63
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56
    column_ref                     shift and go to state 62

state 33

    (179) select_statement -> SELECT TIMES . FROM table WHERE assignment_commalist assign_cond
    (180) select_statement -> SELECT TIMES . FROM table SEMICOLON
    (181) select_statement -> SELECT TIMES . FROM table PLUSPLUS

    FROM            shift and go to state 65


state 34

    (98) opt_all_distinct -> DISTINCT .

    FROM            reduce using rule 98 (opt_all_distinct -> DISTINCT .)
    TIMES           reduce using rule 98 (opt_all_distinct -> DISTINCT .)
    LPAREN          reduce using rule 98 (opt_all_distinct -> DISTINCT .)
    QUOTE           reduce using rule 98 (opt_all_distinct -> DISTINCT .)
    NUMBER          reduce using rule 98 (opt_all_distinct -> DISTINCT .)
    ID              reduce using rule 98 (opt_all_distinct -> DISTINCT .)
    AMMSC           reduce using rule 98 (opt_all_distinct -> DISTINCT .)


state 35

    (96) opt_all_distinct -> empty .

    FROM            reduce using rule 96 (opt_all_distinct -> empty .)
    TIMES           reduce using rule 96 (opt_all_distinct -> empty .)
    LPAREN          reduce using rule 96 (opt_all_distinct -> empty .)
    QUOTE           reduce using rule 96 (opt_all_distinct -> empty .)
    NUMBER          reduce using rule 96 (opt_all_distinct -> empty .)
    ID              reduce using rule 96 (opt_all_distinct -> empty .)
    AMMSC           reduce using rule 96 (opt_all_distinct -> empty .)


state 36

    (171) insert_statement -> INSERT INTO . table opt_column_commalist values_or_query_spec
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 66

state 37

    (16) base_table_def -> CREATE TABLE . table LPAREN base_table_element_commalist RPAREN
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 67

state 38

    (90) view_def -> CREATE VIEW . table opt_column_commalist AS query_spec opt_with_check_option
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 68

state 39

    (7) schema -> CREATE SCHEMA . AUTHORIZATION user opt_schema_element_list

    AUTHORIZATION   shift and go to state 69


state 40

    (169) drop_table -> DROP TABLE . table
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 70

state 41

    (166) update_statement -> UPDATE table . SET assignment_commalist WHERE search_condition
    (167) update_statement -> UPDATE table . SET assignment_commalist WHERE assignment_commalist assign_cond
    (168) update_statement -> UPDATE table . SET assignment_commalist opt_where_clause

    SET             shift and go to state 71


state 42

    (201) table -> ID .
    (202) table -> ID . DOT ID

    TO              reduce using rule 201 (table -> ID .)
    LPAREN          reduce using rule 201 (table -> ID .)
    AS              reduce using rule 201 (table -> ID .)
    ID              reduce using rule 201 (table -> ID .)
    COMMA           reduce using rule 201 (table -> ID .)
    SEMICOLON       reduce using rule 201 (table -> ID .)
    WITH            reduce using rule 201 (table -> ID .)
    CREATE          reduce using rule 201 (table -> ID .)
    GRANT           reduce using rule 201 (table -> ID .)
    RPAREN          reduce using rule 201 (table -> ID .)
    VALUES          reduce using rule 201 (table -> ID .)
    SELECT          reduce using rule 201 (table -> ID .)
    WHERE           reduce using rule 201 (table -> ID .)
    PLUSPLUS        reduce using rule 201 (table -> ID .)
    NOT             reduce using rule 201 (table -> ID .)
    NULL            reduce using rule 201 (table -> ID .)
    DEFAULT         reduce using rule 201 (table -> ID .)
    CHECK           reduce using rule 201 (table -> ID .)
    REFERENCES      reduce using rule 201 (table -> ID .)
    EXISTS          reduce using rule 201 (table -> ID .)
    QUOTE           reduce using rule 201 (table -> ID .)
    NUMBER          reduce using rule 201 (table -> ID .)
    AMMSC           reduce using rule 201 (table -> ID .)
    SET             reduce using rule 201 (table -> ID .)
    DOT             shift and go to state 72


state 43

    (2) sql_list -> sql SEMICOLON .

    CREATE          reduce using rule 2 (sql_list -> sql SEMICOLON .)
    DELETE          reduce using rule 2 (sql_list -> sql SEMICOLON .)
    INSERT          reduce using rule 2 (sql_list -> sql SEMICOLON .)
    SELECT          reduce using rule 2 (sql_list -> sql SEMICOLON .)
    UPDATE          reduce using rule 2 (sql_list -> sql SEMICOLON .)
    DROP            reduce using rule 2 (sql_list -> sql SEMICOLON .)
    GRANT           reduce using rule 2 (sql_list -> sql SEMICOLON .)
    SEMICOLON       reduce using rule 2 (sql_list -> sql SEMICOLON .)
    $end            reduce using rule 2 (sql_list -> sql SEMICOLON .)


state 44

    (170) delete_statement -> DELETE FROM . table opt_where_clause
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 73

state 45

    (3) sql_list -> sql_list sql . SEMICOLON

    SEMICOLON       shift and go to state 74


state 46

    (92) opt_column_commalist -> LPAREN . column_commalist RPAREN
    (80) column_commalist -> . empty
    (81) column_commalist -> . column
    (82) column_commalist -> . column_commalist COMMA column
    (83) column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .
    (200) column -> . ID

    LPAREN          shift and go to state 77
    RPAREN          reduce using rule 203 (empty -> .)
    COMMA           reduce using rule 203 (empty -> .)
    ID              shift and go to state 78

    column                         shift and go to state 75
    empty                          shift and go to state 79
    column_commalist               shift and go to state 76

state 47

    (146) operation -> UPDATE opt_column_commalist .

    COMMA           reduce using rule 146 (operation -> UPDATE opt_column_commalist .)
    ON              reduce using rule 146 (operation -> UPDATE opt_column_commalist .)


state 48

    (91) opt_column_commalist -> empty .

    AS              reduce using rule 91 (opt_column_commalist -> empty .)
    COMMA           reduce using rule 91 (opt_column_commalist -> empty .)
    ON              reduce using rule 91 (opt_column_commalist -> empty .)
    VALUES          reduce using rule 91 (opt_column_commalist -> empty .)
    SELECT          reduce using rule 91 (opt_column_commalist -> empty .)


state 49

    (135) privilege_def -> GRANT privileges ON . table TO grantee_commalist opt_with_grant_option
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 80

state 50

    (138) privileges -> ALL PRIVILEGES .

    ON              reduce using rule 138 (privileges -> ALL PRIVILEGES .)


state 51

    (142) operation_commalist -> operation_commalist COMMA . operation
    (143) operation -> . SELECT
    (144) operation -> . INSERT
    (145) operation -> . DELETE
    (146) operation -> . UPDATE opt_column_commalist
    (147) operation -> . REFERENCES opt_column_commalist

    SELECT          shift and go to state 29
    INSERT          shift and go to state 25
    DELETE          shift and go to state 30
    UPDATE          shift and go to state 22
    REFERENCES      shift and go to state 27

    operation                      shift and go to state 81

state 52

    (147) operation -> REFERENCES opt_column_commalist .

    COMMA           reduce using rule 147 (operation -> REFERENCES opt_column_commalist .)
    ON              reduce using rule 147 (operation -> REFERENCES opt_column_commalist .)


state 53

    (178) select_statement -> SELECT opt_all_distinct selection . INTO target_commalist table_exp

    INTO            shift and go to state 82


state 54

    (99) selection -> scalar_exp_commalist .
    (102) scalar_exp_commalist -> scalar_exp_commalist . COMMA scalar_exp

    INTO            reduce using rule 99 (selection -> scalar_exp_commalist .)
    FROM            reduce using rule 99 (selection -> scalar_exp_commalist .)
    GROUP           reduce using rule 99 (selection -> scalar_exp_commalist .)
    NOT             reduce using rule 99 (selection -> scalar_exp_commalist .)
    LPAREN          reduce using rule 99 (selection -> scalar_exp_commalist .)
    EXISTS          reduce using rule 99 (selection -> scalar_exp_commalist .)
    ID              reduce using rule 99 (selection -> scalar_exp_commalist .)
    QUOTE           reduce using rule 99 (selection -> scalar_exp_commalist .)
    NUMBER          reduce using rule 99 (selection -> scalar_exp_commalist .)
    AMMSC           reduce using rule 99 (selection -> scalar_exp_commalist .)
    RPAREN          reduce using rule 99 (selection -> scalar_exp_commalist .)
    SEMICOLON       reduce using rule 99 (selection -> scalar_exp_commalist .)
    WITH            reduce using rule 99 (selection -> scalar_exp_commalist .)
    CREATE          reduce using rule 99 (selection -> scalar_exp_commalist .)
    GRANT           reduce using rule 99 (selection -> scalar_exp_commalist .)
    COMMA           shift and go to state 83


state 55

    (153) atom -> NUMBER .

    PLUS            reduce using rule 153 (atom -> NUMBER .)
    MINUS           reduce using rule 153 (atom -> NUMBER .)
    EQUAL           reduce using rule 153 (atom -> NUMBER .)
    TIMES           reduce using rule 153 (atom -> NUMBER .)
    DIVIDE          reduce using rule 153 (atom -> NUMBER .)
    COMMA           reduce using rule 153 (atom -> NUMBER .)
    INTO            reduce using rule 153 (atom -> NUMBER .)
    RPAREN          reduce using rule 153 (atom -> NUMBER .)
    COMPARISON      reduce using rule 153 (atom -> NUMBER .)
    NOT             reduce using rule 153 (atom -> NUMBER .)
    BETWEEN         reduce using rule 153 (atom -> NUMBER .)
    LIKE            reduce using rule 153 (atom -> NUMBER .)
    IN              reduce using rule 153 (atom -> NUMBER .)
    FROM            reduce using rule 153 (atom -> NUMBER .)
    GROUP           reduce using rule 153 (atom -> NUMBER .)
    LPAREN          reduce using rule 153 (atom -> NUMBER .)
    EXISTS          reduce using rule 153 (atom -> NUMBER .)
    ID              reduce using rule 153 (atom -> NUMBER .)
    QUOTE           reduce using rule 153 (atom -> NUMBER .)
    NUMBER          reduce using rule 153 (atom -> NUMBER .)
    AMMSC           reduce using rule 153 (atom -> NUMBER .)
    SEMICOLON       reduce using rule 153 (atom -> NUMBER .)
    WITH            reduce using rule 153 (atom -> NUMBER .)
    CREATE          reduce using rule 153 (atom -> NUMBER .)
    GRANT           reduce using rule 153 (atom -> NUMBER .)
    WHERE           reduce using rule 153 (atom -> NUMBER .)
    AMPERSANT       reduce using rule 153 (atom -> NUMBER .)
    AND             reduce using rule 153 (atom -> NUMBER .)
    OR              reduce using rule 153 (atom -> NUMBER .)


state 56

    (126) scalar_exp -> function_ref .

    RPAREN          reduce using rule 126 (scalar_exp -> function_ref .)
    PLUS            reduce using rule 126 (scalar_exp -> function_ref .)
    MINUS           reduce using rule 126 (scalar_exp -> function_ref .)
    EQUAL           reduce using rule 126 (scalar_exp -> function_ref .)
    TIMES           reduce using rule 126 (scalar_exp -> function_ref .)
    DIVIDE          reduce using rule 126 (scalar_exp -> function_ref .)
    COMPARISON      reduce using rule 126 (scalar_exp -> function_ref .)
    NOT             reduce using rule 126 (scalar_exp -> function_ref .)
    BETWEEN         reduce using rule 126 (scalar_exp -> function_ref .)
    LIKE            reduce using rule 126 (scalar_exp -> function_ref .)
    IN              reduce using rule 126 (scalar_exp -> function_ref .)
    OR              reduce using rule 126 (scalar_exp -> function_ref .)
    AND             reduce using rule 126 (scalar_exp -> function_ref .)
    SEMICOLON       reduce using rule 126 (scalar_exp -> function_ref .)
    WITH            reduce using rule 126 (scalar_exp -> function_ref .)
    CREATE          reduce using rule 126 (scalar_exp -> function_ref .)
    GRANT           reduce using rule 126 (scalar_exp -> function_ref .)
    COMMA           reduce using rule 126 (scalar_exp -> function_ref .)
    INTO            reduce using rule 126 (scalar_exp -> function_ref .)
    FROM            reduce using rule 126 (scalar_exp -> function_ref .)
    GROUP           reduce using rule 126 (scalar_exp -> function_ref .)
    LPAREN          reduce using rule 126 (scalar_exp -> function_ref .)
    EXISTS          reduce using rule 126 (scalar_exp -> function_ref .)
    ID              reduce using rule 126 (scalar_exp -> function_ref .)
    QUOTE           reduce using rule 126 (scalar_exp -> function_ref .)
    NUMBER          reduce using rule 126 (scalar_exp -> function_ref .)
    AMMSC           reduce using rule 126 (scalar_exp -> function_ref .)
    WHERE           reduce using rule 126 (scalar_exp -> function_ref .)
    AMPERSANT       reduce using rule 126 (scalar_exp -> function_ref .)


state 57

    (152) atom -> QUOTE . parameter_ref QUOTE
    (154) atom -> QUOTE . DATE1 QUOTE
    (155) atom -> QUOTE . USER QUOTE
    (156) parameter_ref -> . parameter
    (157) parameter_ref -> . parameter_ref parameter
    (158) parameter_ref -> . parameter INDICATOR parameter
    (159) parameter -> . ID

    DATE1           shift and go to state 84
    USER            shift and go to state 86
    ID              shift and go to state 88

    parameter_ref                  shift and go to state 85
    parameter                      shift and go to state 87

state 58

    (127) scalar_exp -> LPAREN . scalar_exp RPAREN
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 89
    atom                           shift and go to state 59

state 59

    (124) scalar_exp -> atom .

    RPAREN          reduce using rule 124 (scalar_exp -> atom .)
    PLUS            reduce using rule 124 (scalar_exp -> atom .)
    MINUS           reduce using rule 124 (scalar_exp -> atom .)
    EQUAL           reduce using rule 124 (scalar_exp -> atom .)
    TIMES           reduce using rule 124 (scalar_exp -> atom .)
    DIVIDE          reduce using rule 124 (scalar_exp -> atom .)
    COMPARISON      reduce using rule 124 (scalar_exp -> atom .)
    NOT             reduce using rule 124 (scalar_exp -> atom .)
    BETWEEN         reduce using rule 124 (scalar_exp -> atom .)
    LIKE            reduce using rule 124 (scalar_exp -> atom .)
    IN              reduce using rule 124 (scalar_exp -> atom .)
    OR              reduce using rule 124 (scalar_exp -> atom .)
    AND             reduce using rule 124 (scalar_exp -> atom .)
    SEMICOLON       reduce using rule 124 (scalar_exp -> atom .)
    WITH            reduce using rule 124 (scalar_exp -> atom .)
    CREATE          reduce using rule 124 (scalar_exp -> atom .)
    GRANT           reduce using rule 124 (scalar_exp -> atom .)
    COMMA           reduce using rule 124 (scalar_exp -> atom .)
    INTO            reduce using rule 124 (scalar_exp -> atom .)
    FROM            reduce using rule 124 (scalar_exp -> atom .)
    GROUP           reduce using rule 124 (scalar_exp -> atom .)
    LPAREN          reduce using rule 124 (scalar_exp -> atom .)
    EXISTS          reduce using rule 124 (scalar_exp -> atom .)
    ID              reduce using rule 124 (scalar_exp -> atom .)
    QUOTE           reduce using rule 124 (scalar_exp -> atom .)
    NUMBER          reduce using rule 124 (scalar_exp -> atom .)
    AMMSC           reduce using rule 124 (scalar_exp -> atom .)
    WHERE           reduce using rule 124 (scalar_exp -> atom .)
    AMPERSANT       reduce using rule 124 (scalar_exp -> atom .)


state 60

    (100) selection -> TIMES .

    INTO            reduce using rule 100 (selection -> TIMES .)
    FROM            reduce using rule 100 (selection -> TIMES .)
    GROUP           reduce using rule 100 (selection -> TIMES .)
    NOT             reduce using rule 100 (selection -> TIMES .)
    LPAREN          reduce using rule 100 (selection -> TIMES .)
    EXISTS          reduce using rule 100 (selection -> TIMES .)
    ID              reduce using rule 100 (selection -> TIMES .)
    QUOTE           reduce using rule 100 (selection -> TIMES .)
    NUMBER          reduce using rule 100 (selection -> TIMES .)
    AMMSC           reduce using rule 100 (selection -> TIMES .)
    RPAREN          reduce using rule 100 (selection -> TIMES .)
    SEMICOLON       reduce using rule 100 (selection -> TIMES .)
    WITH            reduce using rule 100 (selection -> TIMES .)
    CREATE          reduce using rule 100 (selection -> TIMES .)
    GRANT           reduce using rule 100 (selection -> TIMES .)


state 61

    (128) column_ref -> ID .
    (129) column_ref -> ID . DOT ID
    (130) column_ref -> ID . DOT ID DOT ID

    PLUS            reduce using rule 128 (column_ref -> ID .)
    MINUS           reduce using rule 128 (column_ref -> ID .)
    EQUAL           reduce using rule 128 (column_ref -> ID .)
    TIMES           reduce using rule 128 (column_ref -> ID .)
    DIVIDE          reduce using rule 128 (column_ref -> ID .)
    COMMA           reduce using rule 128 (column_ref -> ID .)
    INTO            reduce using rule 128 (column_ref -> ID .)
    RPAREN          reduce using rule 128 (column_ref -> ID .)
    COMPARISON      reduce using rule 128 (column_ref -> ID .)
    NOT             reduce using rule 128 (column_ref -> ID .)
    BETWEEN         reduce using rule 128 (column_ref -> ID .)
    LIKE            reduce using rule 128 (column_ref -> ID .)
    IN              reduce using rule 128 (column_ref -> ID .)
    FROM            reduce using rule 128 (column_ref -> ID .)
    GROUP           reduce using rule 128 (column_ref -> ID .)
    LPAREN          reduce using rule 128 (column_ref -> ID .)
    EXISTS          reduce using rule 128 (column_ref -> ID .)
    ID              reduce using rule 128 (column_ref -> ID .)
    QUOTE           reduce using rule 128 (column_ref -> ID .)
    NUMBER          reduce using rule 128 (column_ref -> ID .)
    AMMSC           reduce using rule 128 (column_ref -> ID .)
    SEMICOLON       reduce using rule 128 (column_ref -> ID .)
    WITH            reduce using rule 128 (column_ref -> ID .)
    CREATE          reduce using rule 128 (column_ref -> ID .)
    GRANT           reduce using rule 128 (column_ref -> ID .)
    WHERE           reduce using rule 128 (column_ref -> ID .)
    AMPERSANT       reduce using rule 128 (column_ref -> ID .)
    AND             reduce using rule 128 (column_ref -> ID .)
    OR              reduce using rule 128 (column_ref -> ID .)
    IS              reduce using rule 128 (column_ref -> ID .)
    DOT             shift and go to state 90


state 62

    (125) scalar_exp -> column_ref .

    RPAREN          reduce using rule 125 (scalar_exp -> column_ref .)
    PLUS            reduce using rule 125 (scalar_exp -> column_ref .)
    MINUS           reduce using rule 125 (scalar_exp -> column_ref .)
    EQUAL           reduce using rule 125 (scalar_exp -> column_ref .)
    TIMES           reduce using rule 125 (scalar_exp -> column_ref .)
    DIVIDE          reduce using rule 125 (scalar_exp -> column_ref .)
    OR              reduce using rule 125 (scalar_exp -> column_ref .)
    AND             reduce using rule 125 (scalar_exp -> column_ref .)
    SEMICOLON       reduce using rule 125 (scalar_exp -> column_ref .)
    WITH            reduce using rule 125 (scalar_exp -> column_ref .)
    CREATE          reduce using rule 125 (scalar_exp -> column_ref .)
    GRANT           reduce using rule 125 (scalar_exp -> column_ref .)
    COMMA           reduce using rule 125 (scalar_exp -> column_ref .)
    INTO            reduce using rule 125 (scalar_exp -> column_ref .)
    COMPARISON      reduce using rule 125 (scalar_exp -> column_ref .)
    NOT             reduce using rule 125 (scalar_exp -> column_ref .)
    BETWEEN         reduce using rule 125 (scalar_exp -> column_ref .)
    LIKE            reduce using rule 125 (scalar_exp -> column_ref .)
    IN              reduce using rule 125 (scalar_exp -> column_ref .)
    FROM            reduce using rule 125 (scalar_exp -> column_ref .)
    GROUP           reduce using rule 125 (scalar_exp -> column_ref .)
    LPAREN          reduce using rule 125 (scalar_exp -> column_ref .)
    EXISTS          reduce using rule 125 (scalar_exp -> column_ref .)
    ID              reduce using rule 125 (scalar_exp -> column_ref .)
    QUOTE           reduce using rule 125 (scalar_exp -> column_ref .)
    NUMBER          reduce using rule 125 (scalar_exp -> column_ref .)
    AMMSC           reduce using rule 125 (scalar_exp -> column_ref .)
    WHERE           reduce using rule 125 (scalar_exp -> column_ref .)
    AMPERSANT       reduce using rule 125 (scalar_exp -> column_ref .)


state 63

    (101) scalar_exp_commalist -> scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    COMMA           reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    FROM            reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    GROUP           reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    NOT             reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    LPAREN          reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    EXISTS          reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    ID              reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    QUOTE           reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    NUMBER          reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    AMMSC           reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    SEMICOLON       reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    WITH            reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    CREATE          reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    GRANT           reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    INTO            reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    RPAREN          reduce using rule 101 (scalar_exp_commalist -> scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 64

    (131) function_ref -> AMMSC . LPAREN TIMES RPAREN
    (132) function_ref -> AMMSC . LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> AMMSC . LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> AMMSC . LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 96


state 65

    (179) select_statement -> SELECT TIMES FROM . table WHERE assignment_commalist assign_cond
    (180) select_statement -> SELECT TIMES FROM . table SEMICOLON
    (181) select_statement -> SELECT TIMES FROM . table PLUSPLUS
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 97

state 66

    (171) insert_statement -> INSERT INTO table . opt_column_commalist values_or_query_spec
    (91) opt_column_commalist -> . empty
    (92) opt_column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .

    LPAREN          shift and go to state 46
    VALUES          reduce using rule 203 (empty -> .)
    SELECT          reduce using rule 203 (empty -> .)

    opt_column_commalist           shift and go to state 98
    empty                          shift and go to state 48

state 67

    (16) base_table_def -> CREATE TABLE table . LPAREN base_table_element_commalist RPAREN

    LPAREN          shift and go to state 99


state 68

    (90) view_def -> CREATE VIEW table . opt_column_commalist AS query_spec opt_with_check_option
    (91) opt_column_commalist -> . empty
    (92) opt_column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .

    LPAREN          shift and go to state 46
    AS              reduce using rule 203 (empty -> .)

    opt_column_commalist           shift and go to state 100
    empty                          shift and go to state 48

state 69

    (7) schema -> CREATE SCHEMA AUTHORIZATION . user opt_schema_element_list
    (8) user -> . ID

    ID              shift and go to state 102

    user                           shift and go to state 101

state 70

    (169) drop_table -> DROP TABLE table .

    SEMICOLON       reduce using rule 169 (drop_table -> DROP TABLE table .)


state 71

    (166) update_statement -> UPDATE table SET . assignment_commalist WHERE search_condition
    (167) update_statement -> UPDATE table SET . assignment_commalist WHERE assignment_commalist assign_cond
    (168) update_statement -> UPDATE table SET . assignment_commalist opt_where_clause
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (200) column -> . ID

    LPAREN          shift and go to state 106
    ID              shift and go to state 78

    assignment_commalist           shift and go to state 105
    column                         shift and go to state 103
    assignment                     shift and go to state 104

state 72

    (202) table -> ID DOT . ID

    ID              shift and go to state 107


state 73

    (170) delete_statement -> DELETE FROM table . opt_where_clause
    (112) opt_where_clause -> . empty
    (113) opt_where_clause -> . where_clause
    (203) empty -> .
    (114) where_clause -> . search_condition
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    SEMICOLON       reduce using rule 203 (empty -> .)
    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    atom                           shift and go to state 59
    predicate                      shift and go to state 115
    between_predicate              shift and go to state 108
    opt_where_clause               shift and go to state 109
    all_cr_any_predicate           shift and go to state 111
    where_clause                   shift and go to state 110
    column_ref                     shift and go to state 120
    in_predicate                   shift and go to state 119
    test_for_null                  shift and go to state 121
    search_condition               shift and go to state 113
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    scalar_exp                     shift and go to state 122
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56
    empty                          shift and go to state 114

state 74

    (3) sql_list -> sql_list sql SEMICOLON .

    CREATE          reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)
    DELETE          reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)
    INSERT          reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)
    SELECT          reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)
    UPDATE          reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)
    DROP            reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)
    GRANT           reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)
    SEMICOLON       reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)
    $end            reduce using rule 3 (sql_list -> sql_list sql SEMICOLON .)


state 75

    (81) column_commalist -> column .

    RPAREN          reduce using rule 81 (column_commalist -> column .)
    COMMA           reduce using rule 81 (column_commalist -> column .)


state 76

    (92) opt_column_commalist -> LPAREN column_commalist . RPAREN
    (82) column_commalist -> column_commalist . COMMA column

    RPAREN          shift and go to state 126
    COMMA           shift and go to state 125


state 77

    (83) column_commalist -> LPAREN . column_commalist RPAREN
    (80) column_commalist -> . empty
    (81) column_commalist -> . column
    (82) column_commalist -> . column_commalist COMMA column
    (83) column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .
    (200) column -> . ID

    LPAREN          shift and go to state 77
    RPAREN          reduce using rule 203 (empty -> .)
    COMMA           reduce using rule 203 (empty -> .)
    ID              shift and go to state 78

    column                         shift and go to state 75
    empty                          shift and go to state 79
    column_commalist               shift and go to state 127

state 78

    (200) column -> ID .

    RPAREN          reduce using rule 200 (column -> ID .)
    COMMA           reduce using rule 200 (column -> ID .)
    EQUAL           reduce using rule 200 (column -> ID .)
    LESS            reduce using rule 200 (column -> ID .)
    GREATER         reduce using rule 200 (column -> ID .)
    CHAR            reduce using rule 200 (column -> ID .)
    INT             reduce using rule 200 (column -> ID .)
    VARCHAR         reduce using rule 200 (column -> ID .)
    FLOAT           reduce using rule 200 (column -> ID .)
    DOUBLE          reduce using rule 200 (column -> ID .)


state 79

    (80) column_commalist -> empty .

    RPAREN          reduce using rule 80 (column_commalist -> empty .)
    COMMA           reduce using rule 80 (column_commalist -> empty .)


state 80

    (135) privilege_def -> GRANT privileges ON table . TO grantee_commalist opt_with_grant_option

    TO              shift and go to state 128


state 81

    (142) operation_commalist -> operation_commalist COMMA operation .

    COMMA           reduce using rule 142 (operation_commalist -> operation_commalist COMMA operation .)
    ON              reduce using rule 142 (operation_commalist -> operation_commalist COMMA operation .)


state 82

    (178) select_statement -> SELECT opt_all_distinct selection INTO . target_commalist table_exp
    (182) target_commalist -> . target
    (183) target_commalist -> . target_commalist COMMA target
    (184) target -> . parameter_ref
    (156) parameter_ref -> . parameter
    (157) parameter_ref -> . parameter_ref parameter
    (158) parameter_ref -> . parameter INDICATOR parameter
    (159) parameter -> . ID

    ID              shift and go to state 88

    target                         shift and go to state 131
    target_commalist               shift and go to state 129
    parameter_ref                  shift and go to state 130
    parameter                      shift and go to state 87

state 83

    (102) scalar_exp_commalist -> scalar_exp_commalist COMMA . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    scalar_exp                     shift and go to state 132
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56

state 84

    (154) atom -> QUOTE DATE1 . QUOTE

    QUOTE           shift and go to state 133


state 85

    (152) atom -> QUOTE parameter_ref . QUOTE
    (157) parameter_ref -> parameter_ref . parameter
    (159) parameter -> . ID

    QUOTE           shift and go to state 134
    ID              shift and go to state 88

    parameter                      shift and go to state 135

state 86

    (155) atom -> QUOTE USER . QUOTE

    QUOTE           shift and go to state 136


state 87

    (156) parameter_ref -> parameter .
    (158) parameter_ref -> parameter . INDICATOR parameter

    ID              reduce using rule 156 (parameter_ref -> parameter .)
    COMMA           reduce using rule 156 (parameter_ref -> parameter .)
    FROM            reduce using rule 156 (parameter_ref -> parameter .)
    GROUP           reduce using rule 156 (parameter_ref -> parameter .)
    NOT             reduce using rule 156 (parameter_ref -> parameter .)
    LPAREN          reduce using rule 156 (parameter_ref -> parameter .)
    EXISTS          reduce using rule 156 (parameter_ref -> parameter .)
    QUOTE           reduce using rule 156 (parameter_ref -> parameter .)
    NUMBER          reduce using rule 156 (parameter_ref -> parameter .)
    AMMSC           reduce using rule 156 (parameter_ref -> parameter .)
    SEMICOLON       reduce using rule 156 (parameter_ref -> parameter .)
    INDICATOR       shift and go to state 137


state 88

    (159) parameter -> ID .

    INDICATOR       reduce using rule 159 (parameter -> ID .)
    QUOTE           reduce using rule 159 (parameter -> ID .)
    ID              reduce using rule 159 (parameter -> ID .)
    COMMA           reduce using rule 159 (parameter -> ID .)
    FROM            reduce using rule 159 (parameter -> ID .)
    GROUP           reduce using rule 159 (parameter -> ID .)
    NOT             reduce using rule 159 (parameter -> ID .)
    LPAREN          reduce using rule 159 (parameter -> ID .)
    EXISTS          reduce using rule 159 (parameter -> ID .)
    NUMBER          reduce using rule 159 (parameter -> ID .)
    AMMSC           reduce using rule 159 (parameter -> ID .)
    SEMICOLON       reduce using rule 159 (parameter -> ID .)


state 89

    (127) scalar_exp -> LPAREN scalar_exp . RPAREN
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    RPAREN          shift and go to state 138
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 90

    (129) column_ref -> ID DOT . ID
    (130) column_ref -> ID DOT . ID DOT ID

    ID              shift and go to state 139


state 91

    (123) scalar_exp -> scalar_exp DIVIDE . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 140
    atom                           shift and go to state 59

state 92

    (121) scalar_exp -> scalar_exp EQUAL . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 141
    atom                           shift and go to state 59

state 93

    (122) scalar_exp -> scalar_exp TIMES . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 142
    atom                           shift and go to state 59

state 94

    (119) scalar_exp -> scalar_exp PLUS . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 143
    atom                           shift and go to state 59

state 95

    (120) scalar_exp -> scalar_exp MINUS . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 144
    atom                           shift and go to state 59

state 96

    (131) function_ref -> AMMSC LPAREN . TIMES RPAREN
    (132) function_ref -> AMMSC LPAREN . DISTINCT column_ref RPAREN
    (133) function_ref -> AMMSC LPAREN . ALL scalar_exp RPAREN
    (134) function_ref -> AMMSC LPAREN . scalar_exp RPAREN
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    TIMES           shift and go to state 148
    DISTINCT        shift and go to state 146
    ALL             shift and go to state 145
    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 147
    atom                           shift and go to state 59

state 97

    (179) select_statement -> SELECT TIMES FROM table . WHERE assignment_commalist assign_cond
    (180) select_statement -> SELECT TIMES FROM table . SEMICOLON
    (181) select_statement -> SELECT TIMES FROM table . PLUSPLUS

    WHERE           shift and go to state 151
    SEMICOLON       shift and go to state 149
    PLUSPLUS        shift and go to state 150


state 98

    (171) insert_statement -> INSERT INTO table opt_column_commalist . values_or_query_spec
    (172) values_or_query_spec -> . VALUES LPAREN insert_atom_commalist RPAREN
    (173) values_or_query_spec -> . query_spec
    (93) query_spec -> . SELECT opt_all_distinct FROM selection table_exp

    VALUES          shift and go to state 154
    SELECT          shift and go to state 155

    values_or_query_spec           shift and go to state 152
    query_spec                     shift and go to state 153

state 99

    (16) base_table_def -> CREATE TABLE table LPAREN . base_table_element_commalist RPAREN
    (17) base_table_element_commalist -> . base_table_element
    (18) base_table_element_commalist -> . base_table_element_commalist COMMA base_table_element
    (19) base_table_element -> . column_def
    (20) base_table_element -> . constraint_def
    (21) base_table_element -> . table_constraint_def
    (22) column_def -> . column data_type column_def_opt_list
    (84) constraint_def -> . CONSTRAINT ID table_constraint_def
    (85) table_constraint_def -> . UNIQUE LPAREN column_commalist RPAREN
    (86) table_constraint_def -> . PRIMARY KEY LPAREN column_commalist RPAREN
    (87) table_constraint_def -> . FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table
    (88) table_constraint_def -> . FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN
    (89) table_constraint_def -> . CHECK LPAREN search_condition RPAREN
    (200) column -> . ID

    CONSTRAINT      shift and go to state 160
    UNIQUE          shift and go to state 164
    PRIMARY         shift and go to state 166
    FOREIGN         shift and go to state 157
    CHECK           shift and go to state 162
    ID              shift and go to state 78

    constraint_def                 shift and go to state 163
    column                         shift and go to state 165
    base_table_element_commalist   shift and go to state 156
    column_def                     shift and go to state 161
    base_table_element             shift and go to state 158
    table_constraint_def           shift and go to state 159

state 100

    (90) view_def -> CREATE VIEW table opt_column_commalist . AS query_spec opt_with_check_option

    AS              shift and go to state 167


state 101

    (7) schema -> CREATE SCHEMA AUTHORIZATION user . opt_schema_element_list
    (9) opt_schema_element_list -> . empty
    (10) opt_schema_element_list -> . schema_element_list
    (203) empty -> .
    (11) schema_element_list -> . schema_element
    (12) schema_element_list -> . schema_element_list schema_element
    (13) schema_element -> . base_table_def
    (14) schema_element -> . view_def
    (15) schema_element -> . privilege_def
    (16) base_table_def -> . CREATE TABLE table LPAREN base_table_element_commalist RPAREN
    (90) view_def -> . CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option
    (135) privilege_def -> . GRANT privileges ON table TO grantee_commalist opt_with_grant_option

    SEMICOLON       reduce using rule 203 (empty -> .)
    CREATE          shift and go to state 168
    GRANT           shift and go to state 2

    view_def                       shift and go to state 18
    privilege_def                  shift and go to state 12
    schema_element_list            shift and go to state 170
    base_table_def                 shift and go to state 13
    opt_schema_element_list        shift and go to state 171
    schema_element                 shift and go to state 172
    empty                          shift and go to state 169

state 102

    (8) user -> ID .

    COMMA           reduce using rule 8 (user -> ID .)
    WITH            reduce using rule 8 (user -> ID .)
    SEMICOLON       reduce using rule 8 (user -> ID .)
    CREATE          reduce using rule 8 (user -> ID .)
    GRANT           reduce using rule 8 (user -> ID .)


state 103

    (187) assignment -> column . EQUAL scalar_exp
    (189) assignment -> column . LESS scalar_exp
    (190) assignment -> column . GREATER scalar_exp
    (191) assignment -> column . EQUAL NULL

    EQUAL           shift and go to state 175
    LESS            shift and go to state 174
    GREATER         shift and go to state 173


state 104

    (185) assignment_commalist -> assignment .

    WHERE           reduce using rule 185 (assignment_commalist -> assignment .)
    COMMA           reduce using rule 185 (assignment_commalist -> assignment .)
    NOT             reduce using rule 185 (assignment_commalist -> assignment .)
    LPAREN          reduce using rule 185 (assignment_commalist -> assignment .)
    EXISTS          reduce using rule 185 (assignment_commalist -> assignment .)
    ID              reduce using rule 185 (assignment_commalist -> assignment .)
    QUOTE           reduce using rule 185 (assignment_commalist -> assignment .)
    NUMBER          reduce using rule 185 (assignment_commalist -> assignment .)
    AMMSC           reduce using rule 185 (assignment_commalist -> assignment .)
    SEMICOLON       reduce using rule 185 (assignment_commalist -> assignment .)
    AMPERSANT       reduce using rule 185 (assignment_commalist -> assignment .)
    RPAREN          reduce using rule 185 (assignment_commalist -> assignment .)
    AND             reduce using rule 185 (assignment_commalist -> assignment .)
    OR              reduce using rule 185 (assignment_commalist -> assignment .)


state 105

    (166) update_statement -> UPDATE table SET assignment_commalist . WHERE search_condition
    (167) update_statement -> UPDATE table SET assignment_commalist . WHERE assignment_commalist assign_cond
    (168) update_statement -> UPDATE table SET assignment_commalist . opt_where_clause
    (186) assignment_commalist -> assignment_commalist . COMMA assignment
    (112) opt_where_clause -> . empty
    (113) opt_where_clause -> . where_clause
    (203) empty -> .
    (114) where_clause -> . search_condition
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    WHERE           shift and go to state 178
    COMMA           shift and go to state 177
    SEMICOLON       reduce using rule 203 (empty -> .)
    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    between_predicate              shift and go to state 108
    opt_where_clause               shift and go to state 176
    where_clause                   shift and go to state 110
    function_ref                   shift and go to state 56
    all_cr_any_predicate           shift and go to state 111
    like_predicate                 shift and go to state 112
    search_condition               shift and go to state 113
    empty                          shift and go to state 114
    predicate                      shift and go to state 115
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    in_predicate                   shift and go to state 119
    column_ref                     shift and go to state 120
    test_for_null                  shift and go to state 121
    scalar_exp                     shift and go to state 122
    existence_test                 shift and go to state 123

state 106

    (188) assignment -> LPAREN . assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (200) column -> . ID

    LPAREN          shift and go to state 106
    ID              shift and go to state 78

    column                         shift and go to state 103
    assignment                     shift and go to state 104
    assignment_commalist           shift and go to state 179

state 107

    (202) table -> ID DOT ID .

    TO              reduce using rule 202 (table -> ID DOT ID .)
    LPAREN          reduce using rule 202 (table -> ID DOT ID .)
    AS              reduce using rule 202 (table -> ID DOT ID .)
    ID              reduce using rule 202 (table -> ID DOT ID .)
    COMMA           reduce using rule 202 (table -> ID DOT ID .)
    SEMICOLON       reduce using rule 202 (table -> ID DOT ID .)
    WITH            reduce using rule 202 (table -> ID DOT ID .)
    CREATE          reduce using rule 202 (table -> ID DOT ID .)
    GRANT           reduce using rule 202 (table -> ID DOT ID .)
    RPAREN          reduce using rule 202 (table -> ID DOT ID .)
    VALUES          reduce using rule 202 (table -> ID DOT ID .)
    SELECT          reduce using rule 202 (table -> ID DOT ID .)
    WHERE           reduce using rule 202 (table -> ID DOT ID .)
    PLUSPLUS        reduce using rule 202 (table -> ID DOT ID .)
    NOT             reduce using rule 202 (table -> ID DOT ID .)
    NULL            reduce using rule 202 (table -> ID DOT ID .)
    DEFAULT         reduce using rule 202 (table -> ID DOT ID .)
    CHECK           reduce using rule 202 (table -> ID DOT ID .)
    REFERENCES      reduce using rule 202 (table -> ID DOT ID .)
    EXISTS          reduce using rule 202 (table -> ID DOT ID .)
    QUOTE           reduce using rule 202 (table -> ID DOT ID .)
    NUMBER          reduce using rule 202 (table -> ID DOT ID .)
    AMMSC           reduce using rule 202 (table -> ID DOT ID .)
    SET             reduce using rule 202 (table -> ID DOT ID .)


state 108

    (54) predicate -> between_predicate .

    OR              reduce using rule 54 (predicate -> between_predicate .)
    AND             reduce using rule 54 (predicate -> between_predicate .)
    SEMICOLON       reduce using rule 54 (predicate -> between_predicate .)
    RPAREN          reduce using rule 54 (predicate -> between_predicate .)
    WITH            reduce using rule 54 (predicate -> between_predicate .)
    CREATE          reduce using rule 54 (predicate -> between_predicate .)
    GRANT           reduce using rule 54 (predicate -> between_predicate .)


state 109

    (170) delete_statement -> DELETE FROM table opt_where_clause .

    SEMICOLON       reduce using rule 170 (delete_statement -> DELETE FROM table opt_where_clause .)


state 110

    (113) opt_where_clause -> where_clause .

    SEMICOLON       reduce using rule 113 (opt_where_clause -> where_clause .)
    WITH            reduce using rule 113 (opt_where_clause -> where_clause .)
    CREATE          reduce using rule 113 (opt_where_clause -> where_clause .)
    GRANT           reduce using rule 113 (opt_where_clause -> where_clause .)
    RPAREN          reduce using rule 113 (opt_where_clause -> where_clause .)


state 111

    (58) predicate -> all_cr_any_predicate .

    OR              reduce using rule 58 (predicate -> all_cr_any_predicate .)
    AND             reduce using rule 58 (predicate -> all_cr_any_predicate .)
    SEMICOLON       reduce using rule 58 (predicate -> all_cr_any_predicate .)
    RPAREN          reduce using rule 58 (predicate -> all_cr_any_predicate .)
    WITH            reduce using rule 58 (predicate -> all_cr_any_predicate .)
    CREATE          reduce using rule 58 (predicate -> all_cr_any_predicate .)
    GRANT           reduce using rule 58 (predicate -> all_cr_any_predicate .)


state 112

    (55) predicate -> like_predicate .

    OR              reduce using rule 55 (predicate -> like_predicate .)
    AND             reduce using rule 55 (predicate -> like_predicate .)
    SEMICOLON       reduce using rule 55 (predicate -> like_predicate .)
    RPAREN          reduce using rule 55 (predicate -> like_predicate .)
    WITH            reduce using rule 55 (predicate -> like_predicate .)
    CREATE          reduce using rule 55 (predicate -> like_predicate .)
    GRANT           reduce using rule 55 (predicate -> like_predicate .)


state 113

    (114) where_clause -> search_condition .
    (48) search_condition -> search_condition . OR search_condition
    (49) search_condition -> search_condition . AND search_condition

    SEMICOLON       reduce using rule 114 (where_clause -> search_condition .)
    RPAREN          reduce using rule 114 (where_clause -> search_condition .)
    WITH            reduce using rule 114 (where_clause -> search_condition .)
    CREATE          reduce using rule 114 (where_clause -> search_condition .)
    GRANT           reduce using rule 114 (where_clause -> search_condition .)
    OR              shift and go to state 181
    AND             shift and go to state 180


state 114

    (112) opt_where_clause -> empty .

    SEMICOLON       reduce using rule 112 (opt_where_clause -> empty .)


state 115

    (52) search_condition -> predicate .

    RPAREN          reduce using rule 52 (search_condition -> predicate .)
    OR              reduce using rule 52 (search_condition -> predicate .)
    AND             reduce using rule 52 (search_condition -> predicate .)
    SEMICOLON       reduce using rule 52 (search_condition -> predicate .)
    WITH            reduce using rule 52 (search_condition -> predicate .)
    CREATE          reduce using rule 52 (search_condition -> predicate .)
    GRANT           reduce using rule 52 (search_condition -> predicate .)


state 116

    (79) existence_test -> EXISTS . subquery
    (62) subquery -> . LPAREN SELECT opt_all_distinct selection table_exp RPAREN

    LPAREN          shift and go to state 183

    subquery                       shift and go to state 182

state 117

    (51) search_condition -> LPAREN . search_condition RPAREN
    (127) scalar_exp -> LPAREN . scalar_exp RPAREN
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery

    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64
    EXISTS          shift and go to state 116

    predicate                      shift and go to state 115
    between_predicate              shift and go to state 108
    all_cr_any_predicate           shift and go to state 111
    in_predicate                   shift and go to state 119
    column_ref                     shift and go to state 185
    test_for_null                  shift and go to state 121
    scalar_exp                     shift and go to state 186
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    search_condition               shift and go to state 184
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56

state 118

    (53) predicate -> comparison_predicate .

    OR              reduce using rule 53 (predicate -> comparison_predicate .)
    AND             reduce using rule 53 (predicate -> comparison_predicate .)
    SEMICOLON       reduce using rule 53 (predicate -> comparison_predicate .)
    RPAREN          reduce using rule 53 (predicate -> comparison_predicate .)
    WITH            reduce using rule 53 (predicate -> comparison_predicate .)
    CREATE          reduce using rule 53 (predicate -> comparison_predicate .)
    GRANT           reduce using rule 53 (predicate -> comparison_predicate .)


state 119

    (57) predicate -> in_predicate .

    OR              reduce using rule 57 (predicate -> in_predicate .)
    AND             reduce using rule 57 (predicate -> in_predicate .)
    SEMICOLON       reduce using rule 57 (predicate -> in_predicate .)
    RPAREN          reduce using rule 57 (predicate -> in_predicate .)
    WITH            reduce using rule 57 (predicate -> in_predicate .)
    CREATE          reduce using rule 57 (predicate -> in_predicate .)
    GRANT           reduce using rule 57 (predicate -> in_predicate .)


state 120

    (67) test_for_null -> column_ref . IS NOT NULL
    (68) test_for_null -> column_ref . IS NULL
    (125) scalar_exp -> column_ref .

    IS              shift and go to state 187
    COMPARISON      reduce using rule 125 (scalar_exp -> column_ref .)
    NOT             reduce using rule 125 (scalar_exp -> column_ref .)
    BETWEEN         reduce using rule 125 (scalar_exp -> column_ref .)
    LIKE            reduce using rule 125 (scalar_exp -> column_ref .)
    IN              reduce using rule 125 (scalar_exp -> column_ref .)
    PLUS            reduce using rule 125 (scalar_exp -> column_ref .)
    MINUS           reduce using rule 125 (scalar_exp -> column_ref .)
    EQUAL           reduce using rule 125 (scalar_exp -> column_ref .)
    TIMES           reduce using rule 125 (scalar_exp -> column_ref .)
    DIVIDE          reduce using rule 125 (scalar_exp -> column_ref .)


state 121

    (56) predicate -> test_for_null .

    OR              reduce using rule 56 (predicate -> test_for_null .)
    AND             reduce using rule 56 (predicate -> test_for_null .)
    SEMICOLON       reduce using rule 56 (predicate -> test_for_null .)
    RPAREN          reduce using rule 56 (predicate -> test_for_null .)
    WITH            reduce using rule 56 (predicate -> test_for_null .)
    CREATE          reduce using rule 56 (predicate -> test_for_null .)
    GRANT           reduce using rule 56 (predicate -> test_for_null .)


state 122

    (60) comparison_predicate -> scalar_exp . COMPARISON scalar_exp
    (61) comparison_predicate -> scalar_exp . COMPARISON subquery
    (63) between_predicate -> scalar_exp . NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> scalar_exp . BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> scalar_exp . NOT LIKE atom empty
    (66) like_predicate -> scalar_exp . LIKE atom empty
    (69) in_predicate -> scalar_exp . NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> scalar_exp . IN LPAREN subquery RPAREN
    (71) in_predicate -> scalar_exp . NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> scalar_exp . IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> scalar_exp . COMPARISON any_all_some subquery
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    COMPARISON      shift and go to state 188
    NOT             shift and go to state 192
    BETWEEN         shift and go to state 191
    LIKE            shift and go to state 189
    IN              shift and go to state 190
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 123

    (59) predicate -> existence_test .

    OR              reduce using rule 59 (predicate -> existence_test .)
    AND             reduce using rule 59 (predicate -> existence_test .)
    SEMICOLON       reduce using rule 59 (predicate -> existence_test .)
    RPAREN          reduce using rule 59 (predicate -> existence_test .)
    WITH            reduce using rule 59 (predicate -> existence_test .)
    CREATE          reduce using rule 59 (predicate -> existence_test .)
    GRANT           reduce using rule 59 (predicate -> existence_test .)


state 124

    (50) search_condition -> NOT . search_condition
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    predicate                      shift and go to state 115
    between_predicate              shift and go to state 108
    all_cr_any_predicate           shift and go to state 111
    in_predicate                   shift and go to state 119
    column_ref                     shift and go to state 120
    test_for_null                  shift and go to state 121
    search_condition               shift and go to state 193
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    scalar_exp                     shift and go to state 122
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56

state 125

    (82) column_commalist -> column_commalist COMMA . column
    (200) column -> . ID

    ID              shift and go to state 78

    column                         shift and go to state 194

state 126

    (92) opt_column_commalist -> LPAREN column_commalist RPAREN .

    AS              reduce using rule 92 (opt_column_commalist -> LPAREN column_commalist RPAREN .)
    COMMA           reduce using rule 92 (opt_column_commalist -> LPAREN column_commalist RPAREN .)
    ON              reduce using rule 92 (opt_column_commalist -> LPAREN column_commalist RPAREN .)
    VALUES          reduce using rule 92 (opt_column_commalist -> LPAREN column_commalist RPAREN .)
    SELECT          reduce using rule 92 (opt_column_commalist -> LPAREN column_commalist RPAREN .)


state 127

    (83) column_commalist -> LPAREN column_commalist . RPAREN
    (82) column_commalist -> column_commalist . COMMA column

    RPAREN          shift and go to state 195
    COMMA           shift and go to state 125


state 128

    (135) privilege_def -> GRANT privileges ON table TO . grantee_commalist opt_with_grant_option
    (148) grantee_commalist -> . grantee
    (149) grantee_commalist -> . grantee_commalist COMMA grantee
    (150) grantee -> . PUBLIC
    (151) grantee -> . user
    (8) user -> . ID

    PUBLIC          shift and go to state 198
    ID              shift and go to state 102

    grantee                        shift and go to state 196
    grantee_commalist              shift and go to state 197
    user                           shift and go to state 199

state 129

    (178) select_statement -> SELECT opt_all_distinct selection INTO target_commalist . table_exp
    (183) target_commalist -> target_commalist . COMMA target
    (103) table_exp -> . from_clause
    (104) table_exp -> . opt_where_clause
    (105) table_exp -> . opt_group_by_clause
    (106) from_clause -> . FROM table_ref_commalist
    (112) opt_where_clause -> . empty
    (113) opt_where_clause -> . where_clause
    (115) opt_group_by_clause -> . empty
    (116) opt_group_by_clause -> . GROUP BY column_ref_commalist
    (203) empty -> .
    (114) where_clause -> . search_condition
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    COMMA           shift and go to state 204
    FROM            shift and go to state 207
    GROUP           shift and go to state 200
    SEMICOLON       reduce using rule 203 (empty -> .)
    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    opt_group_by_clause            shift and go to state 202
    opt_where_clause               shift and go to state 201
    where_clause                   shift and go to state 110
    between_predicate              shift and go to state 108
    function_ref                   shift and go to state 56
    table_exp                      shift and go to state 203
    all_cr_any_predicate           shift and go to state 111
    search_condition               shift and go to state 113
    from_clause                    shift and go to state 205
    empty                          shift and go to state 206
    predicate                      shift and go to state 115
    like_predicate                 shift and go to state 112
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    in_predicate                   shift and go to state 119
    test_for_null                  shift and go to state 121
    scalar_exp                     shift and go to state 122
    existence_test                 shift and go to state 123
    column_ref                     shift and go to state 120

state 130

    (184) target -> parameter_ref .
    (157) parameter_ref -> parameter_ref . parameter
    (159) parameter -> . ID

  ! shift/reduce conflict for ID resolved as shift
    COMMA           reduce using rule 184 (target -> parameter_ref .)
    FROM            reduce using rule 184 (target -> parameter_ref .)
    GROUP           reduce using rule 184 (target -> parameter_ref .)
    NOT             reduce using rule 184 (target -> parameter_ref .)
    LPAREN          reduce using rule 184 (target -> parameter_ref .)
    EXISTS          reduce using rule 184 (target -> parameter_ref .)
    QUOTE           reduce using rule 184 (target -> parameter_ref .)
    NUMBER          reduce using rule 184 (target -> parameter_ref .)
    AMMSC           reduce using rule 184 (target -> parameter_ref .)
    SEMICOLON       reduce using rule 184 (target -> parameter_ref .)
    ID              shift and go to state 88

  ! ID              [ reduce using rule 184 (target -> parameter_ref .) ]

    parameter                      shift and go to state 135

state 131

    (182) target_commalist -> target .

    COMMA           reduce using rule 182 (target_commalist -> target .)
    FROM            reduce using rule 182 (target_commalist -> target .)
    GROUP           reduce using rule 182 (target_commalist -> target .)
    NOT             reduce using rule 182 (target_commalist -> target .)
    LPAREN          reduce using rule 182 (target_commalist -> target .)
    EXISTS          reduce using rule 182 (target_commalist -> target .)
    ID              reduce using rule 182 (target_commalist -> target .)
    QUOTE           reduce using rule 182 (target_commalist -> target .)
    NUMBER          reduce using rule 182 (target_commalist -> target .)
    AMMSC           reduce using rule 182 (target_commalist -> target .)
    SEMICOLON       reduce using rule 182 (target_commalist -> target .)


state 132

    (102) scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    COMMA           reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    FROM            reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    GROUP           reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    NOT             reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    LPAREN          reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    EXISTS          reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    ID              reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    QUOTE           reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    NUMBER          reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    AMMSC           reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    SEMICOLON       reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    WITH            reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    CREATE          reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    GRANT           reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    INTO            reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    RPAREN          reduce using rule 102 (scalar_exp_commalist -> scalar_exp_commalist COMMA scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 133

    (154) atom -> QUOTE DATE1 QUOTE .

    PLUS            reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    MINUS           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    EQUAL           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    TIMES           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    DIVIDE          reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    COMMA           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    INTO            reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    RPAREN          reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    COMPARISON      reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    NOT             reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    BETWEEN         reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    LIKE            reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    IN              reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    FROM            reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    GROUP           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    LPAREN          reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    EXISTS          reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    ID              reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    QUOTE           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    NUMBER          reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    AMMSC           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    SEMICOLON       reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    WITH            reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    CREATE          reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    GRANT           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    WHERE           reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    AMPERSANT       reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    AND             reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)
    OR              reduce using rule 154 (atom -> QUOTE DATE1 QUOTE .)


state 134

    (152) atom -> QUOTE parameter_ref QUOTE .

    PLUS            reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    MINUS           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    EQUAL           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    TIMES           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    DIVIDE          reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    COMMA           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    INTO            reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    RPAREN          reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    COMPARISON      reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    NOT             reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    BETWEEN         reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    LIKE            reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    IN              reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    FROM            reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    GROUP           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    LPAREN          reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    EXISTS          reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    ID              reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    QUOTE           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    NUMBER          reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    AMMSC           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    SEMICOLON       reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    WITH            reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    CREATE          reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    GRANT           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    WHERE           reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    AMPERSANT       reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    AND             reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)
    OR              reduce using rule 152 (atom -> QUOTE parameter_ref QUOTE .)


state 135

    (157) parameter_ref -> parameter_ref parameter .

    ID              reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    COMMA           reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    FROM            reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    GROUP           reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    NOT             reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    LPAREN          reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    EXISTS          reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    QUOTE           reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    NUMBER          reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    AMMSC           reduce using rule 157 (parameter_ref -> parameter_ref parameter .)
    SEMICOLON       reduce using rule 157 (parameter_ref -> parameter_ref parameter .)


state 136

    (155) atom -> QUOTE USER QUOTE .

    PLUS            reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    MINUS           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    EQUAL           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    TIMES           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    DIVIDE          reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    COMMA           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    INTO            reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    RPAREN          reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    COMPARISON      reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    NOT             reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    BETWEEN         reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    LIKE            reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    IN              reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    FROM            reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    GROUP           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    LPAREN          reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    EXISTS          reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    ID              reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    QUOTE           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    NUMBER          reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    AMMSC           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    SEMICOLON       reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    WITH            reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    CREATE          reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    GRANT           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    WHERE           reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    AMPERSANT       reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    AND             reduce using rule 155 (atom -> QUOTE USER QUOTE .)
    OR              reduce using rule 155 (atom -> QUOTE USER QUOTE .)


state 137

    (158) parameter_ref -> parameter INDICATOR . parameter
    (159) parameter -> . ID

    ID              shift and go to state 88

    parameter                      shift and go to state 208

state 138

    (127) scalar_exp -> LPAREN scalar_exp RPAREN .

    RPAREN          reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    PLUS            reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    MINUS           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    EQUAL           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    TIMES           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    DIVIDE          reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    COMPARISON      reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    NOT             reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    BETWEEN         reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    LIKE            reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    IN              reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    OR              reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    AND             reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    SEMICOLON       reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    WITH            reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    CREATE          reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    GRANT           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    COMMA           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    INTO            reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    FROM            reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    GROUP           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    LPAREN          reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    EXISTS          reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    ID              reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    QUOTE           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    NUMBER          reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    AMMSC           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    WHERE           reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)
    AMPERSANT       reduce using rule 127 (scalar_exp -> LPAREN scalar_exp RPAREN .)


state 139

    (129) column_ref -> ID DOT ID .
    (130) column_ref -> ID DOT ID . DOT ID

    PLUS            reduce using rule 129 (column_ref -> ID DOT ID .)
    MINUS           reduce using rule 129 (column_ref -> ID DOT ID .)
    EQUAL           reduce using rule 129 (column_ref -> ID DOT ID .)
    TIMES           reduce using rule 129 (column_ref -> ID DOT ID .)
    DIVIDE          reduce using rule 129 (column_ref -> ID DOT ID .)
    COMMA           reduce using rule 129 (column_ref -> ID DOT ID .)
    INTO            reduce using rule 129 (column_ref -> ID DOT ID .)
    RPAREN          reduce using rule 129 (column_ref -> ID DOT ID .)
    COMPARISON      reduce using rule 129 (column_ref -> ID DOT ID .)
    NOT             reduce using rule 129 (column_ref -> ID DOT ID .)
    BETWEEN         reduce using rule 129 (column_ref -> ID DOT ID .)
    LIKE            reduce using rule 129 (column_ref -> ID DOT ID .)
    IN              reduce using rule 129 (column_ref -> ID DOT ID .)
    FROM            reduce using rule 129 (column_ref -> ID DOT ID .)
    GROUP           reduce using rule 129 (column_ref -> ID DOT ID .)
    LPAREN          reduce using rule 129 (column_ref -> ID DOT ID .)
    EXISTS          reduce using rule 129 (column_ref -> ID DOT ID .)
    ID              reduce using rule 129 (column_ref -> ID DOT ID .)
    QUOTE           reduce using rule 129 (column_ref -> ID DOT ID .)
    NUMBER          reduce using rule 129 (column_ref -> ID DOT ID .)
    AMMSC           reduce using rule 129 (column_ref -> ID DOT ID .)
    SEMICOLON       reduce using rule 129 (column_ref -> ID DOT ID .)
    WITH            reduce using rule 129 (column_ref -> ID DOT ID .)
    CREATE          reduce using rule 129 (column_ref -> ID DOT ID .)
    GRANT           reduce using rule 129 (column_ref -> ID DOT ID .)
    WHERE           reduce using rule 129 (column_ref -> ID DOT ID .)
    AMPERSANT       reduce using rule 129 (column_ref -> ID DOT ID .)
    AND             reduce using rule 129 (column_ref -> ID DOT ID .)
    OR              reduce using rule 129 (column_ref -> ID DOT ID .)
    IS              reduce using rule 129 (column_ref -> ID DOT ID .)
    DOT             shift and go to state 209


state 140

    (123) scalar_exp -> scalar_exp DIVIDE scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RPAREN          reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    COMPARISON      reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    NOT             reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    BETWEEN         reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    LIKE            reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    IN              reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    OR              reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    AND             reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    SEMICOLON       reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    WITH            reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    CREATE          reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    GRANT           reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    COMMA           reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    INTO            reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    FROM            reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    GROUP           reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    LPAREN          reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    EXISTS          reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    ID              reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    QUOTE           reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    NUMBER          reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    AMMSC           reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    WHERE           reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    AMPERSANT       reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91

  ! PLUS            [ reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .) ]
  ! MINUS           [ reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .) ]
  ! EQUAL           [ reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .) ]
  ! TIMES           [ reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 123 (scalar_exp -> scalar_exp DIVIDE scalar_exp .) ]


state 141

    (121) scalar_exp -> scalar_exp EQUAL scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RPAREN          reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    COMPARISON      reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    NOT             reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    BETWEEN         reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    LIKE            reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    IN              reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    OR              reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    AND             reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    SEMICOLON       reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    WITH            reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    CREATE          reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    GRANT           reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    COMMA           reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    INTO            reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    FROM            reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    GROUP           reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    LPAREN          reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    EXISTS          reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    ID              reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    QUOTE           reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    NUMBER          reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    AMMSC           reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    WHERE           reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    AMPERSANT       reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91

  ! PLUS            [ reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .) ]
  ! MINUS           [ reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .) ]
  ! EQUAL           [ reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .) ]
  ! TIMES           [ reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 121 (scalar_exp -> scalar_exp EQUAL scalar_exp .) ]


state 142

    (122) scalar_exp -> scalar_exp TIMES scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RPAREN          reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    COMPARISON      reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    NOT             reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    BETWEEN         reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    LIKE            reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    IN              reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    OR              reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    AND             reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    SEMICOLON       reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    WITH            reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    CREATE          reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    GRANT           reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    COMMA           reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    INTO            reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    FROM            reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    GROUP           reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    LPAREN          reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    EXISTS          reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    ID              reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    QUOTE           reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    NUMBER          reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    AMMSC           reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    WHERE           reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    AMPERSANT       reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91

  ! PLUS            [ reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .) ]
  ! MINUS           [ reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .) ]
  ! EQUAL           [ reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .) ]
  ! TIMES           [ reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 122 (scalar_exp -> scalar_exp TIMES scalar_exp .) ]


state 143

    (119) scalar_exp -> scalar_exp PLUS scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RPAREN          reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    COMPARISON      reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    NOT             reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    BETWEEN         reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    LIKE            reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    IN              reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    OR              reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    AND             reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    SEMICOLON       reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    WITH            reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    CREATE          reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    GRANT           reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    COMMA           reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    INTO            reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    FROM            reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    GROUP           reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    LPAREN          reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    EXISTS          reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    ID              reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    QUOTE           reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    NUMBER          reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    AMMSC           reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    WHERE           reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    AMPERSANT       reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91

  ! PLUS            [ reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]
  ! MINUS           [ reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]
  ! EQUAL           [ reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]
  ! TIMES           [ reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 119 (scalar_exp -> scalar_exp PLUS scalar_exp .) ]


state 144

    (120) scalar_exp -> scalar_exp MINUS scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RPAREN          reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    COMPARISON      reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    NOT             reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    BETWEEN         reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    LIKE            reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    IN              reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    OR              reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    AND             reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    SEMICOLON       reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    WITH            reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    CREATE          reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    GRANT           reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    COMMA           reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    INTO            reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    FROM            reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    GROUP           reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    LPAREN          reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    EXISTS          reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    ID              reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    QUOTE           reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    NUMBER          reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    AMMSC           reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    WHERE           reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    AMPERSANT       reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91

  ! PLUS            [ reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]
  ! MINUS           [ reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]
  ! EQUAL           [ reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]
  ! TIMES           [ reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]
  ! DIVIDE          [ reduce using rule 120 (scalar_exp -> scalar_exp MINUS scalar_exp .) ]


state 145

    (133) function_ref -> AMMSC LPAREN ALL . scalar_exp RPAREN
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 210
    atom                           shift and go to state 59

state 146

    (132) function_ref -> AMMSC LPAREN DISTINCT . column_ref RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID

    ID              shift and go to state 61

    column_ref                     shift and go to state 211

state 147

    (134) function_ref -> AMMSC LPAREN scalar_exp . RPAREN
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    RPAREN          shift and go to state 212
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 148

    (131) function_ref -> AMMSC LPAREN TIMES . RPAREN

    RPAREN          shift and go to state 213


state 149

    (180) select_statement -> SELECT TIMES FROM table SEMICOLON .

    SEMICOLON       reduce using rule 180 (select_statement -> SELECT TIMES FROM table SEMICOLON .)


state 150

    (181) select_statement -> SELECT TIMES FROM table PLUSPLUS .

    SEMICOLON       reduce using rule 181 (select_statement -> SELECT TIMES FROM table PLUSPLUS .)


state 151

    (179) select_statement -> SELECT TIMES FROM table WHERE . assignment_commalist assign_cond
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (200) column -> . ID

    LPAREN          shift and go to state 106
    ID              shift and go to state 78

    assignment_commalist           shift and go to state 214
    column                         shift and go to state 103
    assignment                     shift and go to state 104

state 152

    (171) insert_statement -> INSERT INTO table opt_column_commalist values_or_query_spec .

    SEMICOLON       reduce using rule 171 (insert_statement -> INSERT INTO table opt_column_commalist values_or_query_spec .)


state 153

    (173) values_or_query_spec -> query_spec .

    SEMICOLON       reduce using rule 173 (values_or_query_spec -> query_spec .)


state 154

    (172) values_or_query_spec -> VALUES . LPAREN insert_atom_commalist RPAREN

    LPAREN          shift and go to state 215


state 155

    (93) query_spec -> SELECT . opt_all_distinct FROM selection table_exp
    (96) opt_all_distinct -> . empty
    (97) opt_all_distinct -> . ALL
    (98) opt_all_distinct -> . DISTINCT
    (203) empty -> .

    ALL             shift and go to state 31
    DISTINCT        shift and go to state 34
    FROM            reduce using rule 203 (empty -> .)

    opt_all_distinct               shift and go to state 216
    empty                          shift and go to state 35

state 156

    (16) base_table_def -> CREATE TABLE table LPAREN base_table_element_commalist . RPAREN
    (18) base_table_element_commalist -> base_table_element_commalist . COMMA base_table_element

    RPAREN          shift and go to state 217
    COMMA           shift and go to state 218


state 157

    (87) table_constraint_def -> FOREIGN . KEY LPAREN column_commalist RPAREN REFERENCES table
    (88) table_constraint_def -> FOREIGN . KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN

    KEY             shift and go to state 219


state 158

    (17) base_table_element_commalist -> base_table_element .

    RPAREN          reduce using rule 17 (base_table_element_commalist -> base_table_element .)
    COMMA           reduce using rule 17 (base_table_element_commalist -> base_table_element .)


state 159

    (21) base_table_element -> table_constraint_def .

    RPAREN          reduce using rule 21 (base_table_element -> table_constraint_def .)
    COMMA           reduce using rule 21 (base_table_element -> table_constraint_def .)


state 160

    (84) constraint_def -> CONSTRAINT . ID table_constraint_def

    ID              shift and go to state 220


state 161

    (19) base_table_element -> column_def .

    RPAREN          reduce using rule 19 (base_table_element -> column_def .)
    COMMA           reduce using rule 19 (base_table_element -> column_def .)


state 162

    (89) table_constraint_def -> CHECK . LPAREN search_condition RPAREN

    LPAREN          shift and go to state 221


state 163

    (20) base_table_element -> constraint_def .

    RPAREN          reduce using rule 20 (base_table_element -> constraint_def .)
    COMMA           reduce using rule 20 (base_table_element -> constraint_def .)


state 164

    (85) table_constraint_def -> UNIQUE . LPAREN column_commalist RPAREN

    LPAREN          shift and go to state 222


state 165

    (22) column_def -> column . data_type column_def_opt_list
    (23) data_type -> . CHAR
    (24) data_type -> . INT IDENTITY identity
    (25) data_type -> . CHAR LPAREN NUMBER RPAREN
    (26) data_type -> . VARCHAR
    (27) data_type -> . VARCHAR LPAREN NUMBER RPAREN
    (28) data_type -> . INT
    (29) data_type -> . FLOAT
    (30) data_type -> . DOUBLE

    CHAR            shift and go to state 226
    INT             shift and go to state 228
    VARCHAR         shift and go to state 227
    FLOAT           shift and go to state 225
    DOUBLE          shift and go to state 224

    data_type                      shift and go to state 223

state 166

    (86) table_constraint_def -> PRIMARY . KEY LPAREN column_commalist RPAREN

    KEY             shift and go to state 229


state 167

    (90) view_def -> CREATE VIEW table opt_column_commalist AS . query_spec opt_with_check_option
    (93) query_spec -> . SELECT opt_all_distinct FROM selection table_exp

    SELECT          shift and go to state 155

    query_spec                     shift and go to state 230

state 168

    (16) base_table_def -> CREATE . TABLE table LPAREN base_table_element_commalist RPAREN
    (90) view_def -> CREATE . VIEW table opt_column_commalist AS query_spec opt_with_check_option

    TABLE           shift and go to state 37
    VIEW            shift and go to state 38


state 169

    (9) opt_schema_element_list -> empty .

    SEMICOLON       reduce using rule 9 (opt_schema_element_list -> empty .)


state 170

    (10) opt_schema_element_list -> schema_element_list .
    (12) schema_element_list -> schema_element_list . schema_element
    (13) schema_element -> . base_table_def
    (14) schema_element -> . view_def
    (15) schema_element -> . privilege_def
    (16) base_table_def -> . CREATE TABLE table LPAREN base_table_element_commalist RPAREN
    (90) view_def -> . CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option
    (135) privilege_def -> . GRANT privileges ON table TO grantee_commalist opt_with_grant_option

    SEMICOLON       reduce using rule 10 (opt_schema_element_list -> schema_element_list .)
    CREATE          shift and go to state 168
    GRANT           shift and go to state 2

    view_def                       shift and go to state 18
    privilege_def                  shift and go to state 12
    base_table_def                 shift and go to state 13
    schema_element                 shift and go to state 231

state 171

    (7) schema -> CREATE SCHEMA AUTHORIZATION user opt_schema_element_list .

    SEMICOLON       reduce using rule 7 (schema -> CREATE SCHEMA AUTHORIZATION user opt_schema_element_list .)


state 172

    (11) schema_element_list -> schema_element .

    CREATE          reduce using rule 11 (schema_element_list -> schema_element .)
    GRANT           reduce using rule 11 (schema_element_list -> schema_element .)
    SEMICOLON       reduce using rule 11 (schema_element_list -> schema_element .)


state 173

    (190) assignment -> column GREATER . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    scalar_exp                     shift and go to state 232
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56

state 174

    (189) assignment -> column LESS . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    scalar_exp                     shift and go to state 233
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56

state 175

    (187) assignment -> column EQUAL . scalar_exp
    (191) assignment -> column EQUAL . NULL
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    NULL            shift and go to state 234
    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    scalar_exp                     shift and go to state 235
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56

state 176

    (168) update_statement -> UPDATE table SET assignment_commalist opt_where_clause .

    SEMICOLON       reduce using rule 168 (update_statement -> UPDATE table SET assignment_commalist opt_where_clause .)


state 177

    (186) assignment_commalist -> assignment_commalist COMMA . assignment
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (200) column -> . ID

    LPAREN          shift and go to state 106
    ID              shift and go to state 78

    column                         shift and go to state 103
    assignment                     shift and go to state 236

state 178

    (166) update_statement -> UPDATE table SET assignment_commalist WHERE . search_condition
    (167) update_statement -> UPDATE table SET assignment_commalist WHERE . assignment_commalist assign_cond
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (200) column -> . ID
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    NOT             shift and go to state 124
    LPAREN          shift and go to state 239
    EXISTS          shift and go to state 116
    ID              shift and go to state 240
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    between_predicate              shift and go to state 108
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56
    all_cr_any_predicate           shift and go to state 111
    like_predicate                 shift and go to state 112
    search_condition               shift and go to state 237
    assignment                     shift and go to state 104
    predicate                      shift and go to state 115
    assignment_commalist           shift and go to state 238
    atom                           shift and go to state 59
    in_predicate                   shift and go to state 119
    column                         shift and go to state 103
    column_ref                     shift and go to state 120
    test_for_null                  shift and go to state 121
    scalar_exp                     shift and go to state 122
    existence_test                 shift and go to state 123

state 179

    (188) assignment -> LPAREN assignment_commalist . AMPERSANT AMPERSANT assignment_commalist RPAREN
    (186) assignment_commalist -> assignment_commalist . COMMA assignment

    AMPERSANT       shift and go to state 241
    COMMA           shift and go to state 177


state 180

    (49) search_condition -> search_condition AND . search_condition
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    predicate                      shift and go to state 115
    between_predicate              shift and go to state 108
    all_cr_any_predicate           shift and go to state 111
    in_predicate                   shift and go to state 119
    column_ref                     shift and go to state 120
    test_for_null                  shift and go to state 121
    search_condition               shift and go to state 242
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    scalar_exp                     shift and go to state 122
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56

state 181

    (48) search_condition -> search_condition OR . search_condition
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    predicate                      shift and go to state 115
    between_predicate              shift and go to state 108
    all_cr_any_predicate           shift and go to state 111
    in_predicate                   shift and go to state 119
    column_ref                     shift and go to state 120
    test_for_null                  shift and go to state 121
    search_condition               shift and go to state 243
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    scalar_exp                     shift and go to state 122
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56

state 182

    (79) existence_test -> EXISTS subquery .

    OR              reduce using rule 79 (existence_test -> EXISTS subquery .)
    AND             reduce using rule 79 (existence_test -> EXISTS subquery .)
    SEMICOLON       reduce using rule 79 (existence_test -> EXISTS subquery .)
    RPAREN          reduce using rule 79 (existence_test -> EXISTS subquery .)
    WITH            reduce using rule 79 (existence_test -> EXISTS subquery .)
    CREATE          reduce using rule 79 (existence_test -> EXISTS subquery .)
    GRANT           reduce using rule 79 (existence_test -> EXISTS subquery .)


state 183

    (62) subquery -> LPAREN . SELECT opt_all_distinct selection table_exp RPAREN

    SELECT          shift and go to state 244


state 184

    (51) search_condition -> LPAREN search_condition . RPAREN
    (48) search_condition -> search_condition . OR search_condition
    (49) search_condition -> search_condition . AND search_condition

    RPAREN          shift and go to state 245
    OR              shift and go to state 181
    AND             shift and go to state 180


state 185

    (125) scalar_exp -> column_ref .
    (67) test_for_null -> column_ref . IS NOT NULL
    (68) test_for_null -> column_ref . IS NULL

    RPAREN          reduce using rule 125 (scalar_exp -> column_ref .)
    PLUS            reduce using rule 125 (scalar_exp -> column_ref .)
    MINUS           reduce using rule 125 (scalar_exp -> column_ref .)
    EQUAL           reduce using rule 125 (scalar_exp -> column_ref .)
    TIMES           reduce using rule 125 (scalar_exp -> column_ref .)
    DIVIDE          reduce using rule 125 (scalar_exp -> column_ref .)
    COMPARISON      reduce using rule 125 (scalar_exp -> column_ref .)
    NOT             reduce using rule 125 (scalar_exp -> column_ref .)
    BETWEEN         reduce using rule 125 (scalar_exp -> column_ref .)
    LIKE            reduce using rule 125 (scalar_exp -> column_ref .)
    IN              reduce using rule 125 (scalar_exp -> column_ref .)
    IS              shift and go to state 187


state 186

    (127) scalar_exp -> LPAREN scalar_exp . RPAREN
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp
    (60) comparison_predicate -> scalar_exp . COMPARISON scalar_exp
    (61) comparison_predicate -> scalar_exp . COMPARISON subquery
    (63) between_predicate -> scalar_exp . NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> scalar_exp . BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> scalar_exp . NOT LIKE atom empty
    (66) like_predicate -> scalar_exp . LIKE atom empty
    (69) in_predicate -> scalar_exp . NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> scalar_exp . IN LPAREN subquery RPAREN
    (71) in_predicate -> scalar_exp . NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> scalar_exp . IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> scalar_exp . COMPARISON any_all_some subquery

    RPAREN          shift and go to state 138
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91
    COMPARISON      shift and go to state 188
    NOT             shift and go to state 192
    BETWEEN         shift and go to state 191
    LIKE            shift and go to state 189
    IN              shift and go to state 190


state 187

    (67) test_for_null -> column_ref IS . NOT NULL
    (68) test_for_null -> column_ref IS . NULL

    NOT             shift and go to state 246
    NULL            shift and go to state 247


state 188

    (60) comparison_predicate -> scalar_exp COMPARISON . scalar_exp
    (61) comparison_predicate -> scalar_exp COMPARISON . subquery
    (75) all_cr_any_predicate -> scalar_exp COMPARISON . any_all_some subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (62) subquery -> . LPAREN SELECT opt_all_distinct selection table_exp RPAREN
    (76) any_all_some -> . ANY
    (77) any_all_some -> . ALL
    (78) any_all_some -> . SOME
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 250
    ANY             shift and go to state 254
    ALL             shift and go to state 251
    SOME            shift and go to state 248
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    scalar_exp                     shift and go to state 252
    subquery                       shift and go to state 253
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56
    any_all_some                   shift and go to state 249

state 189

    (66) like_predicate -> scalar_exp LIKE . atom empty
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE

    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55

    atom                           shift and go to state 255

state 190

    (70) in_predicate -> scalar_exp IN . LPAREN subquery RPAREN
    (72) in_predicate -> scalar_exp IN . LPAREN atom_commalist RPAREN

    LPAREN          shift and go to state 256


state 191

    (64) between_predicate -> scalar_exp BETWEEN . scalar_exp AND scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 257
    atom                           shift and go to state 59

state 192

    (63) between_predicate -> scalar_exp NOT . BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> scalar_exp NOT . LIKE atom empty
    (69) in_predicate -> scalar_exp NOT . IN LPAREN subquery RPAREN
    (71) in_predicate -> scalar_exp NOT . IN LPAREN atom_commalist RPAREN

    BETWEEN         shift and go to state 260
    LIKE            shift and go to state 258
    IN              shift and go to state 259


state 193

    (50) search_condition -> NOT search_condition .
    (48) search_condition -> search_condition . OR search_condition
    (49) search_condition -> search_condition . AND search_condition

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RPAREN          reduce using rule 50 (search_condition -> NOT search_condition .)
    SEMICOLON       reduce using rule 50 (search_condition -> NOT search_condition .)
    WITH            reduce using rule 50 (search_condition -> NOT search_condition .)
    CREATE          reduce using rule 50 (search_condition -> NOT search_condition .)
    GRANT           reduce using rule 50 (search_condition -> NOT search_condition .)
    OR              shift and go to state 181
    AND             shift and go to state 180

  ! OR              [ reduce using rule 50 (search_condition -> NOT search_condition .) ]
  ! AND             [ reduce using rule 50 (search_condition -> NOT search_condition .) ]


state 194

    (82) column_commalist -> column_commalist COMMA column .

    RPAREN          reduce using rule 82 (column_commalist -> column_commalist COMMA column .)
    COMMA           reduce using rule 82 (column_commalist -> column_commalist COMMA column .)


state 195

    (83) column_commalist -> LPAREN column_commalist RPAREN .

    RPAREN          reduce using rule 83 (column_commalist -> LPAREN column_commalist RPAREN .)
    COMMA           reduce using rule 83 (column_commalist -> LPAREN column_commalist RPAREN .)


state 196

    (148) grantee_commalist -> grantee .

    COMMA           reduce using rule 148 (grantee_commalist -> grantee .)
    WITH            reduce using rule 148 (grantee_commalist -> grantee .)
    SEMICOLON       reduce using rule 148 (grantee_commalist -> grantee .)
    CREATE          reduce using rule 148 (grantee_commalist -> grantee .)
    GRANT           reduce using rule 148 (grantee_commalist -> grantee .)


state 197

    (135) privilege_def -> GRANT privileges ON table TO grantee_commalist . opt_with_grant_option
    (149) grantee_commalist -> grantee_commalist . COMMA grantee
    (136) opt_with_grant_option -> . empty
    (137) opt_with_grant_option -> . WITH GRANT OPTION
    (203) empty -> .

    COMMA           shift and go to state 262
    WITH            shift and go to state 263
    SEMICOLON       reduce using rule 203 (empty -> .)
    CREATE          reduce using rule 203 (empty -> .)
    GRANT           reduce using rule 203 (empty -> .)

    opt_with_grant_option          shift and go to state 261
    empty                          shift and go to state 264

state 198

    (150) grantee -> PUBLIC .

    COMMA           reduce using rule 150 (grantee -> PUBLIC .)
    WITH            reduce using rule 150 (grantee -> PUBLIC .)
    SEMICOLON       reduce using rule 150 (grantee -> PUBLIC .)
    CREATE          reduce using rule 150 (grantee -> PUBLIC .)
    GRANT           reduce using rule 150 (grantee -> PUBLIC .)


state 199

    (151) grantee -> user .

    COMMA           reduce using rule 151 (grantee -> user .)
    WITH            reduce using rule 151 (grantee -> user .)
    SEMICOLON       reduce using rule 151 (grantee -> user .)
    CREATE          reduce using rule 151 (grantee -> user .)
    GRANT           reduce using rule 151 (grantee -> user .)


state 200

    (116) opt_group_by_clause -> GROUP . BY column_ref_commalist

    BY              shift and go to state 265


state 201

    (104) table_exp -> opt_where_clause .

    SEMICOLON       reduce using rule 104 (table_exp -> opt_where_clause .)
    WITH            reduce using rule 104 (table_exp -> opt_where_clause .)
    CREATE          reduce using rule 104 (table_exp -> opt_where_clause .)
    GRANT           reduce using rule 104 (table_exp -> opt_where_clause .)
    RPAREN          reduce using rule 104 (table_exp -> opt_where_clause .)


state 202

    (105) table_exp -> opt_group_by_clause .

    SEMICOLON       reduce using rule 105 (table_exp -> opt_group_by_clause .)
    WITH            reduce using rule 105 (table_exp -> opt_group_by_clause .)
    CREATE          reduce using rule 105 (table_exp -> opt_group_by_clause .)
    GRANT           reduce using rule 105 (table_exp -> opt_group_by_clause .)
    RPAREN          reduce using rule 105 (table_exp -> opt_group_by_clause .)


state 203

    (178) select_statement -> SELECT opt_all_distinct selection INTO target_commalist table_exp .

    SEMICOLON       reduce using rule 178 (select_statement -> SELECT opt_all_distinct selection INTO target_commalist table_exp .)


state 204

    (183) target_commalist -> target_commalist COMMA . target
    (184) target -> . parameter_ref
    (156) parameter_ref -> . parameter
    (157) parameter_ref -> . parameter_ref parameter
    (158) parameter_ref -> . parameter INDICATOR parameter
    (159) parameter -> . ID

    ID              shift and go to state 88

    parameter_ref                  shift and go to state 130
    parameter                      shift and go to state 87
    target                         shift and go to state 266

state 205

    (103) table_exp -> from_clause .

    SEMICOLON       reduce using rule 103 (table_exp -> from_clause .)
    WITH            reduce using rule 103 (table_exp -> from_clause .)
    CREATE          reduce using rule 103 (table_exp -> from_clause .)
    GRANT           reduce using rule 103 (table_exp -> from_clause .)
    RPAREN          reduce using rule 103 (table_exp -> from_clause .)


state 206

    (112) opt_where_clause -> empty .
    (115) opt_group_by_clause -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 112 (opt_where_clause -> empty .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 112 (opt_where_clause -> empty .)
  ! reduce/reduce conflict for WITH resolved using rule 112 (opt_where_clause -> empty .)
  ! reduce/reduce conflict for CREATE resolved using rule 112 (opt_where_clause -> empty .)
  ! reduce/reduce conflict for GRANT resolved using rule 112 (opt_where_clause -> empty .)
    SEMICOLON       reduce using rule 112 (opt_where_clause -> empty .)
    WITH            reduce using rule 112 (opt_where_clause -> empty .)
    CREATE          reduce using rule 112 (opt_where_clause -> empty .)
    GRANT           reduce using rule 112 (opt_where_clause -> empty .)
    RPAREN          reduce using rule 112 (opt_where_clause -> empty .)

  ! RPAREN          [ reduce using rule 115 (opt_group_by_clause -> empty .) ]
  ! SEMICOLON       [ reduce using rule 115 (opt_group_by_clause -> empty .) ]
  ! WITH            [ reduce using rule 115 (opt_group_by_clause -> empty .) ]
  ! CREATE          [ reduce using rule 115 (opt_group_by_clause -> empty .) ]
  ! GRANT           [ reduce using rule 115 (opt_group_by_clause -> empty .) ]


state 207

    (106) from_clause -> FROM . table_ref_commalist
    (107) table_ref_commalist -> . table_ref
    (108) table_ref_commalist -> . table_ref_commalist COMMA table_ref
    (109) table_ref -> . table
    (110) table_ref -> . table range_variable
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table_ref_commalist            shift and go to state 267
    table_ref                      shift and go to state 269
    table                          shift and go to state 268

state 208

    (158) parameter_ref -> parameter INDICATOR parameter .

    ID              reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    COMMA           reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    FROM            reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    GROUP           reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    NOT             reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    LPAREN          reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    EXISTS          reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    QUOTE           reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    NUMBER          reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    AMMSC           reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)
    SEMICOLON       reduce using rule 158 (parameter_ref -> parameter INDICATOR parameter .)


state 209

    (130) column_ref -> ID DOT ID DOT . ID

    ID              shift and go to state 270


state 210

    (133) function_ref -> AMMSC LPAREN ALL scalar_exp . RPAREN
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    RPAREN          shift and go to state 271
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 211

    (132) function_ref -> AMMSC LPAREN DISTINCT column_ref . RPAREN

    RPAREN          shift and go to state 272


state 212

    (134) function_ref -> AMMSC LPAREN scalar_exp RPAREN .

    COMPARISON      reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    NOT             reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    BETWEEN         reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    LIKE            reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    IN              reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    PLUS            reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    MINUS           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    EQUAL           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    TIMES           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    DIVIDE          reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    COMMA           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    INTO            reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    RPAREN          reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    FROM            reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    GROUP           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    LPAREN          reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    EXISTS          reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    ID              reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    QUOTE           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    NUMBER          reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    AMMSC           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    SEMICOLON       reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    WITH            reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    CREATE          reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    GRANT           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    WHERE           reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    AMPERSANT       reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    AND             reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)
    OR              reduce using rule 134 (function_ref -> AMMSC LPAREN scalar_exp RPAREN .)


state 213

    (131) function_ref -> AMMSC LPAREN TIMES RPAREN .

    COMPARISON      reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    NOT             reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    BETWEEN         reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    LIKE            reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    IN              reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    PLUS            reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    MINUS           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    EQUAL           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    TIMES           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    DIVIDE          reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    COMMA           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    INTO            reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    RPAREN          reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    FROM            reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    GROUP           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    LPAREN          reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    EXISTS          reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    ID              reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    QUOTE           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    NUMBER          reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    AMMSC           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    SEMICOLON       reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    WITH            reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    CREATE          reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    GRANT           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    WHERE           reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    AMPERSANT       reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    AND             reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)
    OR              reduce using rule 131 (function_ref -> AMMSC LPAREN TIMES RPAREN .)


state 214

    (179) select_statement -> SELECT TIMES FROM table WHERE assignment_commalist . assign_cond
    (186) assignment_commalist -> assignment_commalist . COMMA assignment
    (192) assign_cond -> . assign_cond cond assignment_commalist
    (193) assign_cond -> . cond assignment_commalist
    (194) cond -> . cond OR
    (195) cond -> . cond AND
    (196) cond -> . cond AMPERSANT AMPERSANT
    (197) cond -> . AND
    (198) cond -> . OR
    (199) cond -> . AMPERSANT AMPERSANT

    COMMA           shift and go to state 177
    AND             shift and go to state 273
    OR              shift and go to state 277
    AMPERSANT       shift and go to state 274

    cond                           shift and go to state 275
    assign_cond                    shift and go to state 276

state 215

    (172) values_or_query_spec -> VALUES LPAREN . insert_atom_commalist RPAREN
    (174) insert_atom_commalist -> . insert_atom
    (175) insert_atom_commalist -> . insert_atom_commalist COMMA insert_atom
    (176) insert_atom -> . atom
    (177) insert_atom -> . NULL
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE

    NULL            shift and go to state 281
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55

    insert_atom_commalist          shift and go to state 278
    insert_atom                    shift and go to state 280
    atom                           shift and go to state 279

state 216

    (93) query_spec -> SELECT opt_all_distinct . FROM selection table_exp

    FROM            shift and go to state 282


state 217

    (16) base_table_def -> CREATE TABLE table LPAREN base_table_element_commalist RPAREN .

    SEMICOLON       reduce using rule 16 (base_table_def -> CREATE TABLE table LPAREN base_table_element_commalist RPAREN .)
    CREATE          reduce using rule 16 (base_table_def -> CREATE TABLE table LPAREN base_table_element_commalist RPAREN .)
    GRANT           reduce using rule 16 (base_table_def -> CREATE TABLE table LPAREN base_table_element_commalist RPAREN .)


state 218

    (18) base_table_element_commalist -> base_table_element_commalist COMMA . base_table_element
    (19) base_table_element -> . column_def
    (20) base_table_element -> . constraint_def
    (21) base_table_element -> . table_constraint_def
    (22) column_def -> . column data_type column_def_opt_list
    (84) constraint_def -> . CONSTRAINT ID table_constraint_def
    (85) table_constraint_def -> . UNIQUE LPAREN column_commalist RPAREN
    (86) table_constraint_def -> . PRIMARY KEY LPAREN column_commalist RPAREN
    (87) table_constraint_def -> . FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table
    (88) table_constraint_def -> . FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN
    (89) table_constraint_def -> . CHECK LPAREN search_condition RPAREN
    (200) column -> . ID

    CONSTRAINT      shift and go to state 160
    UNIQUE          shift and go to state 164
    PRIMARY         shift and go to state 166
    FOREIGN         shift and go to state 157
    CHECK           shift and go to state 162
    ID              shift and go to state 78

    constraint_def                 shift and go to state 163
    column                         shift and go to state 165
    column_def                     shift and go to state 161
    base_table_element             shift and go to state 283
    table_constraint_def           shift and go to state 159

state 219

    (87) table_constraint_def -> FOREIGN KEY . LPAREN column_commalist RPAREN REFERENCES table
    (88) table_constraint_def -> FOREIGN KEY . LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN

    LPAREN          shift and go to state 284


state 220

    (84) constraint_def -> CONSTRAINT ID . table_constraint_def
    (85) table_constraint_def -> . UNIQUE LPAREN column_commalist RPAREN
    (86) table_constraint_def -> . PRIMARY KEY LPAREN column_commalist RPAREN
    (87) table_constraint_def -> . FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table
    (88) table_constraint_def -> . FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN
    (89) table_constraint_def -> . CHECK LPAREN search_condition RPAREN

    UNIQUE          shift and go to state 164
    PRIMARY         shift and go to state 166
    FOREIGN         shift and go to state 157
    CHECK           shift and go to state 162

    table_constraint_def           shift and go to state 285

state 221

    (89) table_constraint_def -> CHECK LPAREN . search_condition RPAREN
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    predicate                      shift and go to state 115
    between_predicate              shift and go to state 108
    all_cr_any_predicate           shift and go to state 111
    in_predicate                   shift and go to state 119
    column_ref                     shift and go to state 120
    test_for_null                  shift and go to state 121
    search_condition               shift and go to state 286
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    scalar_exp                     shift and go to state 122
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56

state 222

    (85) table_constraint_def -> UNIQUE LPAREN . column_commalist RPAREN
    (80) column_commalist -> . empty
    (81) column_commalist -> . column
    (82) column_commalist -> . column_commalist COMMA column
    (83) column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .
    (200) column -> . ID

    LPAREN          shift and go to state 77
    RPAREN          reduce using rule 203 (empty -> .)
    COMMA           reduce using rule 203 (empty -> .)
    ID              shift and go to state 78

    column                         shift and go to state 75
    empty                          shift and go to state 79
    column_commalist               shift and go to state 287

state 223

    (22) column_def -> column data_type . column_def_opt_list
    (36) column_def_opt_list -> . column_def_opt_list column_def_opt
    (37) column_def_opt_list -> . column_def_opt
    (38) column_def_opt -> . empty
    (39) column_def_opt -> . NOT NULL
    (40) column_def_opt -> . NULL
    (41) column_def_opt -> . NOT NULL UNIQUE
    (42) column_def_opt -> . NOT NULL PRIMARY KEY
    (43) column_def_opt -> . DEFAULT NULL
    (44) column_def_opt -> . DEFAULT USER
    (45) column_def_opt -> . CHECK LPAREN search_condition RPAREN
    (46) column_def_opt -> . REFERENCES table
    (47) column_def_opt -> . REFERENCES table LPAREN column_commalist RPAREN
    (203) empty -> .

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for REFERENCES resolved as shift
    NOT             shift and go to state 292
    NULL            shift and go to state 293
    DEFAULT         shift and go to state 288
    CHECK           shift and go to state 294
    REFERENCES      shift and go to state 290
    RPAREN          reduce using rule 203 (empty -> .)
    COMMA           reduce using rule 203 (empty -> .)

  ! NOT             [ reduce using rule 203 (empty -> .) ]
  ! NULL            [ reduce using rule 203 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 203 (empty -> .) ]
  ! CHECK           [ reduce using rule 203 (empty -> .) ]
  ! REFERENCES      [ reduce using rule 203 (empty -> .) ]

    column_def_opt_list            shift and go to state 289
    column_def_opt                 shift and go to state 291
    empty                          shift and go to state 295

state 224

    (30) data_type -> DOUBLE .

    NOT             reduce using rule 30 (data_type -> DOUBLE .)
    NULL            reduce using rule 30 (data_type -> DOUBLE .)
    DEFAULT         reduce using rule 30 (data_type -> DOUBLE .)
    CHECK           reduce using rule 30 (data_type -> DOUBLE .)
    REFERENCES      reduce using rule 30 (data_type -> DOUBLE .)
    RPAREN          reduce using rule 30 (data_type -> DOUBLE .)
    COMMA           reduce using rule 30 (data_type -> DOUBLE .)


state 225

    (29) data_type -> FLOAT .

    NOT             reduce using rule 29 (data_type -> FLOAT .)
    NULL            reduce using rule 29 (data_type -> FLOAT .)
    DEFAULT         reduce using rule 29 (data_type -> FLOAT .)
    CHECK           reduce using rule 29 (data_type -> FLOAT .)
    REFERENCES      reduce using rule 29 (data_type -> FLOAT .)
    RPAREN          reduce using rule 29 (data_type -> FLOAT .)
    COMMA           reduce using rule 29 (data_type -> FLOAT .)


state 226

    (23) data_type -> CHAR .
    (25) data_type -> CHAR . LPAREN NUMBER RPAREN

    NOT             reduce using rule 23 (data_type -> CHAR .)
    NULL            reduce using rule 23 (data_type -> CHAR .)
    DEFAULT         reduce using rule 23 (data_type -> CHAR .)
    CHECK           reduce using rule 23 (data_type -> CHAR .)
    REFERENCES      reduce using rule 23 (data_type -> CHAR .)
    RPAREN          reduce using rule 23 (data_type -> CHAR .)
    COMMA           reduce using rule 23 (data_type -> CHAR .)
    LPAREN          shift and go to state 296


state 227

    (26) data_type -> VARCHAR .
    (27) data_type -> VARCHAR . LPAREN NUMBER RPAREN

    NOT             reduce using rule 26 (data_type -> VARCHAR .)
    NULL            reduce using rule 26 (data_type -> VARCHAR .)
    DEFAULT         reduce using rule 26 (data_type -> VARCHAR .)
    CHECK           reduce using rule 26 (data_type -> VARCHAR .)
    REFERENCES      reduce using rule 26 (data_type -> VARCHAR .)
    RPAREN          reduce using rule 26 (data_type -> VARCHAR .)
    COMMA           reduce using rule 26 (data_type -> VARCHAR .)
    LPAREN          shift and go to state 297


state 228

    (24) data_type -> INT . IDENTITY identity
    (28) data_type -> INT .

    IDENTITY        shift and go to state 298
    NOT             reduce using rule 28 (data_type -> INT .)
    NULL            reduce using rule 28 (data_type -> INT .)
    DEFAULT         reduce using rule 28 (data_type -> INT .)
    CHECK           reduce using rule 28 (data_type -> INT .)
    REFERENCES      reduce using rule 28 (data_type -> INT .)
    RPAREN          reduce using rule 28 (data_type -> INT .)
    COMMA           reduce using rule 28 (data_type -> INT .)


state 229

    (86) table_constraint_def -> PRIMARY KEY . LPAREN column_commalist RPAREN

    LPAREN          shift and go to state 299


state 230

    (90) view_def -> CREATE VIEW table opt_column_commalist AS query_spec . opt_with_check_option
    (94) opt_with_check_option -> . empty
    (95) opt_with_check_option -> . WITH CHECK OPTION
    (203) empty -> .

    WITH            shift and go to state 300
    SEMICOLON       reduce using rule 203 (empty -> .)
    CREATE          reduce using rule 203 (empty -> .)
    GRANT           reduce using rule 203 (empty -> .)

    opt_with_check_option          shift and go to state 301
    empty                          shift and go to state 302

state 231

    (12) schema_element_list -> schema_element_list schema_element .

    CREATE          reduce using rule 12 (schema_element_list -> schema_element_list schema_element .)
    GRANT           reduce using rule 12 (schema_element_list -> schema_element_list schema_element .)
    SEMICOLON       reduce using rule 12 (schema_element_list -> schema_element_list schema_element .)


state 232

    (190) assignment -> column GREATER scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    WHERE           reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    COMMA           reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    NOT             reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    LPAREN          reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    EXISTS          reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    ID              reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    QUOTE           reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    NUMBER          reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    AMMSC           reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    SEMICOLON       reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    AMPERSANT       reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    AND             reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    OR              reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    RPAREN          reduce using rule 190 (assignment -> column GREATER scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 233

    (189) assignment -> column LESS scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    WHERE           reduce using rule 189 (assignment -> column LESS scalar_exp .)
    COMMA           reduce using rule 189 (assignment -> column LESS scalar_exp .)
    NOT             reduce using rule 189 (assignment -> column LESS scalar_exp .)
    LPAREN          reduce using rule 189 (assignment -> column LESS scalar_exp .)
    EXISTS          reduce using rule 189 (assignment -> column LESS scalar_exp .)
    ID              reduce using rule 189 (assignment -> column LESS scalar_exp .)
    QUOTE           reduce using rule 189 (assignment -> column LESS scalar_exp .)
    NUMBER          reduce using rule 189 (assignment -> column LESS scalar_exp .)
    AMMSC           reduce using rule 189 (assignment -> column LESS scalar_exp .)
    SEMICOLON       reduce using rule 189 (assignment -> column LESS scalar_exp .)
    AMPERSANT       reduce using rule 189 (assignment -> column LESS scalar_exp .)
    AND             reduce using rule 189 (assignment -> column LESS scalar_exp .)
    OR              reduce using rule 189 (assignment -> column LESS scalar_exp .)
    RPAREN          reduce using rule 189 (assignment -> column LESS scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 234

    (191) assignment -> column EQUAL NULL .

    WHERE           reduce using rule 191 (assignment -> column EQUAL NULL .)
    COMMA           reduce using rule 191 (assignment -> column EQUAL NULL .)
    NOT             reduce using rule 191 (assignment -> column EQUAL NULL .)
    LPAREN          reduce using rule 191 (assignment -> column EQUAL NULL .)
    EXISTS          reduce using rule 191 (assignment -> column EQUAL NULL .)
    ID              reduce using rule 191 (assignment -> column EQUAL NULL .)
    QUOTE           reduce using rule 191 (assignment -> column EQUAL NULL .)
    NUMBER          reduce using rule 191 (assignment -> column EQUAL NULL .)
    AMMSC           reduce using rule 191 (assignment -> column EQUAL NULL .)
    SEMICOLON       reduce using rule 191 (assignment -> column EQUAL NULL .)
    AMPERSANT       reduce using rule 191 (assignment -> column EQUAL NULL .)
    AND             reduce using rule 191 (assignment -> column EQUAL NULL .)
    OR              reduce using rule 191 (assignment -> column EQUAL NULL .)
    RPAREN          reduce using rule 191 (assignment -> column EQUAL NULL .)


state 235

    (187) assignment -> column EQUAL scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    WHERE           reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    COMMA           reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    NOT             reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    LPAREN          reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    EXISTS          reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    ID              reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    QUOTE           reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    NUMBER          reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    AMMSC           reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    SEMICOLON       reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    AMPERSANT       reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    AND             reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    OR              reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    RPAREN          reduce using rule 187 (assignment -> column EQUAL scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 236

    (186) assignment_commalist -> assignment_commalist COMMA assignment .

    WHERE           reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    COMMA           reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    NOT             reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    LPAREN          reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    EXISTS          reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    ID              reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    QUOTE           reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    NUMBER          reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    AMMSC           reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    SEMICOLON       reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    AMPERSANT       reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    RPAREN          reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    AND             reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)
    OR              reduce using rule 186 (assignment_commalist -> assignment_commalist COMMA assignment .)


state 237

    (166) update_statement -> UPDATE table SET assignment_commalist WHERE search_condition .
    (48) search_condition -> search_condition . OR search_condition
    (49) search_condition -> search_condition . AND search_condition

    SEMICOLON       reduce using rule 166 (update_statement -> UPDATE table SET assignment_commalist WHERE search_condition .)
    OR              shift and go to state 181
    AND             shift and go to state 180


state 238

    (167) update_statement -> UPDATE table SET assignment_commalist WHERE assignment_commalist . assign_cond
    (186) assignment_commalist -> assignment_commalist . COMMA assignment
    (192) assign_cond -> . assign_cond cond assignment_commalist
    (193) assign_cond -> . cond assignment_commalist
    (194) cond -> . cond OR
    (195) cond -> . cond AND
    (196) cond -> . cond AMPERSANT AMPERSANT
    (197) cond -> . AND
    (198) cond -> . OR
    (199) cond -> . AMPERSANT AMPERSANT

    COMMA           shift and go to state 177
    AND             shift and go to state 273
    OR              shift and go to state 277
    AMPERSANT       shift and go to state 274

    cond                           shift and go to state 275
    assign_cond                    shift and go to state 303

state 239

    (51) search_condition -> LPAREN . search_condition RPAREN
    (188) assignment -> LPAREN . assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (127) scalar_exp -> LPAREN . scalar_exp RPAREN
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (200) column -> . ID

    NOT             shift and go to state 124
    LPAREN          shift and go to state 304
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 305
    AMMSC           shift and go to state 64
    EXISTS          shift and go to state 116

    predicate                      shift and go to state 115
    assignment_commalist           shift and go to state 179
    all_cr_any_predicate           shift and go to state 111
    in_predicate                   shift and go to state 119
    column                         shift and go to state 103
    assignment                     shift and go to state 104
    column_ref                     shift and go to state 185
    test_for_null                  shift and go to state 121
    scalar_exp                     shift and go to state 186
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    between_predicate              shift and go to state 108
    search_condition               shift and go to state 184
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56

state 240

    (200) column -> ID .
    (128) column_ref -> ID .
    (129) column_ref -> ID . DOT ID
    (130) column_ref -> ID . DOT ID DOT ID

  ! reduce/reduce conflict for EQUAL resolved using rule 128 (column_ref -> ID .)
    LESS            reduce using rule 200 (column -> ID .)
    GREATER         reduce using rule 200 (column -> ID .)
    IS              reduce using rule 128 (column_ref -> ID .)
    COMPARISON      reduce using rule 128 (column_ref -> ID .)
    NOT             reduce using rule 128 (column_ref -> ID .)
    BETWEEN         reduce using rule 128 (column_ref -> ID .)
    LIKE            reduce using rule 128 (column_ref -> ID .)
    IN              reduce using rule 128 (column_ref -> ID .)
    PLUS            reduce using rule 128 (column_ref -> ID .)
    MINUS           reduce using rule 128 (column_ref -> ID .)
    EQUAL           reduce using rule 128 (column_ref -> ID .)
    TIMES           reduce using rule 128 (column_ref -> ID .)
    DIVIDE          reduce using rule 128 (column_ref -> ID .)
    DOT             shift and go to state 90

  ! EQUAL           [ reduce using rule 200 (column -> ID .) ]


state 241

    (188) assignment -> LPAREN assignment_commalist AMPERSANT . AMPERSANT assignment_commalist RPAREN

    AMPERSANT       shift and go to state 306


state 242

    (49) search_condition -> search_condition AND search_condition .
    (48) search_condition -> search_condition . OR search_condition
    (49) search_condition -> search_condition . AND search_condition

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RPAREN          reduce using rule 49 (search_condition -> search_condition AND search_condition .)
    SEMICOLON       reduce using rule 49 (search_condition -> search_condition AND search_condition .)
    WITH            reduce using rule 49 (search_condition -> search_condition AND search_condition .)
    CREATE          reduce using rule 49 (search_condition -> search_condition AND search_condition .)
    GRANT           reduce using rule 49 (search_condition -> search_condition AND search_condition .)
    OR              shift and go to state 181
    AND             shift and go to state 180

  ! OR              [ reduce using rule 49 (search_condition -> search_condition AND search_condition .) ]
  ! AND             [ reduce using rule 49 (search_condition -> search_condition AND search_condition .) ]


state 243

    (48) search_condition -> search_condition OR search_condition .
    (48) search_condition -> search_condition . OR search_condition
    (49) search_condition -> search_condition . AND search_condition

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    RPAREN          reduce using rule 48 (search_condition -> search_condition OR search_condition .)
    SEMICOLON       reduce using rule 48 (search_condition -> search_condition OR search_condition .)
    WITH            reduce using rule 48 (search_condition -> search_condition OR search_condition .)
    CREATE          reduce using rule 48 (search_condition -> search_condition OR search_condition .)
    GRANT           reduce using rule 48 (search_condition -> search_condition OR search_condition .)
    OR              shift and go to state 181
    AND             shift and go to state 180

  ! OR              [ reduce using rule 48 (search_condition -> search_condition OR search_condition .) ]
  ! AND             [ reduce using rule 48 (search_condition -> search_condition OR search_condition .) ]


state 244

    (62) subquery -> LPAREN SELECT . opt_all_distinct selection table_exp RPAREN
    (96) opt_all_distinct -> . empty
    (97) opt_all_distinct -> . ALL
    (98) opt_all_distinct -> . DISTINCT
    (203) empty -> .

    ALL             shift and go to state 31
    DISTINCT        shift and go to state 34
    TIMES           reduce using rule 203 (empty -> .)
    LPAREN          reduce using rule 203 (empty -> .)
    QUOTE           reduce using rule 203 (empty -> .)
    NUMBER          reduce using rule 203 (empty -> .)
    ID              reduce using rule 203 (empty -> .)
    AMMSC           reduce using rule 203 (empty -> .)

    opt_all_distinct               shift and go to state 307
    empty                          shift and go to state 35

state 245

    (51) search_condition -> LPAREN search_condition RPAREN .

    RPAREN          reduce using rule 51 (search_condition -> LPAREN search_condition RPAREN .)
    OR              reduce using rule 51 (search_condition -> LPAREN search_condition RPAREN .)
    AND             reduce using rule 51 (search_condition -> LPAREN search_condition RPAREN .)
    SEMICOLON       reduce using rule 51 (search_condition -> LPAREN search_condition RPAREN .)
    WITH            reduce using rule 51 (search_condition -> LPAREN search_condition RPAREN .)
    CREATE          reduce using rule 51 (search_condition -> LPAREN search_condition RPAREN .)
    GRANT           reduce using rule 51 (search_condition -> LPAREN search_condition RPAREN .)


state 246

    (67) test_for_null -> column_ref IS NOT . NULL

    NULL            shift and go to state 308


state 247

    (68) test_for_null -> column_ref IS NULL .

    RPAREN          reduce using rule 68 (test_for_null -> column_ref IS NULL .)
    OR              reduce using rule 68 (test_for_null -> column_ref IS NULL .)
    AND             reduce using rule 68 (test_for_null -> column_ref IS NULL .)
    SEMICOLON       reduce using rule 68 (test_for_null -> column_ref IS NULL .)
    WITH            reduce using rule 68 (test_for_null -> column_ref IS NULL .)
    CREATE          reduce using rule 68 (test_for_null -> column_ref IS NULL .)
    GRANT           reduce using rule 68 (test_for_null -> column_ref IS NULL .)


state 248

    (78) any_all_some -> SOME .

    LPAREN          reduce using rule 78 (any_all_some -> SOME .)


state 249

    (75) all_cr_any_predicate -> scalar_exp COMPARISON any_all_some . subquery
    (62) subquery -> . LPAREN SELECT opt_all_distinct selection table_exp RPAREN

    LPAREN          shift and go to state 183

    subquery                       shift and go to state 309

state 250

    (127) scalar_exp -> LPAREN . scalar_exp RPAREN
    (62) subquery -> LPAREN . SELECT opt_all_distinct selection table_exp RPAREN
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    SELECT          shift and go to state 244
    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    scalar_exp                     shift and go to state 89
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56

state 251

    (77) any_all_some -> ALL .

    LPAREN          reduce using rule 77 (any_all_some -> ALL .)


state 252

    (60) comparison_predicate -> scalar_exp COMPARISON scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 60 (comparison_predicate -> scalar_exp COMPARISON scalar_exp .)
    AND             reduce using rule 60 (comparison_predicate -> scalar_exp COMPARISON scalar_exp .)
    SEMICOLON       reduce using rule 60 (comparison_predicate -> scalar_exp COMPARISON scalar_exp .)
    RPAREN          reduce using rule 60 (comparison_predicate -> scalar_exp COMPARISON scalar_exp .)
    WITH            reduce using rule 60 (comparison_predicate -> scalar_exp COMPARISON scalar_exp .)
    CREATE          reduce using rule 60 (comparison_predicate -> scalar_exp COMPARISON scalar_exp .)
    GRANT           reduce using rule 60 (comparison_predicate -> scalar_exp COMPARISON scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 253

    (61) comparison_predicate -> scalar_exp COMPARISON subquery .

    OR              reduce using rule 61 (comparison_predicate -> scalar_exp COMPARISON subquery .)
    AND             reduce using rule 61 (comparison_predicate -> scalar_exp COMPARISON subquery .)
    SEMICOLON       reduce using rule 61 (comparison_predicate -> scalar_exp COMPARISON subquery .)
    RPAREN          reduce using rule 61 (comparison_predicate -> scalar_exp COMPARISON subquery .)
    WITH            reduce using rule 61 (comparison_predicate -> scalar_exp COMPARISON subquery .)
    CREATE          reduce using rule 61 (comparison_predicate -> scalar_exp COMPARISON subquery .)
    GRANT           reduce using rule 61 (comparison_predicate -> scalar_exp COMPARISON subquery .)


state 254

    (76) any_all_some -> ANY .

    LPAREN          reduce using rule 76 (any_all_some -> ANY .)


state 255

    (66) like_predicate -> scalar_exp LIKE atom . empty
    (203) empty -> .

    OR              reduce using rule 203 (empty -> .)
    AND             reduce using rule 203 (empty -> .)
    SEMICOLON       reduce using rule 203 (empty -> .)
    RPAREN          reduce using rule 203 (empty -> .)
    WITH            reduce using rule 203 (empty -> .)
    CREATE          reduce using rule 203 (empty -> .)
    GRANT           reduce using rule 203 (empty -> .)

    empty                          shift and go to state 310

state 256

    (70) in_predicate -> scalar_exp IN LPAREN . subquery RPAREN
    (72) in_predicate -> scalar_exp IN LPAREN . atom_commalist RPAREN
    (62) subquery -> . LPAREN SELECT opt_all_distinct selection table_exp RPAREN
    (73) atom_commalist -> . atom
    (74) atom_commalist -> . atom_commalist COMMA atom
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE

    LPAREN          shift and go to state 183
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55

    atom_commalist                 shift and go to state 311
    subquery                       shift and go to state 313
    atom                           shift and go to state 312

state 257

    (64) between_predicate -> scalar_exp BETWEEN scalar_exp . AND scalar_exp
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    AND             shift and go to state 314
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 258

    (65) like_predicate -> scalar_exp NOT LIKE . atom empty
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE

    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55

    atom                           shift and go to state 315

state 259

    (69) in_predicate -> scalar_exp NOT IN . LPAREN subquery RPAREN
    (71) in_predicate -> scalar_exp NOT IN . LPAREN atom_commalist RPAREN

    LPAREN          shift and go to state 316


state 260

    (63) between_predicate -> scalar_exp NOT BETWEEN . scalar_exp AND scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 317
    atom                           shift and go to state 59

state 261

    (135) privilege_def -> GRANT privileges ON table TO grantee_commalist opt_with_grant_option .

    CREATE          reduce using rule 135 (privilege_def -> GRANT privileges ON table TO grantee_commalist opt_with_grant_option .)
    GRANT           reduce using rule 135 (privilege_def -> GRANT privileges ON table TO grantee_commalist opt_with_grant_option .)
    SEMICOLON       reduce using rule 135 (privilege_def -> GRANT privileges ON table TO grantee_commalist opt_with_grant_option .)


state 262

    (149) grantee_commalist -> grantee_commalist COMMA . grantee
    (150) grantee -> . PUBLIC
    (151) grantee -> . user
    (8) user -> . ID

    PUBLIC          shift and go to state 198
    ID              shift and go to state 102

    grantee                        shift and go to state 318
    user                           shift and go to state 199

state 263

    (137) opt_with_grant_option -> WITH . GRANT OPTION

    GRANT           shift and go to state 319


state 264

    (136) opt_with_grant_option -> empty .

    SEMICOLON       reduce using rule 136 (opt_with_grant_option -> empty .)
    CREATE          reduce using rule 136 (opt_with_grant_option -> empty .)
    GRANT           reduce using rule 136 (opt_with_grant_option -> empty .)


state 265

    (116) opt_group_by_clause -> GROUP BY . column_ref_commalist
    (117) column_ref_commalist -> . column_ref
    (118) column_ref_commalist -> . column_ref_commalist COMMA column_ref
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID

    ID              shift and go to state 61

    column_ref                     shift and go to state 320
    column_ref_commalist           shift and go to state 321

state 266

    (183) target_commalist -> target_commalist COMMA target .

    COMMA           reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    FROM            reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    GROUP           reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    NOT             reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    LPAREN          reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    EXISTS          reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    ID              reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    QUOTE           reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    NUMBER          reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    AMMSC           reduce using rule 183 (target_commalist -> target_commalist COMMA target .)
    SEMICOLON       reduce using rule 183 (target_commalist -> target_commalist COMMA target .)


state 267

    (106) from_clause -> FROM table_ref_commalist .
    (108) table_ref_commalist -> table_ref_commalist . COMMA table_ref

    SEMICOLON       reduce using rule 106 (from_clause -> FROM table_ref_commalist .)
    WITH            reduce using rule 106 (from_clause -> FROM table_ref_commalist .)
    CREATE          reduce using rule 106 (from_clause -> FROM table_ref_commalist .)
    GRANT           reduce using rule 106 (from_clause -> FROM table_ref_commalist .)
    RPAREN          reduce using rule 106 (from_clause -> FROM table_ref_commalist .)
    COMMA           shift and go to state 322


state 268

    (109) table_ref -> table .
    (110) table_ref -> table . range_variable
    (111) range_variable -> . ID

    COMMA           reduce using rule 109 (table_ref -> table .)
    SEMICOLON       reduce using rule 109 (table_ref -> table .)
    WITH            reduce using rule 109 (table_ref -> table .)
    CREATE          reduce using rule 109 (table_ref -> table .)
    GRANT           reduce using rule 109 (table_ref -> table .)
    RPAREN          reduce using rule 109 (table_ref -> table .)
    ID              shift and go to state 324

    range_variable                 shift and go to state 323

state 269

    (107) table_ref_commalist -> table_ref .

    COMMA           reduce using rule 107 (table_ref_commalist -> table_ref .)
    SEMICOLON       reduce using rule 107 (table_ref_commalist -> table_ref .)
    WITH            reduce using rule 107 (table_ref_commalist -> table_ref .)
    CREATE          reduce using rule 107 (table_ref_commalist -> table_ref .)
    GRANT           reduce using rule 107 (table_ref_commalist -> table_ref .)
    RPAREN          reduce using rule 107 (table_ref_commalist -> table_ref .)


state 270

    (130) column_ref -> ID DOT ID DOT ID .

    PLUS            reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    MINUS           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    EQUAL           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    TIMES           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    DIVIDE          reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    COMMA           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    INTO            reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    RPAREN          reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    COMPARISON      reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    NOT             reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    BETWEEN         reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    LIKE            reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    IN              reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    FROM            reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    GROUP           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    LPAREN          reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    EXISTS          reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    ID              reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    QUOTE           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    NUMBER          reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    AMMSC           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    SEMICOLON       reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    WITH            reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    CREATE          reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    GRANT           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    WHERE           reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    AMPERSANT       reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    AND             reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    OR              reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)
    IS              reduce using rule 130 (column_ref -> ID DOT ID DOT ID .)


state 271

    (133) function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .

    COMPARISON      reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    NOT             reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    BETWEEN         reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    LIKE            reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    IN              reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    PLUS            reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    MINUS           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    EQUAL           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    TIMES           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    DIVIDE          reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    COMMA           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    INTO            reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    RPAREN          reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    FROM            reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    GROUP           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    LPAREN          reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    EXISTS          reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    ID              reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    QUOTE           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    NUMBER          reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    AMMSC           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    SEMICOLON       reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    WITH            reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    CREATE          reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    GRANT           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    WHERE           reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    AMPERSANT       reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    AND             reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)
    OR              reduce using rule 133 (function_ref -> AMMSC LPAREN ALL scalar_exp RPAREN .)


state 272

    (132) function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .

    COMPARISON      reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    NOT             reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    BETWEEN         reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    LIKE            reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    IN              reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    PLUS            reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    MINUS           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    EQUAL           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    TIMES           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    DIVIDE          reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    COMMA           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    INTO            reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    RPAREN          reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    FROM            reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    GROUP           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    LPAREN          reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    EXISTS          reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    ID              reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    QUOTE           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    NUMBER          reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    AMMSC           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    SEMICOLON       reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    WITH            reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    CREATE          reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    GRANT           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    WHERE           reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    AMPERSANT       reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    AND             reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)
    OR              reduce using rule 132 (function_ref -> AMMSC LPAREN DISTINCT column_ref RPAREN .)


state 273

    (197) cond -> AND .

    OR              reduce using rule 197 (cond -> AND .)
    AND             reduce using rule 197 (cond -> AND .)
    AMPERSANT       reduce using rule 197 (cond -> AND .)
    LPAREN          reduce using rule 197 (cond -> AND .)
    ID              reduce using rule 197 (cond -> AND .)


state 274

    (199) cond -> AMPERSANT . AMPERSANT

    AMPERSANT       shift and go to state 325


state 275

    (193) assign_cond -> cond . assignment_commalist
    (194) cond -> cond . OR
    (195) cond -> cond . AND
    (196) cond -> cond . AMPERSANT AMPERSANT
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (200) column -> . ID

    OR              shift and go to state 329
    AND             shift and go to state 326
    AMPERSANT       shift and go to state 328
    LPAREN          shift and go to state 106
    ID              shift and go to state 78

    column                         shift and go to state 103
    assignment                     shift and go to state 104
    assignment_commalist           shift and go to state 327

state 276

    (179) select_statement -> SELECT TIMES FROM table WHERE assignment_commalist assign_cond .
    (192) assign_cond -> assign_cond . cond assignment_commalist
    (194) cond -> . cond OR
    (195) cond -> . cond AND
    (196) cond -> . cond AMPERSANT AMPERSANT
    (197) cond -> . AND
    (198) cond -> . OR
    (199) cond -> . AMPERSANT AMPERSANT

    SEMICOLON       reduce using rule 179 (select_statement -> SELECT TIMES FROM table WHERE assignment_commalist assign_cond .)
    AND             shift and go to state 273
    OR              shift and go to state 277
    AMPERSANT       shift and go to state 274

    cond                           shift and go to state 330

state 277

    (198) cond -> OR .

    OR              reduce using rule 198 (cond -> OR .)
    AND             reduce using rule 198 (cond -> OR .)
    AMPERSANT       reduce using rule 198 (cond -> OR .)
    LPAREN          reduce using rule 198 (cond -> OR .)
    ID              reduce using rule 198 (cond -> OR .)


state 278

    (172) values_or_query_spec -> VALUES LPAREN insert_atom_commalist . RPAREN
    (175) insert_atom_commalist -> insert_atom_commalist . COMMA insert_atom

    RPAREN          shift and go to state 331
    COMMA           shift and go to state 332


state 279

    (176) insert_atom -> atom .

    RPAREN          reduce using rule 176 (insert_atom -> atom .)
    COMMA           reduce using rule 176 (insert_atom -> atom .)


state 280

    (174) insert_atom_commalist -> insert_atom .

    RPAREN          reduce using rule 174 (insert_atom_commalist -> insert_atom .)
    COMMA           reduce using rule 174 (insert_atom_commalist -> insert_atom .)


state 281

    (177) insert_atom -> NULL .

    RPAREN          reduce using rule 177 (insert_atom -> NULL .)
    COMMA           reduce using rule 177 (insert_atom -> NULL .)


state 282

    (93) query_spec -> SELECT opt_all_distinct FROM . selection table_exp
    (99) selection -> . scalar_exp_commalist
    (100) selection -> . TIMES
    (101) scalar_exp_commalist -> . scalar_exp
    (102) scalar_exp_commalist -> . scalar_exp_commalist COMMA scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    TIMES           shift and go to state 60
    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    selection                      shift and go to state 333
    scalar_exp_commalist           shift and go to state 54
    scalar_exp                     shift and go to state 63
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56
    column_ref                     shift and go to state 62

state 283

    (18) base_table_element_commalist -> base_table_element_commalist COMMA base_table_element .

    RPAREN          reduce using rule 18 (base_table_element_commalist -> base_table_element_commalist COMMA base_table_element .)
    COMMA           reduce using rule 18 (base_table_element_commalist -> base_table_element_commalist COMMA base_table_element .)


state 284

    (87) table_constraint_def -> FOREIGN KEY LPAREN . column_commalist RPAREN REFERENCES table
    (88) table_constraint_def -> FOREIGN KEY LPAREN . column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN
    (80) column_commalist -> . empty
    (81) column_commalist -> . column
    (82) column_commalist -> . column_commalist COMMA column
    (83) column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .
    (200) column -> . ID

    LPAREN          shift and go to state 77
    RPAREN          reduce using rule 203 (empty -> .)
    COMMA           reduce using rule 203 (empty -> .)
    ID              shift and go to state 78

    column                         shift and go to state 75
    empty                          shift and go to state 79
    column_commalist               shift and go to state 334

state 285

    (84) constraint_def -> CONSTRAINT ID table_constraint_def .

    RPAREN          reduce using rule 84 (constraint_def -> CONSTRAINT ID table_constraint_def .)
    COMMA           reduce using rule 84 (constraint_def -> CONSTRAINT ID table_constraint_def .)


state 286

    (89) table_constraint_def -> CHECK LPAREN search_condition . RPAREN
    (48) search_condition -> search_condition . OR search_condition
    (49) search_condition -> search_condition . AND search_condition

    RPAREN          shift and go to state 335
    OR              shift and go to state 181
    AND             shift and go to state 180


state 287

    (85) table_constraint_def -> UNIQUE LPAREN column_commalist . RPAREN
    (82) column_commalist -> column_commalist . COMMA column

    RPAREN          shift and go to state 336
    COMMA           shift and go to state 125


state 288

    (43) column_def_opt -> DEFAULT . NULL
    (44) column_def_opt -> DEFAULT . USER

    NULL            shift and go to state 337
    USER            shift and go to state 338


state 289

    (22) column_def -> column data_type column_def_opt_list .
    (36) column_def_opt_list -> column_def_opt_list . column_def_opt
    (38) column_def_opt -> . empty
    (39) column_def_opt -> . NOT NULL
    (40) column_def_opt -> . NULL
    (41) column_def_opt -> . NOT NULL UNIQUE
    (42) column_def_opt -> . NOT NULL PRIMARY KEY
    (43) column_def_opt -> . DEFAULT NULL
    (44) column_def_opt -> . DEFAULT USER
    (45) column_def_opt -> . CHECK LPAREN search_condition RPAREN
    (46) column_def_opt -> . REFERENCES table
    (47) column_def_opt -> . REFERENCES table LPAREN column_commalist RPAREN
    (203) empty -> .

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for DEFAULT resolved as shift
  ! shift/reduce conflict for CHECK resolved as shift
  ! shift/reduce conflict for REFERENCES resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 22 (column_def -> column data_type column_def_opt_list .)
  ! reduce/reduce conflict for COMMA resolved using rule 22 (column_def -> column data_type column_def_opt_list .)
    RPAREN          reduce using rule 22 (column_def -> column data_type column_def_opt_list .)
    COMMA           reduce using rule 22 (column_def -> column data_type column_def_opt_list .)
    NOT             shift and go to state 292
    NULL            shift and go to state 293
    DEFAULT         shift and go to state 288
    CHECK           shift and go to state 294
    REFERENCES      shift and go to state 290

  ! NOT             [ reduce using rule 203 (empty -> .) ]
  ! NULL            [ reduce using rule 203 (empty -> .) ]
  ! DEFAULT         [ reduce using rule 203 (empty -> .) ]
  ! CHECK           [ reduce using rule 203 (empty -> .) ]
  ! REFERENCES      [ reduce using rule 203 (empty -> .) ]
  ! RPAREN          [ reduce using rule 203 (empty -> .) ]
  ! COMMA           [ reduce using rule 203 (empty -> .) ]

    column_def_opt                 shift and go to state 339
    empty                          shift and go to state 295

state 290

    (46) column_def_opt -> REFERENCES . table
    (47) column_def_opt -> REFERENCES . table LPAREN column_commalist RPAREN
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 340

state 291

    (37) column_def_opt_list -> column_def_opt .

    NOT             reduce using rule 37 (column_def_opt_list -> column_def_opt .)
    NULL            reduce using rule 37 (column_def_opt_list -> column_def_opt .)
    DEFAULT         reduce using rule 37 (column_def_opt_list -> column_def_opt .)
    CHECK           reduce using rule 37 (column_def_opt_list -> column_def_opt .)
    REFERENCES      reduce using rule 37 (column_def_opt_list -> column_def_opt .)
    RPAREN          reduce using rule 37 (column_def_opt_list -> column_def_opt .)
    COMMA           reduce using rule 37 (column_def_opt_list -> column_def_opt .)


state 292

    (39) column_def_opt -> NOT . NULL
    (41) column_def_opt -> NOT . NULL UNIQUE
    (42) column_def_opt -> NOT . NULL PRIMARY KEY

    NULL            shift and go to state 341


state 293

    (40) column_def_opt -> NULL .

    NOT             reduce using rule 40 (column_def_opt -> NULL .)
    NULL            reduce using rule 40 (column_def_opt -> NULL .)
    DEFAULT         reduce using rule 40 (column_def_opt -> NULL .)
    CHECK           reduce using rule 40 (column_def_opt -> NULL .)
    REFERENCES      reduce using rule 40 (column_def_opt -> NULL .)
    RPAREN          reduce using rule 40 (column_def_opt -> NULL .)
    COMMA           reduce using rule 40 (column_def_opt -> NULL .)


state 294

    (45) column_def_opt -> CHECK . LPAREN search_condition RPAREN

    LPAREN          shift and go to state 342


state 295

    (38) column_def_opt -> empty .

    NOT             reduce using rule 38 (column_def_opt -> empty .)
    NULL            reduce using rule 38 (column_def_opt -> empty .)
    DEFAULT         reduce using rule 38 (column_def_opt -> empty .)
    CHECK           reduce using rule 38 (column_def_opt -> empty .)
    REFERENCES      reduce using rule 38 (column_def_opt -> empty .)
    RPAREN          reduce using rule 38 (column_def_opt -> empty .)
    COMMA           reduce using rule 38 (column_def_opt -> empty .)


state 296

    (25) data_type -> CHAR LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 343


state 297

    (27) data_type -> VARCHAR LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 344


state 298

    (24) data_type -> INT IDENTITY . identity
    (35) identity -> . LPAREN literal COMMA literal RPAREN

    LPAREN          shift and go to state 345

    identity                       shift and go to state 346

state 299

    (86) table_constraint_def -> PRIMARY KEY LPAREN . column_commalist RPAREN
    (80) column_commalist -> . empty
    (81) column_commalist -> . column
    (82) column_commalist -> . column_commalist COMMA column
    (83) column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .
    (200) column -> . ID

    LPAREN          shift and go to state 77
    RPAREN          reduce using rule 203 (empty -> .)
    COMMA           reduce using rule 203 (empty -> .)
    ID              shift and go to state 78

    column                         shift and go to state 75
    empty                          shift and go to state 79
    column_commalist               shift and go to state 347

state 300

    (95) opt_with_check_option -> WITH . CHECK OPTION

    CHECK           shift and go to state 348


state 301

    (90) view_def -> CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option .

    CREATE          reduce using rule 90 (view_def -> CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option .)
    GRANT           reduce using rule 90 (view_def -> CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option .)
    SEMICOLON       reduce using rule 90 (view_def -> CREATE VIEW table opt_column_commalist AS query_spec opt_with_check_option .)


state 302

    (94) opt_with_check_option -> empty .

    SEMICOLON       reduce using rule 94 (opt_with_check_option -> empty .)
    CREATE          reduce using rule 94 (opt_with_check_option -> empty .)
    GRANT           reduce using rule 94 (opt_with_check_option -> empty .)


state 303

    (167) update_statement -> UPDATE table SET assignment_commalist WHERE assignment_commalist assign_cond .
    (192) assign_cond -> assign_cond . cond assignment_commalist
    (194) cond -> . cond OR
    (195) cond -> . cond AND
    (196) cond -> . cond AMPERSANT AMPERSANT
    (197) cond -> . AND
    (198) cond -> . OR
    (199) cond -> . AMPERSANT AMPERSANT

    SEMICOLON       reduce using rule 167 (update_statement -> UPDATE table SET assignment_commalist WHERE assignment_commalist assign_cond .)
    AND             shift and go to state 273
    OR              shift and go to state 277
    AMPERSANT       shift and go to state 274

    cond                           shift and go to state 330

state 304

    (51) search_condition -> LPAREN . search_condition RPAREN
    (127) scalar_exp -> LPAREN . scalar_exp RPAREN
    (188) assignment -> LPAREN . assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (200) column -> . ID

    NOT             shift and go to state 124
    LPAREN          shift and go to state 304
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 305
    AMMSC           shift and go to state 64
    EXISTS          shift and go to state 116

    predicate                      shift and go to state 115
    assignment_commalist           shift and go to state 179
    all_cr_any_predicate           shift and go to state 111
    in_predicate                   shift and go to state 119
    column                         shift and go to state 103
    assignment                     shift and go to state 104
    column_ref                     shift and go to state 185
    test_for_null                  shift and go to state 121
    scalar_exp                     shift and go to state 186
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    between_predicate              shift and go to state 108
    search_condition               shift and go to state 184
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56

state 305

    (128) column_ref -> ID .
    (129) column_ref -> ID . DOT ID
    (130) column_ref -> ID . DOT ID DOT ID
    (200) column -> ID .

  ! reduce/reduce conflict for EQUAL resolved using rule 128 (column_ref -> ID .)
    IS              reduce using rule 128 (column_ref -> ID .)
    RPAREN          reduce using rule 128 (column_ref -> ID .)
    PLUS            reduce using rule 128 (column_ref -> ID .)
    MINUS           reduce using rule 128 (column_ref -> ID .)
    EQUAL           reduce using rule 128 (column_ref -> ID .)
    TIMES           reduce using rule 128 (column_ref -> ID .)
    DIVIDE          reduce using rule 128 (column_ref -> ID .)
    COMPARISON      reduce using rule 128 (column_ref -> ID .)
    NOT             reduce using rule 128 (column_ref -> ID .)
    BETWEEN         reduce using rule 128 (column_ref -> ID .)
    LIKE            reduce using rule 128 (column_ref -> ID .)
    IN              reduce using rule 128 (column_ref -> ID .)
    DOT             shift and go to state 90
    LESS            reduce using rule 200 (column -> ID .)
    GREATER         reduce using rule 200 (column -> ID .)

  ! EQUAL           [ reduce using rule 200 (column -> ID .) ]


state 306

    (188) assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT . assignment_commalist RPAREN
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (200) column -> . ID

    LPAREN          shift and go to state 106
    ID              shift and go to state 78

    column                         shift and go to state 103
    assignment                     shift and go to state 104
    assignment_commalist           shift and go to state 349

state 307

    (62) subquery -> LPAREN SELECT opt_all_distinct . selection table_exp RPAREN
    (99) selection -> . scalar_exp_commalist
    (100) selection -> . TIMES
    (101) scalar_exp_commalist -> . scalar_exp
    (102) scalar_exp_commalist -> . scalar_exp_commalist COMMA scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    TIMES           shift and go to state 60
    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    selection                      shift and go to state 350
    scalar_exp_commalist           shift and go to state 54
    scalar_exp                     shift and go to state 63
    atom                           shift and go to state 59
    function_ref                   shift and go to state 56
    column_ref                     shift and go to state 62

state 308

    (67) test_for_null -> column_ref IS NOT NULL .

    RPAREN          reduce using rule 67 (test_for_null -> column_ref IS NOT NULL .)
    OR              reduce using rule 67 (test_for_null -> column_ref IS NOT NULL .)
    AND             reduce using rule 67 (test_for_null -> column_ref IS NOT NULL .)
    SEMICOLON       reduce using rule 67 (test_for_null -> column_ref IS NOT NULL .)
    WITH            reduce using rule 67 (test_for_null -> column_ref IS NOT NULL .)
    CREATE          reduce using rule 67 (test_for_null -> column_ref IS NOT NULL .)
    GRANT           reduce using rule 67 (test_for_null -> column_ref IS NOT NULL .)


state 309

    (75) all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery .

    OR              reduce using rule 75 (all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery .)
    AND             reduce using rule 75 (all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery .)
    SEMICOLON       reduce using rule 75 (all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery .)
    RPAREN          reduce using rule 75 (all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery .)
    WITH            reduce using rule 75 (all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery .)
    CREATE          reduce using rule 75 (all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery .)
    GRANT           reduce using rule 75 (all_cr_any_predicate -> scalar_exp COMPARISON any_all_some subquery .)


state 310

    (66) like_predicate -> scalar_exp LIKE atom empty .

    OR              reduce using rule 66 (like_predicate -> scalar_exp LIKE atom empty .)
    AND             reduce using rule 66 (like_predicate -> scalar_exp LIKE atom empty .)
    SEMICOLON       reduce using rule 66 (like_predicate -> scalar_exp LIKE atom empty .)
    WITH            reduce using rule 66 (like_predicate -> scalar_exp LIKE atom empty .)
    CREATE          reduce using rule 66 (like_predicate -> scalar_exp LIKE atom empty .)
    GRANT           reduce using rule 66 (like_predicate -> scalar_exp LIKE atom empty .)
    RPAREN          reduce using rule 66 (like_predicate -> scalar_exp LIKE atom empty .)


state 311

    (72) in_predicate -> scalar_exp IN LPAREN atom_commalist . RPAREN
    (74) atom_commalist -> atom_commalist . COMMA atom

    RPAREN          shift and go to state 351
    COMMA           shift and go to state 352


state 312

    (73) atom_commalist -> atom .

    RPAREN          reduce using rule 73 (atom_commalist -> atom .)
    COMMA           reduce using rule 73 (atom_commalist -> atom .)


state 313

    (70) in_predicate -> scalar_exp IN LPAREN subquery . RPAREN

    RPAREN          shift and go to state 353


state 314

    (64) between_predicate -> scalar_exp BETWEEN scalar_exp AND . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 354
    atom                           shift and go to state 59

state 315

    (65) like_predicate -> scalar_exp NOT LIKE atom . empty
    (203) empty -> .

    OR              reduce using rule 203 (empty -> .)
    AND             reduce using rule 203 (empty -> .)
    SEMICOLON       reduce using rule 203 (empty -> .)
    RPAREN          reduce using rule 203 (empty -> .)
    WITH            reduce using rule 203 (empty -> .)
    CREATE          reduce using rule 203 (empty -> .)
    GRANT           reduce using rule 203 (empty -> .)

    empty                          shift and go to state 355

state 316

    (69) in_predicate -> scalar_exp NOT IN LPAREN . subquery RPAREN
    (71) in_predicate -> scalar_exp NOT IN LPAREN . atom_commalist RPAREN
    (62) subquery -> . LPAREN SELECT opt_all_distinct selection table_exp RPAREN
    (73) atom_commalist -> . atom
    (74) atom_commalist -> . atom_commalist COMMA atom
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE

    LPAREN          shift and go to state 183
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55

    atom_commalist                 shift and go to state 356
    subquery                       shift and go to state 357
    atom                           shift and go to state 312

state 317

    (63) between_predicate -> scalar_exp NOT BETWEEN scalar_exp . AND scalar_exp
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    AND             shift and go to state 358
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 318

    (149) grantee_commalist -> grantee_commalist COMMA grantee .

    COMMA           reduce using rule 149 (grantee_commalist -> grantee_commalist COMMA grantee .)
    WITH            reduce using rule 149 (grantee_commalist -> grantee_commalist COMMA grantee .)
    SEMICOLON       reduce using rule 149 (grantee_commalist -> grantee_commalist COMMA grantee .)
    CREATE          reduce using rule 149 (grantee_commalist -> grantee_commalist COMMA grantee .)
    GRANT           reduce using rule 149 (grantee_commalist -> grantee_commalist COMMA grantee .)


state 319

    (137) opt_with_grant_option -> WITH GRANT . OPTION

    OPTION          shift and go to state 359


state 320

    (117) column_ref_commalist -> column_ref .

    COMMA           reduce using rule 117 (column_ref_commalist -> column_ref .)
    SEMICOLON       reduce using rule 117 (column_ref_commalist -> column_ref .)
    WITH            reduce using rule 117 (column_ref_commalist -> column_ref .)
    CREATE          reduce using rule 117 (column_ref_commalist -> column_ref .)
    GRANT           reduce using rule 117 (column_ref_commalist -> column_ref .)
    RPAREN          reduce using rule 117 (column_ref_commalist -> column_ref .)


state 321

    (116) opt_group_by_clause -> GROUP BY column_ref_commalist .
    (118) column_ref_commalist -> column_ref_commalist . COMMA column_ref

    RPAREN          reduce using rule 116 (opt_group_by_clause -> GROUP BY column_ref_commalist .)
    SEMICOLON       reduce using rule 116 (opt_group_by_clause -> GROUP BY column_ref_commalist .)
    WITH            reduce using rule 116 (opt_group_by_clause -> GROUP BY column_ref_commalist .)
    CREATE          reduce using rule 116 (opt_group_by_clause -> GROUP BY column_ref_commalist .)
    GRANT           reduce using rule 116 (opt_group_by_clause -> GROUP BY column_ref_commalist .)
    COMMA           shift and go to state 360


state 322

    (108) table_ref_commalist -> table_ref_commalist COMMA . table_ref
    (109) table_ref -> . table
    (110) table_ref -> . table range_variable
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table_ref                      shift and go to state 361
    table                          shift and go to state 268

state 323

    (110) table_ref -> table range_variable .

    COMMA           reduce using rule 110 (table_ref -> table range_variable .)
    SEMICOLON       reduce using rule 110 (table_ref -> table range_variable .)
    WITH            reduce using rule 110 (table_ref -> table range_variable .)
    CREATE          reduce using rule 110 (table_ref -> table range_variable .)
    GRANT           reduce using rule 110 (table_ref -> table range_variable .)
    RPAREN          reduce using rule 110 (table_ref -> table range_variable .)


state 324

    (111) range_variable -> ID .

    COMMA           reduce using rule 111 (range_variable -> ID .)
    SEMICOLON       reduce using rule 111 (range_variable -> ID .)
    WITH            reduce using rule 111 (range_variable -> ID .)
    CREATE          reduce using rule 111 (range_variable -> ID .)
    GRANT           reduce using rule 111 (range_variable -> ID .)
    RPAREN          reduce using rule 111 (range_variable -> ID .)


state 325

    (199) cond -> AMPERSANT AMPERSANT .

    OR              reduce using rule 199 (cond -> AMPERSANT AMPERSANT .)
    AND             reduce using rule 199 (cond -> AMPERSANT AMPERSANT .)
    AMPERSANT       reduce using rule 199 (cond -> AMPERSANT AMPERSANT .)
    LPAREN          reduce using rule 199 (cond -> AMPERSANT AMPERSANT .)
    ID              reduce using rule 199 (cond -> AMPERSANT AMPERSANT .)


state 326

    (195) cond -> cond AND .

    OR              reduce using rule 195 (cond -> cond AND .)
    AND             reduce using rule 195 (cond -> cond AND .)
    AMPERSANT       reduce using rule 195 (cond -> cond AND .)
    LPAREN          reduce using rule 195 (cond -> cond AND .)
    ID              reduce using rule 195 (cond -> cond AND .)


state 327

    (193) assign_cond -> cond assignment_commalist .
    (186) assignment_commalist -> assignment_commalist . COMMA assignment

    AND             reduce using rule 193 (assign_cond -> cond assignment_commalist .)
    OR              reduce using rule 193 (assign_cond -> cond assignment_commalist .)
    AMPERSANT       reduce using rule 193 (assign_cond -> cond assignment_commalist .)
    SEMICOLON       reduce using rule 193 (assign_cond -> cond assignment_commalist .)
    COMMA           shift and go to state 177


state 328

    (196) cond -> cond AMPERSANT . AMPERSANT

    AMPERSANT       shift and go to state 362


state 329

    (194) cond -> cond OR .

    OR              reduce using rule 194 (cond -> cond OR .)
    AND             reduce using rule 194 (cond -> cond OR .)
    AMPERSANT       reduce using rule 194 (cond -> cond OR .)
    LPAREN          reduce using rule 194 (cond -> cond OR .)
    ID              reduce using rule 194 (cond -> cond OR .)


state 330

    (192) assign_cond -> assign_cond cond . assignment_commalist
    (194) cond -> cond . OR
    (195) cond -> cond . AND
    (196) cond -> cond . AMPERSANT AMPERSANT
    (185) assignment_commalist -> . assignment
    (186) assignment_commalist -> . assignment_commalist COMMA assignment
    (187) assignment -> . column EQUAL scalar_exp
    (188) assignment -> . LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN
    (189) assignment -> . column LESS scalar_exp
    (190) assignment -> . column GREATER scalar_exp
    (191) assignment -> . column EQUAL NULL
    (200) column -> . ID

    OR              shift and go to state 329
    AND             shift and go to state 326
    AMPERSANT       shift and go to state 328
    LPAREN          shift and go to state 106
    ID              shift and go to state 78

    assignment_commalist           shift and go to state 363
    column                         shift and go to state 103
    assignment                     shift and go to state 104

state 331

    (172) values_or_query_spec -> VALUES LPAREN insert_atom_commalist RPAREN .

    SEMICOLON       reduce using rule 172 (values_or_query_spec -> VALUES LPAREN insert_atom_commalist RPAREN .)


state 332

    (175) insert_atom_commalist -> insert_atom_commalist COMMA . insert_atom
    (176) insert_atom -> . atom
    (177) insert_atom -> . NULL
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE

    NULL            shift and go to state 281
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55

    insert_atom                    shift and go to state 364
    atom                           shift and go to state 279

state 333

    (93) query_spec -> SELECT opt_all_distinct FROM selection . table_exp
    (103) table_exp -> . from_clause
    (104) table_exp -> . opt_where_clause
    (105) table_exp -> . opt_group_by_clause
    (106) from_clause -> . FROM table_ref_commalist
    (112) opt_where_clause -> . empty
    (113) opt_where_clause -> . where_clause
    (115) opt_group_by_clause -> . empty
    (116) opt_group_by_clause -> . GROUP BY column_ref_commalist
    (203) empty -> .
    (114) where_clause -> . search_condition
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    FROM            shift and go to state 207
    GROUP           shift and go to state 200
    SEMICOLON       reduce using rule 203 (empty -> .)
    WITH            reduce using rule 203 (empty -> .)
    CREATE          reduce using rule 203 (empty -> .)
    GRANT           reduce using rule 203 (empty -> .)
    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    opt_group_by_clause            shift and go to state 202
    opt_where_clause               shift and go to state 201
    where_clause                   shift and go to state 110
    between_predicate              shift and go to state 108
    function_ref                   shift and go to state 56
    table_exp                      shift and go to state 365
    all_cr_any_predicate           shift and go to state 111
    like_predicate                 shift and go to state 112
    search_condition               shift and go to state 113
    from_clause                    shift and go to state 205
    empty                          shift and go to state 206
    predicate                      shift and go to state 115
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    in_predicate                   shift and go to state 119
    test_for_null                  shift and go to state 121
    scalar_exp                     shift and go to state 122
    existence_test                 shift and go to state 123
    column_ref                     shift and go to state 120

state 334

    (87) table_constraint_def -> FOREIGN KEY LPAREN column_commalist . RPAREN REFERENCES table
    (88) table_constraint_def -> FOREIGN KEY LPAREN column_commalist . RPAREN REFERENCES table LPAREN column_commalist RPAREN
    (82) column_commalist -> column_commalist . COMMA column

    RPAREN          shift and go to state 366
    COMMA           shift and go to state 125


state 335

    (89) table_constraint_def -> CHECK LPAREN search_condition RPAREN .

    RPAREN          reduce using rule 89 (table_constraint_def -> CHECK LPAREN search_condition RPAREN .)
    COMMA           reduce using rule 89 (table_constraint_def -> CHECK LPAREN search_condition RPAREN .)


state 336

    (85) table_constraint_def -> UNIQUE LPAREN column_commalist RPAREN .

    RPAREN          reduce using rule 85 (table_constraint_def -> UNIQUE LPAREN column_commalist RPAREN .)
    COMMA           reduce using rule 85 (table_constraint_def -> UNIQUE LPAREN column_commalist RPAREN .)


state 337

    (43) column_def_opt -> DEFAULT NULL .

    NOT             reduce using rule 43 (column_def_opt -> DEFAULT NULL .)
    NULL            reduce using rule 43 (column_def_opt -> DEFAULT NULL .)
    DEFAULT         reduce using rule 43 (column_def_opt -> DEFAULT NULL .)
    CHECK           reduce using rule 43 (column_def_opt -> DEFAULT NULL .)
    REFERENCES      reduce using rule 43 (column_def_opt -> DEFAULT NULL .)
    RPAREN          reduce using rule 43 (column_def_opt -> DEFAULT NULL .)
    COMMA           reduce using rule 43 (column_def_opt -> DEFAULT NULL .)


state 338

    (44) column_def_opt -> DEFAULT USER .

    NOT             reduce using rule 44 (column_def_opt -> DEFAULT USER .)
    NULL            reduce using rule 44 (column_def_opt -> DEFAULT USER .)
    DEFAULT         reduce using rule 44 (column_def_opt -> DEFAULT USER .)
    CHECK           reduce using rule 44 (column_def_opt -> DEFAULT USER .)
    REFERENCES      reduce using rule 44 (column_def_opt -> DEFAULT USER .)
    RPAREN          reduce using rule 44 (column_def_opt -> DEFAULT USER .)
    COMMA           reduce using rule 44 (column_def_opt -> DEFAULT USER .)


state 339

    (36) column_def_opt_list -> column_def_opt_list column_def_opt .

    NOT             reduce using rule 36 (column_def_opt_list -> column_def_opt_list column_def_opt .)
    NULL            reduce using rule 36 (column_def_opt_list -> column_def_opt_list column_def_opt .)
    DEFAULT         reduce using rule 36 (column_def_opt_list -> column_def_opt_list column_def_opt .)
    CHECK           reduce using rule 36 (column_def_opt_list -> column_def_opt_list column_def_opt .)
    REFERENCES      reduce using rule 36 (column_def_opt_list -> column_def_opt_list column_def_opt .)
    RPAREN          reduce using rule 36 (column_def_opt_list -> column_def_opt_list column_def_opt .)
    COMMA           reduce using rule 36 (column_def_opt_list -> column_def_opt_list column_def_opt .)


state 340

    (46) column_def_opt -> REFERENCES table .
    (47) column_def_opt -> REFERENCES table . LPAREN column_commalist RPAREN

    NOT             reduce using rule 46 (column_def_opt -> REFERENCES table .)
    NULL            reduce using rule 46 (column_def_opt -> REFERENCES table .)
    DEFAULT         reduce using rule 46 (column_def_opt -> REFERENCES table .)
    CHECK           reduce using rule 46 (column_def_opt -> REFERENCES table .)
    REFERENCES      reduce using rule 46 (column_def_opt -> REFERENCES table .)
    RPAREN          reduce using rule 46 (column_def_opt -> REFERENCES table .)
    COMMA           reduce using rule 46 (column_def_opt -> REFERENCES table .)
    LPAREN          shift and go to state 367


state 341

    (39) column_def_opt -> NOT NULL .
    (41) column_def_opt -> NOT NULL . UNIQUE
    (42) column_def_opt -> NOT NULL . PRIMARY KEY

    NOT             reduce using rule 39 (column_def_opt -> NOT NULL .)
    NULL            reduce using rule 39 (column_def_opt -> NOT NULL .)
    DEFAULT         reduce using rule 39 (column_def_opt -> NOT NULL .)
    CHECK           reduce using rule 39 (column_def_opt -> NOT NULL .)
    REFERENCES      reduce using rule 39 (column_def_opt -> NOT NULL .)
    RPAREN          reduce using rule 39 (column_def_opt -> NOT NULL .)
    COMMA           reduce using rule 39 (column_def_opt -> NOT NULL .)
    UNIQUE          shift and go to state 368
    PRIMARY         shift and go to state 369


state 342

    (45) column_def_opt -> CHECK LPAREN . search_condition RPAREN
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    predicate                      shift and go to state 115
    between_predicate              shift and go to state 108
    all_cr_any_predicate           shift and go to state 111
    in_predicate                   shift and go to state 119
    column_ref                     shift and go to state 120
    test_for_null                  shift and go to state 121
    search_condition               shift and go to state 370
    existence_test                 shift and go to state 123
    like_predicate                 shift and go to state 112
    scalar_exp                     shift and go to state 122
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    function_ref                   shift and go to state 56

state 343

    (25) data_type -> CHAR LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 371


state 344

    (27) data_type -> VARCHAR LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 372


state 345

    (35) identity -> LPAREN . literal COMMA literal RPAREN
    (31) literal -> . literal ID
    (32) literal -> . ID
    (33) literal -> . literal NUMBER
    (34) literal -> . NUMBER

    ID              shift and go to state 375
    NUMBER          shift and go to state 373

    literal                        shift and go to state 374

state 346

    (24) data_type -> INT IDENTITY identity .

    NOT             reduce using rule 24 (data_type -> INT IDENTITY identity .)
    NULL            reduce using rule 24 (data_type -> INT IDENTITY identity .)
    DEFAULT         reduce using rule 24 (data_type -> INT IDENTITY identity .)
    CHECK           reduce using rule 24 (data_type -> INT IDENTITY identity .)
    REFERENCES      reduce using rule 24 (data_type -> INT IDENTITY identity .)
    RPAREN          reduce using rule 24 (data_type -> INT IDENTITY identity .)
    COMMA           reduce using rule 24 (data_type -> INT IDENTITY identity .)


state 347

    (86) table_constraint_def -> PRIMARY KEY LPAREN column_commalist . RPAREN
    (82) column_commalist -> column_commalist . COMMA column

    RPAREN          shift and go to state 376
    COMMA           shift and go to state 125


state 348

    (95) opt_with_check_option -> WITH CHECK . OPTION

    OPTION          shift and go to state 377


state 349

    (188) assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist . RPAREN
    (186) assignment_commalist -> assignment_commalist . COMMA assignment

    RPAREN          shift and go to state 378
    COMMA           shift and go to state 177


state 350

    (62) subquery -> LPAREN SELECT opt_all_distinct selection . table_exp RPAREN
    (103) table_exp -> . from_clause
    (104) table_exp -> . opt_where_clause
    (105) table_exp -> . opt_group_by_clause
    (106) from_clause -> . FROM table_ref_commalist
    (112) opt_where_clause -> . empty
    (113) opt_where_clause -> . where_clause
    (115) opt_group_by_clause -> . empty
    (116) opt_group_by_clause -> . GROUP BY column_ref_commalist
    (203) empty -> .
    (114) where_clause -> . search_condition
    (48) search_condition -> . search_condition OR search_condition
    (49) search_condition -> . search_condition AND search_condition
    (50) search_condition -> . NOT search_condition
    (51) search_condition -> . LPAREN search_condition RPAREN
    (52) search_condition -> . predicate
    (53) predicate -> . comparison_predicate
    (54) predicate -> . between_predicate
    (55) predicate -> . like_predicate
    (56) predicate -> . test_for_null
    (57) predicate -> . in_predicate
    (58) predicate -> . all_cr_any_predicate
    (59) predicate -> . existence_test
    (60) comparison_predicate -> . scalar_exp COMPARISON scalar_exp
    (61) comparison_predicate -> . scalar_exp COMPARISON subquery
    (63) between_predicate -> . scalar_exp NOT BETWEEN scalar_exp AND scalar_exp
    (64) between_predicate -> . scalar_exp BETWEEN scalar_exp AND scalar_exp
    (65) like_predicate -> . scalar_exp NOT LIKE atom empty
    (66) like_predicate -> . scalar_exp LIKE atom empty
    (67) test_for_null -> . column_ref IS NOT NULL
    (68) test_for_null -> . column_ref IS NULL
    (69) in_predicate -> . scalar_exp NOT IN LPAREN subquery RPAREN
    (70) in_predicate -> . scalar_exp IN LPAREN subquery RPAREN
    (71) in_predicate -> . scalar_exp NOT IN LPAREN atom_commalist RPAREN
    (72) in_predicate -> . scalar_exp IN LPAREN atom_commalist RPAREN
    (75) all_cr_any_predicate -> . scalar_exp COMPARISON any_all_some subquery
    (79) existence_test -> . EXISTS subquery
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    FROM            shift and go to state 207
    GROUP           shift and go to state 200
    RPAREN          reduce using rule 203 (empty -> .)
    NOT             shift and go to state 124
    LPAREN          shift and go to state 117
    EXISTS          shift and go to state 116
    ID              shift and go to state 61
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    AMMSC           shift and go to state 64

    opt_group_by_clause            shift and go to state 202
    opt_where_clause               shift and go to state 201
    where_clause                   shift and go to state 110
    between_predicate              shift and go to state 108
    function_ref                   shift and go to state 56
    table_exp                      shift and go to state 379
    all_cr_any_predicate           shift and go to state 111
    like_predicate                 shift and go to state 112
    search_condition               shift and go to state 113
    from_clause                    shift and go to state 205
    empty                          shift and go to state 206
    predicate                      shift and go to state 115
    atom                           shift and go to state 59
    comparison_predicate           shift and go to state 118
    in_predicate                   shift and go to state 119
    test_for_null                  shift and go to state 121
    scalar_exp                     shift and go to state 122
    existence_test                 shift and go to state 123
    column_ref                     shift and go to state 120

state 351

    (72) in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN .

    OR              reduce using rule 72 (in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN .)
    AND             reduce using rule 72 (in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN .)
    SEMICOLON       reduce using rule 72 (in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN .)
    WITH            reduce using rule 72 (in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN .)
    CREATE          reduce using rule 72 (in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN .)
    GRANT           reduce using rule 72 (in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN .)
    RPAREN          reduce using rule 72 (in_predicate -> scalar_exp IN LPAREN atom_commalist RPAREN .)


state 352

    (74) atom_commalist -> atom_commalist COMMA . atom
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE

    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55

    atom                           shift and go to state 380

state 353

    (70) in_predicate -> scalar_exp IN LPAREN subquery RPAREN .

    OR              reduce using rule 70 (in_predicate -> scalar_exp IN LPAREN subquery RPAREN .)
    AND             reduce using rule 70 (in_predicate -> scalar_exp IN LPAREN subquery RPAREN .)
    SEMICOLON       reduce using rule 70 (in_predicate -> scalar_exp IN LPAREN subquery RPAREN .)
    WITH            reduce using rule 70 (in_predicate -> scalar_exp IN LPAREN subquery RPAREN .)
    CREATE          reduce using rule 70 (in_predicate -> scalar_exp IN LPAREN subquery RPAREN .)
    GRANT           reduce using rule 70 (in_predicate -> scalar_exp IN LPAREN subquery RPAREN .)
    RPAREN          reduce using rule 70 (in_predicate -> scalar_exp IN LPAREN subquery RPAREN .)


state 354

    (64) between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 64 (between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp .)
    AND             reduce using rule 64 (between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp .)
    SEMICOLON       reduce using rule 64 (between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp .)
    RPAREN          reduce using rule 64 (between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp .)
    WITH            reduce using rule 64 (between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp .)
    CREATE          reduce using rule 64 (between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp .)
    GRANT           reduce using rule 64 (between_predicate -> scalar_exp BETWEEN scalar_exp AND scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 355

    (65) like_predicate -> scalar_exp NOT LIKE atom empty .

    OR              reduce using rule 65 (like_predicate -> scalar_exp NOT LIKE atom empty .)
    AND             reduce using rule 65 (like_predicate -> scalar_exp NOT LIKE atom empty .)
    SEMICOLON       reduce using rule 65 (like_predicate -> scalar_exp NOT LIKE atom empty .)
    WITH            reduce using rule 65 (like_predicate -> scalar_exp NOT LIKE atom empty .)
    CREATE          reduce using rule 65 (like_predicate -> scalar_exp NOT LIKE atom empty .)
    GRANT           reduce using rule 65 (like_predicate -> scalar_exp NOT LIKE atom empty .)
    RPAREN          reduce using rule 65 (like_predicate -> scalar_exp NOT LIKE atom empty .)


state 356

    (71) in_predicate -> scalar_exp NOT IN LPAREN atom_commalist . RPAREN
    (74) atom_commalist -> atom_commalist . COMMA atom

    RPAREN          shift and go to state 381
    COMMA           shift and go to state 352


state 357

    (69) in_predicate -> scalar_exp NOT IN LPAREN subquery . RPAREN

    RPAREN          shift and go to state 382


state 358

    (63) between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND . scalar_exp
    (119) scalar_exp -> . scalar_exp PLUS scalar_exp
    (120) scalar_exp -> . scalar_exp MINUS scalar_exp
    (121) scalar_exp -> . scalar_exp EQUAL scalar_exp
    (122) scalar_exp -> . scalar_exp TIMES scalar_exp
    (123) scalar_exp -> . scalar_exp DIVIDE scalar_exp
    (124) scalar_exp -> . atom
    (125) scalar_exp -> . column_ref
    (126) scalar_exp -> . function_ref
    (127) scalar_exp -> . LPAREN scalar_exp RPAREN
    (152) atom -> . QUOTE parameter_ref QUOTE
    (153) atom -> . NUMBER
    (154) atom -> . QUOTE DATE1 QUOTE
    (155) atom -> . QUOTE USER QUOTE
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID
    (131) function_ref -> . AMMSC LPAREN TIMES RPAREN
    (132) function_ref -> . AMMSC LPAREN DISTINCT column_ref RPAREN
    (133) function_ref -> . AMMSC LPAREN ALL scalar_exp RPAREN
    (134) function_ref -> . AMMSC LPAREN scalar_exp RPAREN

    LPAREN          shift and go to state 58
    QUOTE           shift and go to state 57
    NUMBER          shift and go to state 55
    ID              shift and go to state 61
    AMMSC           shift and go to state 64

    column_ref                     shift and go to state 62
    function_ref                   shift and go to state 56
    scalar_exp                     shift and go to state 383
    atom                           shift and go to state 59

state 359

    (137) opt_with_grant_option -> WITH GRANT OPTION .

    SEMICOLON       reduce using rule 137 (opt_with_grant_option -> WITH GRANT OPTION .)
    CREATE          reduce using rule 137 (opt_with_grant_option -> WITH GRANT OPTION .)
    GRANT           reduce using rule 137 (opt_with_grant_option -> WITH GRANT OPTION .)


state 360

    (118) column_ref_commalist -> column_ref_commalist COMMA . column_ref
    (128) column_ref -> . ID
    (129) column_ref -> . ID DOT ID
    (130) column_ref -> . ID DOT ID DOT ID

    ID              shift and go to state 61

    column_ref                     shift and go to state 384

state 361

    (108) table_ref_commalist -> table_ref_commalist COMMA table_ref .

    COMMA           reduce using rule 108 (table_ref_commalist -> table_ref_commalist COMMA table_ref .)
    SEMICOLON       reduce using rule 108 (table_ref_commalist -> table_ref_commalist COMMA table_ref .)
    WITH            reduce using rule 108 (table_ref_commalist -> table_ref_commalist COMMA table_ref .)
    CREATE          reduce using rule 108 (table_ref_commalist -> table_ref_commalist COMMA table_ref .)
    GRANT           reduce using rule 108 (table_ref_commalist -> table_ref_commalist COMMA table_ref .)
    RPAREN          reduce using rule 108 (table_ref_commalist -> table_ref_commalist COMMA table_ref .)


state 362

    (196) cond -> cond AMPERSANT AMPERSANT .

    OR              reduce using rule 196 (cond -> cond AMPERSANT AMPERSANT .)
    AND             reduce using rule 196 (cond -> cond AMPERSANT AMPERSANT .)
    AMPERSANT       reduce using rule 196 (cond -> cond AMPERSANT AMPERSANT .)
    LPAREN          reduce using rule 196 (cond -> cond AMPERSANT AMPERSANT .)
    ID              reduce using rule 196 (cond -> cond AMPERSANT AMPERSANT .)


state 363

    (192) assign_cond -> assign_cond cond assignment_commalist .
    (186) assignment_commalist -> assignment_commalist . COMMA assignment

    AND             reduce using rule 192 (assign_cond -> assign_cond cond assignment_commalist .)
    OR              reduce using rule 192 (assign_cond -> assign_cond cond assignment_commalist .)
    AMPERSANT       reduce using rule 192 (assign_cond -> assign_cond cond assignment_commalist .)
    SEMICOLON       reduce using rule 192 (assign_cond -> assign_cond cond assignment_commalist .)
    COMMA           shift and go to state 177


state 364

    (175) insert_atom_commalist -> insert_atom_commalist COMMA insert_atom .

    RPAREN          reduce using rule 175 (insert_atom_commalist -> insert_atom_commalist COMMA insert_atom .)
    COMMA           reduce using rule 175 (insert_atom_commalist -> insert_atom_commalist COMMA insert_atom .)


state 365

    (93) query_spec -> SELECT opt_all_distinct FROM selection table_exp .

    SEMICOLON       reduce using rule 93 (query_spec -> SELECT opt_all_distinct FROM selection table_exp .)
    WITH            reduce using rule 93 (query_spec -> SELECT opt_all_distinct FROM selection table_exp .)
    CREATE          reduce using rule 93 (query_spec -> SELECT opt_all_distinct FROM selection table_exp .)
    GRANT           reduce using rule 93 (query_spec -> SELECT opt_all_distinct FROM selection table_exp .)


state 366

    (87) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN . REFERENCES table
    (88) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN . REFERENCES table LPAREN column_commalist RPAREN

    REFERENCES      shift and go to state 385


state 367

    (47) column_def_opt -> REFERENCES table LPAREN . column_commalist RPAREN
    (80) column_commalist -> . empty
    (81) column_commalist -> . column
    (82) column_commalist -> . column_commalist COMMA column
    (83) column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .
    (200) column -> . ID

    LPAREN          shift and go to state 77
    RPAREN          reduce using rule 203 (empty -> .)
    COMMA           reduce using rule 203 (empty -> .)
    ID              shift and go to state 78

    column                         shift and go to state 75
    empty                          shift and go to state 79
    column_commalist               shift and go to state 386

state 368

    (41) column_def_opt -> NOT NULL UNIQUE .

    NOT             reduce using rule 41 (column_def_opt -> NOT NULL UNIQUE .)
    NULL            reduce using rule 41 (column_def_opt -> NOT NULL UNIQUE .)
    DEFAULT         reduce using rule 41 (column_def_opt -> NOT NULL UNIQUE .)
    CHECK           reduce using rule 41 (column_def_opt -> NOT NULL UNIQUE .)
    REFERENCES      reduce using rule 41 (column_def_opt -> NOT NULL UNIQUE .)
    RPAREN          reduce using rule 41 (column_def_opt -> NOT NULL UNIQUE .)
    COMMA           reduce using rule 41 (column_def_opt -> NOT NULL UNIQUE .)


state 369

    (42) column_def_opt -> NOT NULL PRIMARY . KEY

    KEY             shift and go to state 387


state 370

    (45) column_def_opt -> CHECK LPAREN search_condition . RPAREN
    (48) search_condition -> search_condition . OR search_condition
    (49) search_condition -> search_condition . AND search_condition

    RPAREN          shift and go to state 388
    OR              shift and go to state 181
    AND             shift and go to state 180


state 371

    (25) data_type -> CHAR LPAREN NUMBER RPAREN .

    NOT             reduce using rule 25 (data_type -> CHAR LPAREN NUMBER RPAREN .)
    NULL            reduce using rule 25 (data_type -> CHAR LPAREN NUMBER RPAREN .)
    DEFAULT         reduce using rule 25 (data_type -> CHAR LPAREN NUMBER RPAREN .)
    CHECK           reduce using rule 25 (data_type -> CHAR LPAREN NUMBER RPAREN .)
    REFERENCES      reduce using rule 25 (data_type -> CHAR LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 25 (data_type -> CHAR LPAREN NUMBER RPAREN .)
    COMMA           reduce using rule 25 (data_type -> CHAR LPAREN NUMBER RPAREN .)


state 372

    (27) data_type -> VARCHAR LPAREN NUMBER RPAREN .

    NOT             reduce using rule 27 (data_type -> VARCHAR LPAREN NUMBER RPAREN .)
    NULL            reduce using rule 27 (data_type -> VARCHAR LPAREN NUMBER RPAREN .)
    DEFAULT         reduce using rule 27 (data_type -> VARCHAR LPAREN NUMBER RPAREN .)
    CHECK           reduce using rule 27 (data_type -> VARCHAR LPAREN NUMBER RPAREN .)
    REFERENCES      reduce using rule 27 (data_type -> VARCHAR LPAREN NUMBER RPAREN .)
    RPAREN          reduce using rule 27 (data_type -> VARCHAR LPAREN NUMBER RPAREN .)
    COMMA           reduce using rule 27 (data_type -> VARCHAR LPAREN NUMBER RPAREN .)


state 373

    (34) literal -> NUMBER .

    COMMA           reduce using rule 34 (literal -> NUMBER .)
    ID              reduce using rule 34 (literal -> NUMBER .)
    NUMBER          reduce using rule 34 (literal -> NUMBER .)
    RPAREN          reduce using rule 34 (literal -> NUMBER .)


state 374

    (35) identity -> LPAREN literal . COMMA literal RPAREN
    (31) literal -> literal . ID
    (33) literal -> literal . NUMBER

    COMMA           shift and go to state 390
    ID              shift and go to state 391
    NUMBER          shift and go to state 389


state 375

    (32) literal -> ID .

    COMMA           reduce using rule 32 (literal -> ID .)
    ID              reduce using rule 32 (literal -> ID .)
    NUMBER          reduce using rule 32 (literal -> ID .)
    RPAREN          reduce using rule 32 (literal -> ID .)


state 376

    (86) table_constraint_def -> PRIMARY KEY LPAREN column_commalist RPAREN .

    RPAREN          reduce using rule 86 (table_constraint_def -> PRIMARY KEY LPAREN column_commalist RPAREN .)
    COMMA           reduce using rule 86 (table_constraint_def -> PRIMARY KEY LPAREN column_commalist RPAREN .)


state 377

    (95) opt_with_check_option -> WITH CHECK OPTION .

    SEMICOLON       reduce using rule 95 (opt_with_check_option -> WITH CHECK OPTION .)
    CREATE          reduce using rule 95 (opt_with_check_option -> WITH CHECK OPTION .)
    GRANT           reduce using rule 95 (opt_with_check_option -> WITH CHECK OPTION .)


state 378

    (188) assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .

    WHERE           reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    COMMA           reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    NOT             reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    LPAREN          reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    EXISTS          reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    ID              reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    QUOTE           reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    NUMBER          reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    AMMSC           reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    SEMICOLON       reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    AMPERSANT       reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    AND             reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    OR              reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)
    RPAREN          reduce using rule 188 (assignment -> LPAREN assignment_commalist AMPERSANT AMPERSANT assignment_commalist RPAREN .)


state 379

    (62) subquery -> LPAREN SELECT opt_all_distinct selection table_exp . RPAREN

    RPAREN          shift and go to state 392


state 380

    (74) atom_commalist -> atom_commalist COMMA atom .

    RPAREN          reduce using rule 74 (atom_commalist -> atom_commalist COMMA atom .)
    COMMA           reduce using rule 74 (atom_commalist -> atom_commalist COMMA atom .)


state 381

    (71) in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN .

    OR              reduce using rule 71 (in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN .)
    AND             reduce using rule 71 (in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN .)
    SEMICOLON       reduce using rule 71 (in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN .)
    WITH            reduce using rule 71 (in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN .)
    CREATE          reduce using rule 71 (in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN .)
    GRANT           reduce using rule 71 (in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN .)
    RPAREN          reduce using rule 71 (in_predicate -> scalar_exp NOT IN LPAREN atom_commalist RPAREN .)


state 382

    (69) in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN .

    OR              reduce using rule 69 (in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN .)
    AND             reduce using rule 69 (in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN .)
    SEMICOLON       reduce using rule 69 (in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN .)
    WITH            reduce using rule 69 (in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN .)
    CREATE          reduce using rule 69 (in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN .)
    GRANT           reduce using rule 69 (in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN .)
    RPAREN          reduce using rule 69 (in_predicate -> scalar_exp NOT IN LPAREN subquery RPAREN .)


state 383

    (63) between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp .
    (119) scalar_exp -> scalar_exp . PLUS scalar_exp
    (120) scalar_exp -> scalar_exp . MINUS scalar_exp
    (121) scalar_exp -> scalar_exp . EQUAL scalar_exp
    (122) scalar_exp -> scalar_exp . TIMES scalar_exp
    (123) scalar_exp -> scalar_exp . DIVIDE scalar_exp

    OR              reduce using rule 63 (between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp .)
    AND             reduce using rule 63 (between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp .)
    SEMICOLON       reduce using rule 63 (between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp .)
    RPAREN          reduce using rule 63 (between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp .)
    WITH            reduce using rule 63 (between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp .)
    CREATE          reduce using rule 63 (between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp .)
    GRANT           reduce using rule 63 (between_predicate -> scalar_exp NOT BETWEEN scalar_exp AND scalar_exp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    EQUAL           shift and go to state 92
    TIMES           shift and go to state 93
    DIVIDE          shift and go to state 91


state 384

    (118) column_ref_commalist -> column_ref_commalist COMMA column_ref .

    COMMA           reduce using rule 118 (column_ref_commalist -> column_ref_commalist COMMA column_ref .)
    SEMICOLON       reduce using rule 118 (column_ref_commalist -> column_ref_commalist COMMA column_ref .)
    WITH            reduce using rule 118 (column_ref_commalist -> column_ref_commalist COMMA column_ref .)
    CREATE          reduce using rule 118 (column_ref_commalist -> column_ref_commalist COMMA column_ref .)
    GRANT           reduce using rule 118 (column_ref_commalist -> column_ref_commalist COMMA column_ref .)
    RPAREN          reduce using rule 118 (column_ref_commalist -> column_ref_commalist COMMA column_ref .)


state 385

    (87) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES . table
    (88) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES . table LPAREN column_commalist RPAREN
    (201) table -> . ID
    (202) table -> . ID DOT ID

    ID              shift and go to state 42

    table                          shift and go to state 393

state 386

    (47) column_def_opt -> REFERENCES table LPAREN column_commalist . RPAREN
    (82) column_commalist -> column_commalist . COMMA column

    RPAREN          shift and go to state 394
    COMMA           shift and go to state 125


state 387

    (42) column_def_opt -> NOT NULL PRIMARY KEY .

    NOT             reduce using rule 42 (column_def_opt -> NOT NULL PRIMARY KEY .)
    NULL            reduce using rule 42 (column_def_opt -> NOT NULL PRIMARY KEY .)
    DEFAULT         reduce using rule 42 (column_def_opt -> NOT NULL PRIMARY KEY .)
    CHECK           reduce using rule 42 (column_def_opt -> NOT NULL PRIMARY KEY .)
    REFERENCES      reduce using rule 42 (column_def_opt -> NOT NULL PRIMARY KEY .)
    RPAREN          reduce using rule 42 (column_def_opt -> NOT NULL PRIMARY KEY .)
    COMMA           reduce using rule 42 (column_def_opt -> NOT NULL PRIMARY KEY .)


state 388

    (45) column_def_opt -> CHECK LPAREN search_condition RPAREN .

    NOT             reduce using rule 45 (column_def_opt -> CHECK LPAREN search_condition RPAREN .)
    NULL            reduce using rule 45 (column_def_opt -> CHECK LPAREN search_condition RPAREN .)
    DEFAULT         reduce using rule 45 (column_def_opt -> CHECK LPAREN search_condition RPAREN .)
    CHECK           reduce using rule 45 (column_def_opt -> CHECK LPAREN search_condition RPAREN .)
    REFERENCES      reduce using rule 45 (column_def_opt -> CHECK LPAREN search_condition RPAREN .)
    RPAREN          reduce using rule 45 (column_def_opt -> CHECK LPAREN search_condition RPAREN .)
    COMMA           reduce using rule 45 (column_def_opt -> CHECK LPAREN search_condition RPAREN .)


state 389

    (33) literal -> literal NUMBER .

    COMMA           reduce using rule 33 (literal -> literal NUMBER .)
    ID              reduce using rule 33 (literal -> literal NUMBER .)
    NUMBER          reduce using rule 33 (literal -> literal NUMBER .)
    RPAREN          reduce using rule 33 (literal -> literal NUMBER .)


state 390

    (35) identity -> LPAREN literal COMMA . literal RPAREN
    (31) literal -> . literal ID
    (32) literal -> . ID
    (33) literal -> . literal NUMBER
    (34) literal -> . NUMBER

    ID              shift and go to state 375
    NUMBER          shift and go to state 373

    literal                        shift and go to state 395

state 391

    (31) literal -> literal ID .

    COMMA           reduce using rule 31 (literal -> literal ID .)
    ID              reduce using rule 31 (literal -> literal ID .)
    NUMBER          reduce using rule 31 (literal -> literal ID .)
    RPAREN          reduce using rule 31 (literal -> literal ID .)


state 392

    (62) subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN .

    RPAREN          reduce using rule 62 (subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN .)
    OR              reduce using rule 62 (subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN .)
    AND             reduce using rule 62 (subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN .)
    SEMICOLON       reduce using rule 62 (subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN .)
    WITH            reduce using rule 62 (subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN .)
    CREATE          reduce using rule 62 (subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN .)
    GRANT           reduce using rule 62 (subquery -> LPAREN SELECT opt_all_distinct selection table_exp RPAREN .)


state 393

    (87) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table .
    (88) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table . LPAREN column_commalist RPAREN

    RPAREN          reduce using rule 87 (table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table .)
    COMMA           reduce using rule 87 (table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table .)
    LPAREN          shift and go to state 396


state 394

    (47) column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN .

    NOT             reduce using rule 47 (column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN .)
    NULL            reduce using rule 47 (column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN .)
    DEFAULT         reduce using rule 47 (column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN .)
    CHECK           reduce using rule 47 (column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN .)
    REFERENCES      reduce using rule 47 (column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN .)
    RPAREN          reduce using rule 47 (column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN .)
    COMMA           reduce using rule 47 (column_def_opt -> REFERENCES table LPAREN column_commalist RPAREN .)


state 395

    (35) identity -> LPAREN literal COMMA literal . RPAREN
    (31) literal -> literal . ID
    (33) literal -> literal . NUMBER

    RPAREN          shift and go to state 397
    ID              shift and go to state 391
    NUMBER          shift and go to state 389


state 396

    (88) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN . column_commalist RPAREN
    (80) column_commalist -> . empty
    (81) column_commalist -> . column
    (82) column_commalist -> . column_commalist COMMA column
    (83) column_commalist -> . LPAREN column_commalist RPAREN
    (203) empty -> .
    (200) column -> . ID

    LPAREN          shift and go to state 77
    RPAREN          reduce using rule 203 (empty -> .)
    COMMA           reduce using rule 203 (empty -> .)
    ID              shift and go to state 78

    column                         shift and go to state 75
    empty                          shift and go to state 79
    column_commalist               shift and go to state 398

state 397

    (35) identity -> LPAREN literal COMMA literal RPAREN .

    NOT             reduce using rule 35 (identity -> LPAREN literal COMMA literal RPAREN .)
    NULL            reduce using rule 35 (identity -> LPAREN literal COMMA literal RPAREN .)
    DEFAULT         reduce using rule 35 (identity -> LPAREN literal COMMA literal RPAREN .)
    CHECK           reduce using rule 35 (identity -> LPAREN literal COMMA literal RPAREN .)
    REFERENCES      reduce using rule 35 (identity -> LPAREN literal COMMA literal RPAREN .)
    RPAREN          reduce using rule 35 (identity -> LPAREN literal COMMA literal RPAREN .)
    COMMA           reduce using rule 35 (identity -> LPAREN literal COMMA literal RPAREN .)


state 398

    (88) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist . RPAREN
    (82) column_commalist -> column_commalist . COMMA column

    RPAREN          shift and go to state 399
    COMMA           shift and go to state 125


state 399

    (88) table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN .

    RPAREN          reduce using rule 88 (table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN .)
    COMMA           reduce using rule 88 (table_constraint_def -> FOREIGN KEY LPAREN column_commalist RPAREN REFERENCES table LPAREN column_commalist RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 5 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 140 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 141 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 143 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 143 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 143 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 144 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 144 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 193 resolved as shift
WARNING: shift/reduce conflict for AND in state 193 resolved as shift
WARNING: shift/reduce conflict for NOT in state 223 resolved as shift
WARNING: shift/reduce conflict for NULL in state 223 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 223 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 223 resolved as shift
WARNING: shift/reduce conflict for REFERENCES in state 223 resolved as shift
WARNING: shift/reduce conflict for OR in state 242 resolved as shift
WARNING: shift/reduce conflict for AND in state 242 resolved as shift
WARNING: shift/reduce conflict for OR in state 243 resolved as shift
WARNING: shift/reduce conflict for AND in state 243 resolved as shift
WARNING: shift/reduce conflict for NOT in state 289 resolved as shift
WARNING: shift/reduce conflict for NULL in state 289 resolved as shift
WARNING: shift/reduce conflict for DEFAULT in state 289 resolved as shift
WARNING: shift/reduce conflict for CHECK in state 289 resolved as shift
WARNING: shift/reduce conflict for REFERENCES in state 289 resolved as shift
WARNING: reduce/reduce conflict in state 206 resolved using rule (opt_where_clause -> empty)
WARNING: rejected rule (opt_group_by_clause -> empty) in state 206
WARNING: reduce/reduce conflict in state 240 resolved using rule (column_ref -> ID)
WARNING: rejected rule (column -> ID) in state 240
WARNING: reduce/reduce conflict in state 289 resolved using rule (column_def -> column data_type column_def_opt_list)
WARNING: rejected rule (empty -> <empty>) in state 289
WARNING: reduce/reduce conflict in state 305 resolved using rule (column_ref -> ID)
WARNING: rejected rule (column -> ID) in state 305
WARNING: Rule (opt_group_by_clause -> empty) is never reduced
